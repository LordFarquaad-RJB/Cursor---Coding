{"version":3,"file":"TrapSystem-v2.js","sources":["../src/trap-core.js","../src/trap-utils.js","../src/trap-ui.js","../src/trap-triggers.js","../src/trap-detector.js","../src/trap-detection.js","../src/trap-commands.js","../src/trap-interaction.js","../src/trap-macros.js","../src/index.js"],"sourcesContent":["// src/trap-core.js\n// Core configuration and state for TrapSystem v2\n\nexport const Config = {\n  DEBUG: false,\n  DEFAULT_GRID_SIZE: 70,\n  DEFAULT_SCALE: 5,\n  MIN_MOVEMENT_FACTOR: 0.1,\n  aura: {\n    TARGET_RADIUS_GRID_UNITS: 1.0,   // default aura size in GU\n    VISIBILITY_BOOST_GU: 0.2        // extra radius so aura is always visible\n  },\n  AURA_COLORS: {\n    ARMED: '#ff0000',           // Red for armed traps\n    ARMED_INTERACTION: '#ff8800', // Orange for armed interaction traps\n    DISARMED: '#808080',        // Gray for disarmed traps\n    DISARMED_INTERACTION: '#a0a0a0', // Light gray for disarmed interaction traps\n    PAUSED: '#ffff00',          // Yellow for paused traps\n    TRIGGERED: '#ff00ff',       // Magenta for triggered traps\n    DEPLETED: '#000000',        // Black for depleted traps\n    LOCKED: '#00ffff',          // Cyan for locked tokens\n    DETECTION: '#0000ff',       // Blue for detection range\n    DETECTED: '#00ff00',        // Green for detected traps\n    DISARMED_DETECTED: '#90ee90', // Light green for disarmed detected traps\n    DISARMED_UNDETECTED: '#d3d3d3', // Light gray for disarmed undetected traps\n    PASSIVE_DISABLED: '#800080'  // Purple for passive detection disabled\n  },\n  SKILL_TYPES: {\n    'acrobatics': 'ü§∏',\n    'animal_handling': 'ÔøΩ',\n    'arcana': 'üîÆ',\n    'athletics': 'üí™',\n    'deception': 'üé≠',\n    'history': 'üìö',\n    'insight': 'üëÅÔ∏è',\n    'intimidation': 'üò†',\n    'investigation': 'üîç',\n    'medicine': '‚öïÔ∏è',\n    'nature': 'üåø',\n    'perception': 'üëÄ',\n    'performance': 'üé™',\n    'persuasion': 'üí¨',\n    'religion': '‚õ™',\n    'sleight_of_hand': '‚úã',\n    'stealth': 'ü•∑',\n    'survival': 'üèïÔ∏è',\n    'thieves_tools': 'ÔøΩ',\n    'strength': '',\n    'dexterity': 'ü§∏',\n    'constitution': '‚ù§Ô∏è',\n    'intelligence': 'üß†',\n    'wisdom': 'ü¶â',\n    'charisma': '‚ú®'\n  },\n  messages: {\n    templates: {\n      PLAYER_ALERT: \"‚ö†Ô∏è Alert!\",\n      GM_SPOT: \"üéØ Passive Spot\"\n    },\n    defaults: {\n      playerNotice: \"You notice something suspicious nearby. Take a closer look?\",\n      gmNotice: \"{charName} (PP {charPP}) spotted {trapName} (DC {trapDC}) at {distanceToTrap}ft.\"\n    },\n    placeholders: {\n      charName: \"Character's name\",\n      trapName: \"Trap's name\",\n      charPP: \"Character's passive perception\",\n      trapDC: \"Trap's detection DC\",\n      distanceToTrap: \"Distance to trap in feet\",\n      luckBonus: \"Luck bonus applied\",\n      basePP: \"Base passive perception before bonuses\"\n    },\n    passiveNoticeDebounceTime: 100000 // 100 seconds\n  }\n};\n\n// Simple central state store (will be fleshed out later)\nexport const State = {\n  warnedInvalidGridPages: {},\n  pendingChecks: {},           // GM playerid -> pending check data\n  pendingChecksByChar: {},     // character id -> pending check data  \n  displayDCForCheck: {},       // playerid -> boolean (show DC in menus)\n  lockedTokens: {},           // token id -> lock data\n  triggersEnabled: true,       // global trigger state\n  safeMoveTokens: new Set(),\n  passivelyNoticedTraps: {},\n  recentlyNoticedPlayerMessages: {},\n  detectionAurasTemporarilyHidden: false,\n  hideAurasTimeout: null\n};\n\nexport const core = {\n  Config,\n  State\n};\n\nexport default core;","// src/trap-utils.js\n// Shared helper functions used across TrapSystem modules.\n// Initially contains only a subset (quick-win helpers) ‚Äì we will migrate\n// the rest of the giant utils object here piece-by-piece.\n\n/* eslint-disable no-console */\n\nimport { Config, State } from './trap-core.js';\n\nexport function log(message, type = 'info') {\n  const prefix = {\n    info: 'üìú',\n    error: '‚ùå',\n    success: '‚úÖ',\n    warning: '‚ö†Ô∏è',\n    debug: 'üîç'\n  }[type] || 'üìú';\n  console.log(`${prefix} TrapSystem: ${message}`);\n}\n\n// Quick-win utility #1 ‚Äì centralised trap-token validation\nexport function validateTrapToken(token, actionName = 'action') {\n  if (!token) {\n    log(`Error: No token supplied for ${actionName}.`, 'error');\n    return false;\n  }\n  if (!globalThis.TrapSystem || !globalThis.TrapSystem.utils || typeof globalThis.TrapSystem.utils.isTrap !== 'function') {\n    // During early bootstrap the monolith may not be loaded. We simply assume OK.\n    return true;\n  }\n  if (!globalThis.TrapSystem.utils.isTrap(token)) {\n    log(`Error: Selected token is not a trap. (${actionName})`, 'error');\n    return false;\n  }\n  return true;\n}\n\n// Quick-win utility #2 ‚Äì parameter length guard for chat commands\nexport function validateCommandArgs(args, minLength, commandName = 'command') {\n  if (args.length < minLength) {\n    log(`Error: Missing parameters for ${commandName}.`, 'error');\n    return false;\n  }\n  return true;\n}\n\nexport const TrapUtils = {\n  log,\n  validateTrapToken,\n  validateCommandArgs\n};\n\nexport default TrapUtils;\n\n// ------------------------------------------------------------------\n// Legacy util functions migrated from v1 (minimal initial subset)\n// ------------------------------------------------------------------\n\n// NOTE: These still rely on Roll20 API globals (getObj, sendChat, etc.) ‚Äì\n// that is OK because after bundling they run inside the Roll-20 sandbox.\n\nexport function playerIsGM(playerId) {\n  const player = getObj && getObj('player', playerId);\n  if (!player) return false;\n  return player.get('_online') && player.get('_type') === 'player' && player.get('_isGM');\n}\n\nexport function chat(message) {\n  if (typeof message !== 'string') return;\n  sendChat('TrapSystem', `/w gm ${message}`);\n}\n\nexport function getGMPlayerIds() {\n  const allPlayers = findObjs ? findObjs({ _type: 'player' }) : [];\n  return allPlayers.filter(p => playerIsGM(p.id)).map(p => p.id);\n}\n\nexport function whisper(recipientId, message) {\n  if (!recipientId || !message) return;\n  // First assume playerId\n  const player = getObj && getObj('player', recipientId);\n  if (player) {\n    sendChat('TrapSystem', `/w \"${player.get('displayname')}\" ${message}`);\n    return;\n  }\n  // Maybe a token representing a character ‚Üí whisper to controllers.\n  const token = getObj && getObj('graphic', recipientId);\n  if (token && token.get('represents')) {\n    const char = getObj('character', token.get('represents'));\n    if (char) {\n      const controllers = (char.get('controlledby') || '').split(',').map(s => s.trim()).filter(Boolean);\n      controllers.forEach(pid => {\n        const p = getObj('player', pid);\n        if (p) sendChat('TrapSystem', `/w \"${p.get('displayname')}\" ${message}`);\n      });\n      return;\n    }\n  }\n  // Fallback to GM\n  chat(`Could not find a valid recipient for ID ${recipientId}. Msg: ${message}`);\n}\n\nexport function decodeHtml(text) {\n  if (typeof text !== 'string') return text;\n  return text\n    .replace(/&amp;/g, '&')\n    .replace(/&lt;/g, '<')\n    .replace(/&gt;/g, '>')\n    .replace(/&quot;/g, '\"')\n    .replace(/&#39;/g, \"'\");\n}\n\n// Quick check to see if a token is a trap (based on gmnotes)\nexport function isTrap(token) {\n  if (!token) return false;\n  const notes = token.get ? token.get('gmnotes') : '';\n  if (!notes) return false;\n  let decoded = '';\n  try { decoded = decodeURIComponent(notes); } catch (e) { decoded = notes; }\n  return decoded.includes('!traptrigger');\n}\n\n// Utility for images (used by menus)\nexport function getTokenImageURL(token, size = 'med') {\n  if (!token) return 'üë§';\n  const sanitize = url => {\n    if (!url) return null;\n    let processed = url.replace(/(thumb|max)(?=\\.[^/]+$)/, size);\n    processed = processed.replace(/\\(/g, '%28').replace(/\\)/g, '%29').replace(/'/g, '%27').replace(/\"/g, '%22');\n    return processed;\n  };\n  let img = token.get('imgsrc');\n  if (!img) {\n    const charId = token.get('represents');\n    if (charId) {\n      const char = getObj('character', charId);\n      if (char) {\n        img = char.get('avatar') || char.get('imgsrc');\n      }\n    }\n  }\n  const sanitized = sanitize(img);\n  return sanitized || 'üë§';\n}\n\n// Build a tag-to-ID map for macro replacement\nexport function buildTagToIdMap(trapToken, trappedToken, extraTokens) {\n  const map = {};\n  if (trapToken) map.trap = trapToken.id || trapToken;\n  if (trappedToken) map.trapped = trappedToken.id || trappedToken;\n  if (extraTokens && typeof extraTokens === 'object') {\n    Object.keys(extraTokens).forEach(tag => {\n      const val = extraTokens[tag];\n      map[tag] = val && val.id ? val.id : val;\n    });\n  }\n  return map;\n}\n\n// Execute a macro with tag replacement\nexport function executeMacro(commandString, tagToIdMap = {}) {\n  if (!commandString || typeof commandString !== 'string') return false;\n  \n  let processedCommand = commandString.trim();\n  \n  // Handle macro references (#MacroName)\n  if (processedCommand.startsWith('#')) {\n    const macroName = processedCommand.substring(1);\n    const macro = findObjs({ _type: 'macro', name: macroName })[0];\n    if (macro) {\n      processedCommand = macro.get('action');\n    } else {\n      log(`Macro \"${macroName}\" not found`, 'error');\n      return false;\n    }\n  }\n  \n  // Handle disguised commands ($command -> !command)\n  if (processedCommand.startsWith('$')) {\n    processedCommand = '!' + processedCommand.substring(1);\n  }\n  \n  // Handle disguised templates (^{template} -> &{template})\n  if (processedCommand.startsWith('^')) {\n    processedCommand = '&' + processedCommand.substring(1);\n  }\n  \n  // Replace tags with IDs\n  for (const [tag, tokenId] of Object.entries(tagToIdMap)) {\n    if (tokenId) {\n      const tagRegex = new RegExp(`<&${tag}>`, 'g');\n      processedCommand = processedCommand.replace(tagRegex, tokenId);\n    }\n  }\n  \n  // Remove quotes if the entire command is wrapped in them\n  if (processedCommand.startsWith('\"') && processedCommand.endsWith('\"')) {\n    processedCommand = processedCommand.slice(1, -1);\n  }\n  \n  try {\n    // Execute the command\n    if (processedCommand.startsWith('!')) {\n      // API command\n      sendChat('TrapSystem', processedCommand);\n    } else if (processedCommand.startsWith('&{template:')) {\n      // Roll template\n      sendChat('TrapSystem', processedCommand);\n    } else {\n      // Plain text\n      sendChat('TrapSystem', processedCommand);\n    }\n    return true;\n  } catch (error) {\n    log(`Error executing macro: ${error.message}`, 'error');\n    return false;\n  }\n}\n\n// Merge into export object\nObject.assign(TrapUtils, {\n  playerIsGM,\n  chat,\n  getGMPlayerIds,\n  whisper,\n  decodeHtml,\n  isTrap,\n  getTokenImageURL,\n  buildTagToIdMap,\n  executeMacro\n});\n\n// ------------------------------------------------------------------\n// Geometry helpers (migrated)\n// ------------------------------------------------------------------\n\nfunction lineIntersection(x1, y1, x2, y2, x3, y3, x4, y4) {\n  const denom = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n  if (!denom) return null;\n  const t = ((x1 - x3) * (y3 - y4) - (y1 - y3) * (x3 - x4)) / denom;\n  const u = -((x1 - x2) * (y1 - y3) - (y1 - y2) * (x1 - x3)) / denom;\n  if (t >= 0 && t <= 1 && u >= 0 && u <= 1) {\n    return { x: x1 + t * (x2 - x1), y: y1 + t * (y2 - y1) };\n  }\n  return null;\n}\n\nfunction getTokenCenter(token) {\n  return { x: token.get('left'), y: token.get('top') };\n}\n\nfunction getOBBCorners(token) {\n  if (!token) return null;\n  const centerX = token.get('left');\n  const centerY = token.get('top');\n  const width = token.get('width');\n  const height = token.get('height');\n  const rotationDeg = token.get('rotation') || 0;\n  const rotationRad = rotationDeg * (Math.PI / 180);\n\n  const halfW = width / 2;\n  const halfH = height / 2;\n\n  const localCorners = [\n    { x: -halfW, y: -halfH }, // TL\n    { x: halfW, y: -halfH },  // TR\n    { x: halfW, y: halfH },   // BR\n    { x: -halfW, y: halfH }   // BL\n  ];\n\n  const cosR = Math.cos(rotationRad);\n  const sinR = Math.sin(rotationRad);\n  return localCorners.map(c => ({\n    x: centerX + c.x * cosR - c.y * sinR,\n    y: centerY + c.x * sinR + c.y * cosR\n  }));\n}\n\nfunction isPointInOBB(point, corners) {\n  if (!point || !Array.isArray(corners) || corners.length !== 4) return false;\n  const c0 = corners[0];\n  const c1 = corners[1];\n  const c3 = corners[3];\n  const ABx = c1.x - c0.x;\n  const ABy = c1.y - c0.y;\n  const ADx = c3.x - c0.x;\n  const ADy = c3.y - c0.y;\n  const APx = point.x - c0.x;\n  const APy = point.y - c0.y;\n  const dotAB_AP = APx * ABx + APy * ABy;\n  const dotAD_AP = APx * ADx + APy * ADy;\n  const magSqAB = ABx * ABx + ABy * ABy;\n  const magSqAD = ADx * ADx + ADy * ADy;\n  return (0 <= dotAB_AP && dotAB_AP <= magSqAB && 0 <= dotAD_AP && dotAD_AP <= magSqAD);\n}\n\nfunction getPageSettings(pageId) {\n  const page = getObj ? getObj('page', pageId) : null;\n  if (!page) {\n    if (!State.warnedInvalidGridPages[pageId || 'unknown']) {\n      log(`Page ${pageId} not found, using defaults`, 'warning');\n      State.warnedInvalidGridPages[pageId || 'unknown'] = true;\n    }\n    return {\n      gridSize: Config.DEFAULT_GRID_SIZE,\n      scale: Config.DEFAULT_SCALE,\n      gridType: 'square',\n      valid: false\n    };\n  }\n  let gridSize = page.get('gridsize');\n  const snap = page.get('snapping_increment');\n  if (snap === 0 || !gridSize || gridSize < 2) {\n    gridSize = Config.DEFAULT_GRID_SIZE;\n  }\n  return {\n    gridSize,\n    scale: page.get('scale_number') || Config.DEFAULT_SCALE,\n    gridType: page.get('grid_type'),\n    valid: true\n  };\n}\n\nfunction getTokenGridCoords(token) {\n  if (!token) return null;\n  const ps = getPageSettings(token.get('_pageid'));\n  const g = ps.gridSize;\n  const left = token.get('left');\n  const top = token.get('top');\n  const w = token.get('width');\n  const h = token.get('height');\n  return {\n    x: Math.round((left - w / 2) / g),\n    y: Math.round((top - h / 2) / g),\n    width: Math.ceil(w / g),\n    height: Math.ceil(h / g),\n    gridSize: g,\n    scale: ps.scale,\n    gridType: ps.gridType,\n    pixelX: left,\n    pixelY: top,\n    tokenWidth: w,\n    tokenHeight: h\n  };\n}\n\nfunction calculateTokenDistance(token1, token2) {\n  if (!token1 || !token2 || token1.get('_pageid') !== token2.get('_pageid')) return { pixelDistance: Infinity, mapUnitDistance: Infinity };\n  const ps = getPageSettings(token1.get('_pageid'));\n  const c1 = getTokenGridCoords(token1);\n  const c2 = getTokenGridCoords(token2);\n  const dx = c1.pixelX - c2.pixelX;\n  const dy = c1.pixelY - c2.pixelY;\n  const pixelDistance = Math.sqrt(dx * dx + dy * dy);\n  const mapUnitDistance = (pixelDistance / ps.gridSize) * ps.scale;\n  return { pixelDistance, mapUnitDistance };\n}\n\nTrapUtils.geometry = {\n  lineIntersection,\n  getTokenCenter,\n  getOBBCorners,\n  isPointInOBB,\n  getPageSettings,\n  getTokenGridCoords,\n  calculateTokenDistance\n};\n\nfunction getSafeMacroDisplayName(macroString, maxLength = 25) {\n  if (!macroString || typeof macroString !== 'string') return '(DE)';\n  let display = macroString.trim();\n  // Macro\n  if (display.startsWith('#')) return `Macro: ${display.slice(1)}`;\n  // API command disguised with $ or true !\n  if (display.startsWith('$')) display = `Cmd: !${display.slice(1)}`;\n  else if (display.startsWith('!')) display = `Cmd: ${display}`;\n  // Template\n  else if (display.startsWith('&{')) {\n    const nameMatch = display.match(/\\{\\{name=([^}]+)\\}\\}/);\n    return nameMatch ? `Template: \"${nameMatch[1].trim()}\"` : 'Chat Template';\n  } else {\n    display = `Text: \"${display}\"`;\n  }\n  if (display.length > maxLength) return display.slice(0, maxLength - 3) + '...';\n  return display;\n}\n\nTrapUtils.getSafeMacroDisplayName = getSafeMacroDisplayName;\n\n// ------------------------------------------------------------------\n// Migrated core parsing + state helpers (simplified v1)\n// ------------------------------------------------------------------\n\n// Quick/partial GM-notes parser for the modern {!traptrigger ‚Ä¶} format.\n// It extracts: type, currentUses, maxUses, isArmed, position, etc.\nexport function parseTrapNotes(rawNotes, token = null) {\n  if (!rawNotes) return null;\n  let decoded = rawNotes;\n  try { decoded = decodeURIComponent(rawNotes); } catch (_) {}\n  decoded = decoded.replace(/<br\\s*\\/?>/gi, ' ').replace(/\\n/g, ' ').trim();\n\n  // Look for the first {!traptrigger ‚Ä¶} block\n  const triggerMatch = decoded.match(/\\{!traptrigger\\s+([^}]*)\\}/i);\n  const detectionMatch = decoded.match(/\\{!trapdetection\\s+([^}]*)\\}/i);\n  \n  if (!triggerMatch && !detectionMatch) return null;\n  \n  const getSetting = (body, key) => {\n    const s = new RegExp(`${key}:\\\\s*\\\\[([^\\\\]]*)\\\\]`, 'i').exec(body);\n    return s ? s[1].trim() : null;\n  };\n  \n  // Parse trigger block\n  let trapData = {\n    type: 'standard',\n    currentUses: 0,\n    maxUses: 0,\n    isArmed: true,\n    primaryMacro: null,\n    successMacro: null,\n    failureMacro: null,\n    options: [],\n    checks: [],\n    position: 'intersection',\n    movementTrigger: true,\n    autoTrigger: false,\n    // Detection properties\n    isPassive: false,\n    passiveSpotDC: null,\n    passiveMaxRange: null,\n    passiveNoticePlayer: null,\n    passiveNoticeGM: null,\n    ppTokenBarFallback: null,\n    enableLuckRoll: false,\n    luckRollDie: '1d6',\n    showDetectionAura: false,\n    passiveEnabled: true,\n    detected: false\n  };\n  \n  if (triggerMatch) {\n    const triggerBody = triggerMatch[1];\n    trapData.type = getSetting(triggerBody, 'type') || 'standard';\n    \n    const usesStr = getSetting(triggerBody, 'uses') || '0/0';\n    const usesParts = usesStr.match(/(\\d+)\\/(\\d+)/) || [0, 0, 0];\n    trapData.currentUses = parseInt(usesParts[1], 10);\n    trapData.maxUses = parseInt(usesParts[2], 10);\n    trapData.isArmed = (getSetting(triggerBody, 'armed') || 'on').toLowerCase() === 'on';\n    \n    // Extract macros\n    const primaryMacro = getSetting(triggerBody, 'primaryMacro');\n    trapData.primaryMacro = primaryMacro ? { macro: primaryMacro } : null;\n    trapData.successMacro = getSetting(triggerBody, 'successMacro');\n    trapData.failureMacro = getSetting(triggerBody, 'failureMacro');\n    \n    const optionsStr = getSetting(triggerBody, 'options');\n    trapData.options = optionsStr ? optionsStr.split(';').map(opt => ({ macro: opt.trim() })).filter(o => o.macro) : [];\n    \n    // Extract checks\n    const checksStr = getSetting(triggerBody, 'checks');\n    trapData.checks = checksStr ? checksStr.split(';').map(chk => {\n      const parts = chk.split(':');\n      return parts.length === 2 ? { type: parts[0].trim(), dc: parseInt(parts[1], 10) } : null;\n    }).filter(Boolean) : [];\n    \n    // Extract position\n    const posStr = getSetting(triggerBody, 'position') || 'intersection';\n    trapData.position = posStr;\n    const coordMatch = posStr.match(/(\\d+)\\s*,\\s*(\\d+)/);\n    if (coordMatch) trapData.position = { x: parseInt(coordMatch[1], 10), y: parseInt(coordMatch[2], 10) };\n    \n    // Extract flags\n    trapData.movementTrigger = (getSetting(triggerBody, 'movementTrigger') || 'on').toLowerCase() === 'on';\n    trapData.autoTrigger = (getSetting(triggerBody, 'autoTrigger') || 'off').toLowerCase() === 'on';\n  }\n  \n  // Parse detection block\n  if (detectionMatch) {\n    const detectionBody = detectionMatch[1];\n    trapData.isPassive = true;\n    \n    const dc = parseInt(getSetting(detectionBody, 'passiveSpotDC'), 10);\n    trapData.passiveSpotDC = isNaN(dc) ? null : dc;\n    \n    const range = parseFloat(getSetting(detectionBody, 'passiveMaxRange'));\n    trapData.passiveMaxRange = isNaN(range) ? null : range;\n    \n    trapData.passiveNoticePlayer = getSetting(detectionBody, 'passiveNoticePlayer');\n    trapData.passiveNoticeGM = getSetting(detectionBody, 'passiveNoticeGM');\n    trapData.ppTokenBarFallback = getSetting(detectionBody, 'ppTokenBarFallback');\n    trapData.enableLuckRoll = (getSetting(detectionBody, 'enableLuckRoll') || 'false').toLowerCase() === 'true';\n    trapData.luckRollDie = getSetting(detectionBody, 'luckRollDie') || '1d6';\n    trapData.showDetectionAura = (getSetting(detectionBody, 'showDetectionAura') || 'false').toLowerCase() === 'true';\n    trapData.passiveEnabled = (getSetting(detectionBody, 'passiveEnabled') || 'on').toLowerCase() === 'on';\n    trapData.detected = (getSetting(detectionBody, 'detected') || 'off').toLowerCase() === 'on';\n  }\n\n  // Minimal visual sync (update aura) if token provided\n  if (token) {\n    const color = trapData.isArmed ? Config.AURA_COLORS.ARMED : Config.AURA_COLORS.DISARMED;\n    token.set({\n      aura1_color: color,\n      aura1_radius: calculateDynamicAuraRadius(token),\n      showplayers_aura1: false,\n      bar1_value: trapData.currentUses,\n      bar1_max: trapData.maxUses,\n      showplayers_bar1: false\n    });\n  }\n  return trapData;\n}\n\nexport function calculateDynamicAuraRadius(token) {\n  if (!token) return Config.aura.TARGET_RADIUS_GRID_UNITS * (Config.DEFAULT_SCALE || 1);\n  const ps = getPageSettings(token.get('_pageid'));\n  if (!ps.valid) return Config.aura.TARGET_RADIUS_GRID_UNITS * ps.scale;\n  const wGU = token.get('width') / ps.gridSize;\n  const hGU = token.get('height') / ps.gridSize;\n  const minGU = Math.min(wGU, hGU);\n  // If token larger than aura diameter keep aura inside borders using negative radius hack\n  if (minGU >= Config.aura.TARGET_RADIUS_GRID_UNITS * 2) {\n    return -(minGU * 0.5) + Config.aura.VISIBILITY_BOOST_GU * ps.scale;\n  }\n  // Otherwise use positive radius scaled to units\n  return Config.aura.TARGET_RADIUS_GRID_UNITS * ps.scale;\n}\n\nexport function updateTrapUses(token, current, max, armed = null) {\n  if (!token) return;\n  let notes = token.get('gmnotes') || '';\n  let dec = notes;\n  try { dec = decodeURIComponent(notes); } catch (_) {}\n  const repl = (field, value) => {\n    const re = new RegExp(`${field}:\\\\s*\\\\[[^\\\\]]*\\\\]`);\n    if (re.test(dec)) dec = dec.replace(re, `${field}:[${value}]`);\n    else dec = dec.replace(/\\{!traptrigger/, `{!traptrigger ${field}:[${value}]`);\n  };\n  repl('uses', `${current}/${max}`);\n  if (armed !== null) repl('armed', armed ? 'on' : 'off');\n  token.set('gmnotes', encodeURIComponent(dec));\n\n  // sync bars & aura\n  token.set({\n    bar1_value: current,\n    bar1_max: max,\n    aura1_color: armed === false ? Config.AURA_COLORS.DISARMED : Config.AURA_COLORS.ARMED,\n    aura1_radius: calculateDynamicAuraRadius(token),\n    showplayers_bar1: false,\n    showplayers_aura1: false\n  });\n}\n\n// Attach to export object\nObject.assign(TrapUtils, {\n  parseTrapNotes,\n  calculateDynamicAuraRadius,\n  updateTrapUses\n});\n\n// ------------------------------------------------------------------\n// Token management helpers\n// ------------------------------------------------------------------\n\nexport function toggleIgnoreTraps(token) {\n  if (!token) {\n    log('No token provided for ignoretraps toggle', 'error');\n    return;\n  }\n\n  const currentMarkers = token.get(\"statusmarkers\") || \"\";\n  const hasBlueMarker = currentMarkers.includes(\"blue\");\n  \n  let notes = token.get(\"gmnotes\") || \"\";\n  let decoded = notes;\n  try { \n    decoded = decodeURIComponent(notes); \n  } catch (e) { \n    // Use raw notes if decoding fails\n  }\n  \n  const hasIgnoreTag = decoded.includes(\"{ignoretraps}\");\n  \n  if (hasBlueMarker && hasIgnoreTag) {\n    // Remove both marker and tag\n    const newMarkers = currentMarkers.replace(/blue,?|,blue/g, '').replace(/,$/, '');\n    const newNotes = decoded.replace(/\\{ignoretraps\\}/g, '');\n    \n    token.set({\n      statusmarkers: newMarkers,\n      gmnotes: encodeURIComponent(newNotes)\n    });\n    \n    chat(`${token.get(\"name\") || \"Token\"} is no longer immune to traps.`);\n    log(`Removed trap immunity from token ${token.id}`, 'info');\n  } else {\n    // Add both marker and tag\n    const newMarkers = hasBlueMarker ? currentMarkers : (currentMarkers ? currentMarkers + \",blue\" : \"blue\");\n    const newNotes = hasIgnoreTag ? decoded : decoded + \"{ignoretraps}\";\n    \n    token.set({\n      statusmarkers: newMarkers,\n      gmnotes: encodeURIComponent(newNotes)\n    });\n    \n    chat(`${token.get(\"name\") || \"Token\"} is now immune to traps.`);\n    log(`Added trap immunity to token ${token.id}`, 'info');\n  }\n}","// src/trap-ui.js\n// Chat/menu rendering utilities.\n\nimport TrapUtils from './trap-utils.js';\nimport { Config } from './trap-core.js';\n\nfunction buildDefaultTemplate(sections) {\n  // sections: array of strings already formatted like \"name=...\" or \"Token=...\"\n  return `&{template:default} {{${sections.join('}} {{')}}}`;\n}\n\nfunction sendGM(menuString) {\n  TrapUtils.chat(menuString);\n}\n\n// Build a trap status menu with current configuration\nfunction buildTrapStatusMenu(trapToken) {\n  if (!trapToken) return null;\n  \n  const legacyUtils = globalThis.TrapSystem && globalThis.TrapSystem.utils;\n  if (!legacyUtils || typeof legacyUtils.parseTrapNotes !== 'function') {\n    return 'Legacy utilities not available';\n  }\n  \n  const trapData = legacyUtils.parseTrapNotes(trapToken.get('gmnotes'), trapToken);\n  if (!trapData) return 'Invalid trap configuration';\n  \n  const tokenImage = TrapUtils.getTokenImageURL(trapToken, 'thumb');\n  const statusEmoji = trapData.isArmed ? 'üî¥' : 'üü¢';\n  const usesText = trapData.currentUses > 0 ? `${trapData.currentUses}/${trapData.maxUses}` : 'Depleted';\n  \n  const sections = [\n    `name=${statusEmoji} ${trapData.name || 'Unnamed Trap'}`,\n    `Token=<img src=\"${tokenImage}\" style=\"width:40px;height:40px;\">`,\n    `Status=${trapData.isArmed ? 'Armed' : 'Disarmed'}`,\n    `Uses=${usesText}`,\n    `DC=${trapData.dc || 'N/A'}`,\n    `Type=${trapData.triggerType || 'Unknown'}`,\n    `Actions=[Toggle](!trapsystem toggle @{selected|token_id}) [Edit](!trapsystem edit @{selected|token_id})`\n  ];\n  \n  return buildDefaultTemplate(sections);\n}\n\n// Build a skill check menu\nfunction buildSkillCheckMenu(characterToken, trapToken, skillType = 'Investigation') {\n  if (!characterToken || !trapToken) return null;\n  \n  const charImage = TrapUtils.getTokenImageURL(characterToken, 'thumb');\n  const trapImage = TrapUtils.getTokenImageURL(trapToken, 'thumb');\n  const skillEmoji = Config.SKILL_TYPES[skillType] || 'üé≤';\n  \n  const sections = [\n    `name=${skillEmoji} ${skillType} Check`,\n    `Character=<img src=\"${charImage}\" style=\"width:30px;height:30px;\"> ${characterToken.get('name')}`,\n    `Target=<img src=\"${trapImage}\" style=\"width:30px;height:30px;\"> Trap`,\n    `Roll=[${skillType}](!roll 1d20+@{selected|${skillType.toLowerCase()}_mod} vs DC ?{DC|15})`,\n    `Actions=[Auto-Resolve](!trapsystem skill-check ${characterToken.id} ${trapToken.id} ${skillType})`\n  ];\n  \n  return buildDefaultTemplate(sections);\n}\n\n// Build an interaction menu for a trap\nfunction buildInteractionMenu(trapToken, characterTokens = []) {\n  if (!trapToken) return null;\n  \n  const legacyUtils = globalThis.TrapSystem && globalThis.TrapSystem.utils;\n  if (!legacyUtils || typeof legacyUtils.parseTrapNotes !== 'function') {\n    return 'Legacy utilities not available';\n  }\n  \n  const trapData = legacyUtils.parseTrapNotes(trapToken.get('gmnotes'), trapToken);\n  if (!trapData) return 'Invalid trap configuration';\n  \n  const trapImage = TrapUtils.getTokenImageURL(trapToken, 'thumb');\n  const statusEmoji = trapData.isArmed ? 'üî¥' : 'üü¢';\n  \n  const characterList = characterTokens.map(token => \n    `<img src=\"${TrapUtils.getTokenImageURL(token, 'thumb')}\" style=\"width:20px;height:20px;\"> ${token.get('name')}`\n  ).join('<br>');\n  \n  const sections = [\n    `name=${statusEmoji} Trap Interaction`,\n    `Trap=<img src=\"${trapImage}\" style=\"width:40px;height:40px;\"> ${trapData.name || 'Unnamed'}`,\n    `Characters=${characterList || 'None nearby'}`,\n    `Detection=[Perception Check](!trapsystem perception-check @{selected|token_id} ${trapToken.id})`,\n    `Disarm=[Disable Check](!trapsystem disable-check @{selected|token_id} ${trapToken.id})`,\n    `Actions=[Trigger Manually](!trapsystem trigger ${trapToken.id}) [Reset](!trapsystem reset ${trapToken.id})`\n  ];\n  \n  return buildDefaultTemplate(sections);\n}\n\n// Send a formatted error message\nfunction sendError(message, recipient = 'gm') {\n  const errorMsg = `‚ùå **Error:** ${message}`;\n  if (recipient === 'gm') {\n    TrapUtils.chat(errorMsg);\n  } else {\n    TrapUtils.whisper(recipient, errorMsg);\n  }\n}\n\n// Send a formatted success message\nfunction sendSuccess(message, recipient = 'gm') {\n  const successMsg = `‚úÖ **Success:** ${message}`;\n  if (recipient === 'gm') {\n    TrapUtils.chat(successMsg);\n  } else {\n    TrapUtils.whisper(recipient, successMsg);\n  }\n}\n\n// Send a formatted info message\nfunction sendInfo(message, recipient = 'gm') {\n  const infoMsg = `‚ÑπÔ∏è **Info:** ${message}`;\n  if (recipient === 'gm') {\n    TrapUtils.chat(infoMsg);\n  } else {\n    TrapUtils.whisper(recipient, infoMsg);\n  }\n}\n\nexport const ui = {\n  buildDefaultTemplate,\n  sendGM,\n  buildTrapStatusMenu,\n  buildSkillCheckMenu,\n  buildInteractionMenu,\n  sendError,\n  sendSuccess,\n  sendInfo\n};\n\nexport default ui;","// src/trap-triggers.js\n// Initial migration of trigger-control helpers (wrapper around legacy for now)\n\nimport TrapUtils from './trap-utils.js';\nimport { Config } from './trap-core.js';\nimport { ui } from './trap-ui.js';\n\nfunction toggleTrap(token) {\n  if (!TrapUtils.validateTrapToken(token, 'toggleTrap')) return;\n  const data = TrapUtils.parseTrapNotes(token.get('gmnotes'), token);\n  if (!data) {\n    TrapUtils.chat('‚ùå Invalid trap configuration.');\n    return;\n  }\n  const newArmed = !data.isArmed;\n  let newUses = data.currentUses;\n  if (newArmed && newUses <= 0) newUses = 1;\n  TrapUtils.updateTrapUses(token, newUses, data.maxUses, newArmed);\n  TrapUtils.chat(`${newArmed ? 'üéØ Armed' : 'üî¥ Disarmed'} (uses ${newUses}/${data.maxUses})`);\n}\n\nfunction getTrapStatus(token) {\n  if (!token) return;\n  const d = TrapUtils.parseTrapNotes(token.get('gmnotes'), token);\n  if (!d) {\n    TrapUtils.chat('‚ùå Invalid trap config.');\n    return;\n  }\n  const msg = [];\n  msg.push('&{template:default} {{name=Trap Status}}');\n  msg.push(`{{State=${d.isArmed ? 'üéØ ARMED' : 'üî¥ DISARMED'}}}`);\n  msg.push(`{{Uses=${d.currentUses}/${d.maxUses}}}`);\n  if (d.type === 'interaction') {\n    if (d.primaryMacro && d.primaryMacro.macro) msg.push(`{{Primary=${TrapUtils.getSafeMacroDisplayName(d.primaryMacro.macro)}}}`);\n    if (d.successMacro) msg.push(`{{Success=${TrapUtils.getSafeMacroDisplayName(d.successMacro)}}}`);\n    if (d.failureMacro) msg.push(`{{Failure=${TrapUtils.getSafeMacroDisplayName(d.failureMacro)}}}`);\n    if (d.checks && d.checks.length) {\n      const checkInfo = d.checks.map(c => `${Config.SKILL_TYPES[c.type] || 'üé≤'} ${c.type} (DC ${c.dc})`).join('<br>');\n      msg.push(`{{Checks=${checkInfo}}}`);\n    }\n  }\n  msg.push(`{{Movement Trigger=${d.movementTrigger ? 'On' : 'Off'}}}`);\n  msg.push(`{{Auto Trigger=${d.autoTrigger ? 'On' : 'Off'}}}`);\n  msg.push(`{{Position=${typeof d.position === 'object' ? `(${d.position.x},${d.position.y})` : d.position}}}`);\n  sendChat('TrapSystem', `/w gm ${msg.join(' ')}`);\n}\n\nfunction manualTrigger(trapToken) {\n  if (!trapToken) {\n    TrapUtils.chat('‚ùå No trap token selected.');\n    return;\n  }\n  const data = TrapUtils.parseTrapNotes(trapToken.get('gmnotes'), trapToken);\n  if (!data) {\n    TrapUtils.chat('‚ùå Invalid trap configuration.');\n    return;\n  }\n\n  // Auto-trigger shortcut\n  if (data.autoTrigger && data.primaryMacro && data.primaryMacro.macro) {\n    manualMacroTrigger(trapToken.id, 'primary');\n    return;\n  }\n\n  // Interaction trap shows menu\n  if (data.type === 'interaction') {\n    // Use the migrated interaction menu system\n    const interactionSystem = globalThis.TrapSystem && globalThis.TrapSystem.interaction;\n    if (interactionSystem && typeof interactionSystem.showInteractionMenu === 'function') {\n      interactionSystem.showInteractionMenu(trapToken);\n    } else {\n      TrapUtils.chat('üîß Interaction menu system not available');\n      getTrapStatus(trapToken);\n    }\n    return;\n  }\n\n  // Standard trap control panel\n  const panel = [];\n  panel.push('&{template:default} {{name=Trap Control Panel}}');\n  panel.push(`{{State=üéØ ${data.isArmed ? 'ARMED' : 'üî¥ DISARMED'} Uses: ${data.currentUses}/${data.maxUses}}}`);\n  panel.push(`{{Management=[üîÑ Toggle](!trapsystem toggle ${trapToken.id}) [üìä Status](!trapsystem status ${trapToken.id})}}`);\n\n  if (data.isArmed && data.currentUses > 0) {\n    panel.push(`{{Reminder=‚ö†Ô∏è Ensure correct trap token selected for macros!}}`);\n    panel.push(`{{After Trigger=${data.currentUses > 1 ? 'üéØ ARMED' : 'üî¥ AUTO-DISARMED'} Uses: ${data.currentUses - 1}/${data.maxUses}}}`);\n    \n    let triggerOpts = '';\n    if (data.primaryMacro && data.primaryMacro.macro) {\n      triggerOpts += `[üéØ ${TrapUtils.getSafeMacroDisplayName(data.primaryMacro.macro)}](!trapsystem manualtrigger ${trapToken.id} primary)`;\n    }\n    if (data.options && data.options.length > 0) {\n      data.options.forEach((opt, i) => {\n        if (triggerOpts) triggerOpts += ' ';\n        triggerOpts += `[üéØ ${TrapUtils.getSafeMacroDisplayName(opt.macro)}](!trapsystem manualtrigger ${trapToken.id} option ${i})`;\n      });\n    }\n    panel.push(`{{Trigger Options=${triggerOpts || '(DE)'}}}`);\n  } else {\n    panel.push(`{{Note=Trap disarmed or out of uses. Toggle to enable triggers.}}`);\n  }\n  \n  panel.push('}}');\n  sendChat('API', `/w gm ${panel.join(' ')}`);\n}\n\nfunction manualMacroTrigger(trapId, macroIdentifier) {\n  const trapToken = getObj('graphic', trapId);\n  if (!trapToken) {\n    TrapUtils.chat('‚ùå Trap token not found.');\n    return;\n  }\n  const data = TrapUtils.parseTrapNotes(trapToken.get('gmnotes'), trapToken);\n  if (!data || !data.isArmed || data.currentUses <= 0) {\n    TrapUtils.chat('‚ùå Trap cannot be triggered (disarmed or no uses).');\n    return;\n  }\n\n  const tagMap = TrapUtils.buildTagToIdMap(trapToken, null, []);\n  let macroToExecute = null;\n  \n  if (macroIdentifier === 'primary') {\n    macroToExecute = data.primaryMacro?.macro;\n  } else if (macroIdentifier.startsWith('option')) {\n    const optIndex = parseInt(macroIdentifier.split(' ')[1], 10);\n    macroToExecute = data.options?.[optIndex]?.macro;\n  }\n  \n  if (macroToExecute) {\n    const executed = TrapUtils.executeMacro(macroToExecute, tagMap);\n    if (executed) {\n      const newUses = data.currentUses - 1;\n      const stillArmed = newUses > 0;\n      TrapUtils.updateTrapUses(trapToken, newUses, data.maxUses, stillArmed);\n      if (!stillArmed) {\n        TrapUtils.chat('üí• Trap depleted and disarmed.');\n      }\n    } else {\n      TrapUtils.chat('‚ùå Macro execution failed.');\n    }\n  } else {\n    TrapUtils.chat('‚ùå Invalid macro identifier.');\n  }\n}\n\n// Helper to process macro strings for trap setup\nfunction processMacro(macroCmd) {\n  if (!macroCmd || typeof macroCmd !== 'string' || macroCmd.trim().toLowerCase() === 'none' || macroCmd.trim() === '') {\n    return null;\n  }\n\n  let content = macroCmd.trim();\n\n  // Handle disguised templates like ^{template:...}\n  if (content.startsWith('^')) {\n    content = '&' + content.substring(1);\n  }\n\n  if (content.startsWith('\"') && content.endsWith('\"')) {\n    content = content.substring(1, content.length - 1).trim();\n  }\n\n  if (content.startsWith('&{')) { // Roll template\n    return `\"${content.replace(/\"/g, '\\\\\"')}\"`;\n  }\n  if (content.startsWith('!')) {\n    return `\"$${content.substring(1)}\"`;\n  }\n  if (content.startsWith('$')) {\n    return `\"${content}\"`;\n  }\n  if (content.startsWith('#')) {\n    const macroName = content.substring(1).trim();\n    if (findObjs({ _type: 'macro', name: macroName }).length === 0) {\n      TrapUtils.chat(`‚ö†Ô∏è Warning: Macro \"${macroName}\" not found.`);\n    }\n    return content;\n  }\n  if (findObjs({ _type: 'macro', name: content }).length > 0) {\n    return '#' + content;\n  }\n  return `\"${content.replace(/\"/g, '\\\\\"')}\"`;\n}\n\nfunction setupTrap(token, uses, mainMacro, optionalMacro2, optionalMacro3, movement, autoTrigger) {\n  if (!token) {\n    TrapUtils.chat('‚ùå No token selected.');\n    return;\n  }\n\n  // Preserve existing detection block if any\n  const existingNotes = token.get('gmnotes') || '';\n  let decoded = '';\n  try { decoded = decodeURIComponent(existingNotes); } catch (_) { decoded = existingNotes; }\n  const detectionMatch = decoded.match(/(\\{!trapdetection\\s+(?:(?!\\{!}).)*\\})/);\n  const existingDetection = detectionMatch ? detectionMatch[0] : '';\n\n  const maxUses = parseInt(uses, 10);\n  if (isNaN(maxUses) || maxUses < 1) {\n    TrapUtils.chat('‚ùå Uses must be a positive number.');\n    return;\n  }\n\n  const primaryProcessed = processMacro(mainMacro);\n  if (!primaryProcessed) {\n    TrapUtils.chat('‚ùå Primary macro required for standard trap.');\n    return;\n  }\n\n  let parts = [\n    'type:[standard]',\n    `uses:[${maxUses}/${maxUses}]`,\n    'armed:[on]',\n    `primaryMacro:[${primaryProcessed}]`\n  ];\n\n  // Process optional macros\n  const options = [];\n  const opt2 = processMacro(optionalMacro2);\n  if (opt2) options.push(opt2);\n  const opt3 = processMacro(optionalMacro3);\n  if (opt3) options.push(opt3);\n  if (options.length > 0) {\n    parts.push(`options:[${options.join(';')}]`);\n  }\n\n  // Movement setting\n  let movementSetting = 'intersection';\n  if (movement) {\n    const movLower = movement.toLowerCase();\n    if (movLower === 'center' || movLower === 'grid') {\n      movementSetting = movLower === 'grid' ? '0,0' : 'center';\n    } else if (movLower.match(/^\\d+,\\d+$/)) {\n      movementSetting = movLower;\n    }\n  }\n  parts.push(`position:[${movementSetting}]`);\n  parts.push('movementTrigger:[on]');\n  parts.push(`autoTrigger:[${autoTrigger && (autoTrigger.toString().toLowerCase() === 'true' || autoTrigger === true) ? 'on' : 'off'}]`);\n\n  const newBlock = `{!traptrigger ${parts.join(' ')}}`;\n  const finalNotes = `${newBlock} ${existingDetection}`.trim();\n\n  try {\n    const encoded = encodeURIComponent(finalNotes);\n    token.set({\n      gmnotes: encoded,\n      bar1_value: maxUses,\n      bar1_max: maxUses,\n      showplayers_bar1: false,\n      aura1_radius: TrapUtils.calculateDynamicAuraRadius(token),\n      aura1_color: Config.AURA_COLORS.ARMED,\n      showplayers_aura1: false\n    });\n    getTrapStatus(token);\n  } catch (e) {\n    TrapUtils.chat('‚ùå Error setting trap properties.');\n    TrapUtils.log(`setupTrap error: ${e.message}`, 'error');\n  }\n}\n\nfunction setupInteractionTrap(token, uses, primaryMacro, successMacro, failureMacro, check1Type, check1DC, check2Type, check2DC, movementTriggerEnabled = true, movement = 'intersection', autoTriggerEnabled = false) {\n  if (!token) {\n    TrapUtils.chat('‚ùå No token selected.');\n    return;\n  }\n\n  // Preserve existing detection block\n  const existingNotes = token.get('gmnotes') || '';\n  let decoded = '';\n  try { decoded = decodeURIComponent(existingNotes); } catch (_) { decoded = existingNotes; }\n  const detectionMatch = decoded.match(/(\\{!trapdetection\\s+(?:(?!\\{!}).)*\\})/);\n  const existingDetection = detectionMatch ? detectionMatch[0] : '';\n\n  let positionValue = movement ? movement.toLowerCase() : 'intersection';\n  if (positionValue === 'grid') positionValue = '0,0';\n\n  const maxUses = parseInt(uses, 10);\n  if (isNaN(maxUses) || maxUses < 1) {\n    TrapUtils.chat('‚ùå Uses must be a positive number.');\n    return;\n  }\n\n  let parts = [\n    'type:[interaction]',\n    `uses:[${maxUses}/${maxUses}]`,\n    'armed:[on]'\n  ];\n\n  // Process macros\n  const primaryProcessed = processMacro(primaryMacro);\n  if (primaryProcessed) parts.push(`primaryMacro:[${primaryProcessed}]`);\n  \n  const successProcessed = processMacro(successMacro);\n  if (successProcessed) parts.push(`successMacro:[${successProcessed}]`);\n  \n  const failureProcessed = processMacro(failureMacro);\n  if (failureProcessed) parts.push(`failureMacro:[${failureProcessed}]`);\n\n  // Process checks\n  const checks = [];\n  if (check1Type && check1Type.toLowerCase() !== 'none') {\n    const dc1 = parseInt(check1DC, 10);\n    if (isNaN(dc1)) {\n      TrapUtils.chat('‚ùå First check DC must be a number.');\n      return;\n    }\n    checks.push(`${check1Type.trim()}:${dc1}`);\n  }\n  if (check2Type && check2Type.toLowerCase() !== 'none') {\n    const dc2 = parseInt(check2DC, 10);\n    if (isNaN(dc2)) {\n      TrapUtils.chat('‚ùå Second check DC must be a number.');\n      return;\n    }\n    checks.push(`${check2Type.trim()}:${dc2}`);\n  }\n  if (checks.length > 0) {\n    parts.push(`checks:[${checks.join(';')}]`);\n  }\n\n  const movementEnabled = (typeof movementTriggerEnabled === 'string' && movementTriggerEnabled.toLowerCase() === 'true') || movementTriggerEnabled === true;\n  parts.push(`movementTrigger:[${movementEnabled ? 'on' : 'off'}]`);\n  \n  const autoEnabled = (typeof autoTriggerEnabled === 'string' && autoTriggerEnabled.toLowerCase() === 'true') || autoTriggerEnabled === true;\n  parts.push(`autoTrigger:[${autoEnabled ? 'on' : 'off'}]`);\n  parts.push(`position:[${positionValue}]`);\n\n  const newBlock = `{!traptrigger ${parts.join(' ')}}`;\n  const finalNotes = `${newBlock} ${existingDetection}`.trim();\n\n  try {\n    const encoded = encodeURIComponent(finalNotes);\n    token.set({\n      gmnotes: encoded,\n      aura1_radius: TrapUtils.calculateDynamicAuraRadius(token),\n      aura1_color: Config.AURA_COLORS.ARMED,\n      showplayers_aura1: false,\n      bar1_value: maxUses,\n      bar1_max: maxUses,\n      showplayers_bar1: false\n    });\n    getTrapStatus(token);\n  } catch (e) {\n    TrapUtils.chat('‚ùå Error setting trap properties.');\n    TrapUtils.log(`setupInteractionTrap error: ${e.message}`, 'error');\n  }\n}\n\nexport const triggers = {\n  toggleTrap,\n  getTrapStatus,\n  manualTrigger,\n  manualMacroTrigger,\n  setupTrap,\n  setupInteractionTrap\n};\n\nexport default triggers;","// src/trap-detector.js\n// Migration of movement-based detection helpers.\n\nimport TrapUtils from './trap-utils.js';\nimport { Config } from './trap-core.js';\nimport { triggers } from './trap-triggers.js';\n\n// Simple wrapper around legacy overlap check\nfunction checkGridOverlap(token1, token2) {\n  if (!token1 || !token2) return false;\n  const legacyUtils = globalThis.TrapSystem && globalThis.TrapSystem.utils;\n  if (legacyUtils && typeof legacyUtils.checkGridOverlap === 'function') {\n    return legacyUtils.checkGridOverlap(token1, token2);\n  }\n  // Fallback quick bounding-box overlap (approx)\n  const dx = Math.abs(token1.get('left') - token2.get('left'));\n  const dy = Math.abs(token1.get('top') - token2.get('top'));\n  const minDistX = (token1.get('width') + token2.get('width')) / 2;\n  const minDistY = (token1.get('height') + token2.get('height')) / 2;\n  return dx < minDistX && dy < minDistY;\n}\n\nfunction checkLineIntersection(startX, startY, endX, endY, trapToken) {\n  const legacyUtils = globalThis.TrapSystem && globalThis.TrapSystem.utils;\n  if (legacyUtils && typeof legacyUtils.checkLineIntersection === 'function') {\n    return legacyUtils.checkLineIntersection(startX, startY, endX, endY, trapToken);\n  }\n  return null; // simplified fallback\n}\n\nfunction calculateTrapPosition(movedToken, trapToken, intersectionPoint) {\n  const legacyUtils = globalThis.TrapSystem && globalThis.TrapSystem.utils;\n  if (legacyUtils && typeof legacyUtils.calculateTrapPosition === 'function') {\n    return legacyUtils.calculateTrapPosition(movedToken, trapToken, intersectionPoint);\n  }\n  return { initial: intersectionPoint, final: intersectionPoint };\n}\n\nexport const MovementDetector = {\n    /**\n     * Main movement detection function - checks if a token's movement triggers any traps\n     * @param {object} movedToken - The token that moved\n     * @param {number} prevX - Previous X position\n     * @param {number} prevY - Previous Y position\n     */\n    async checkTrapTrigger(movedToken, prevX, prevY) {\n        if (!movedToken) return;\n        \n        if (!Config.state.triggersEnabled) {\n            TrapUtils.log('Triggers disabled', 'debug');\n            return;\n        }\n\n        // Ignore if the moved token itself is a trap\n        if (TrapUtils.isTrap(movedToken)) {\n            TrapUtils.log('Ignoring movement of trap token', 'debug');\n            return;\n        }\n\n        // Must be in objects layer\n        if (movedToken.get(\"layer\") !== \"objects\") {\n            TrapUtils.log('Not in token layer', 'debug');\n            return;\n        }\n\n        // If token is trap-immune\n        if (this.isTrapImmune(movedToken)) {\n            TrapUtils.log('Token is immune to traps', 'debug');\n            return;\n        }\n\n        // If safe move token, skip\n        if (Config.state.safeMoveTokens.has(movedToken.id)) {\n            Config.state.safeMoveTokens.delete(movedToken.id);\n            return;\n        }\n\n        // Check movement distance\n        const ps = TrapUtils.geometry.getPageSettings(movedToken.get(\"_pageid\"));\n        const dx = movedToken.get(\"left\") - prevX;\n        const dy = movedToken.get(\"top\") - prevY;\n        const dist = Math.sqrt(dx * dx + dy * dy);\n        \n        if (dist < ps.gridSize * Config.MIN_MOVEMENT_FACTOR) {\n            TrapUtils.log(`Movement too small (${dist}px)`, 'debug');\n            return;\n        }\n\n        // Find traps on page\n        const pageTokens = findObjs({ _type: \"graphic\", _pageid: movedToken.get(\"_pageid\") });\n        const trapTokens = pageTokens.filter(t => TrapUtils.isTrap(t));\n\n        // For each trap, see if line or overlap triggers\n        for (let trapToken of trapTokens) {\n            TrapUtils.log(`[DEBUG] Checking trap: ${trapToken.id} (${trapToken.get('name') || 'Unnamed'}) at L:${trapToken.get('left')}, T:${trapToken.get('top')}, W:${trapToken.get('width')}, H:${trapToken.get('height')}`, 'debug');\n            \n            const data = TrapUtils.parseTrapNotes(trapToken.get(\"gmnotes\"), trapToken, false);\n            if (!data || !data.isArmed || data.currentUses <= 0) {\n                continue;\n            }\n\n            // Check if movement trigger is disabled for this interaction trap\n            if (data.type === \"interaction\" && data.movementTrigger === false) {\n                TrapUtils.log(`Movement trigger disabled for interaction trap: ${trapToken.id}`, 'debug');\n                continue;\n            }\n\n            // Check path intersection\n            if (prevX !== undefined && prevY !== undefined) {\n                const i = this.checkLineIntersection(\n                    prevX, prevY,\n                    movedToken.get(\"left\"), movedToken.get(\"top\"),\n                    trapToken\n                );\n                TrapUtils.log(`[DEBUG] Intersection point 'i' from checkLineIntersection: ${i ? JSON.stringify(i) : 'null'} for trap ${trapToken.id}`, 'debug');\n                \n                if (i) {\n                    const pos = this.calculateTrapPosition(movedToken, trapToken, i);\n                    TrapUtils.log(`[DEBUG] pos.initial: ${JSON.stringify(pos.initial)}, pos.final: ${JSON.stringify(pos.final)} for trap ${trapToken.id}`, 'debug');\n                    \n                    movedToken.set({ left: pos.initial.x, top: pos.initial.y });\n                    setTimeout(() => {\n                        movedToken.set({ left: pos.final.x, top: pos.final.y });\n                    }, 500);\n                    \n                    this.handleTrapTrigger(movedToken, trapToken, i);\n                    return; // Important: Return after handling a trigger to prevent multiple triggers from one move\n                }\n            }\n\n            // Direct overlap\n            if (this.checkGridOverlap(movedToken, trapToken)) {\n                const centerOfMovedToken = TrapUtils.geometry.getTokenCenter(movedToken);\n                TrapUtils.log(`[DEBUG] Direct overlap with trap ${trapToken.id}. Center of moved token (used as intersection): ${JSON.stringify(centerOfMovedToken)}`, 'debug');\n                \n                const pos = this.calculateTrapPosition(movedToken, trapToken, centerOfMovedToken);\n                TrapUtils.log(`[DEBUG] pos.initial: ${JSON.stringify(pos.initial)}, pos.final: ${JSON.stringify(pos.final)} for trap ${trapToken.id} (overlap case)`, 'debug');\n                \n                movedToken.set({ left: pos.initial.x, top: pos.initial.y });\n                setTimeout(() => {\n                    movedToken.set({ left: pos.final.x, top: pos.final.y });\n                }, 500);\n                \n                this.handleTrapTrigger(movedToken, trapToken, centerOfMovedToken);\n                return; // Important: Return after handling a trigger\n            }\n        }\n    },\n\n    /**\n     * Run passive detection checks for a token that moved\n     * This should be called whenever a token moves to check for passive trap detection\n     * @param {object} movedToken - The token that moved\n     */\n    async runPassiveChecks(movedToken) {\n        // Get the passive detection system from the global TrapSystem\n        const passiveSystem = globalThis.TrapSystem?.passive;\n        if (passiveSystem && typeof passiveSystem.runPassiveChecksForToken === 'function') {\n            await passiveSystem.runPassiveChecksForToken(movedToken);\n        }\n    },\n\n    /**\n     * Handle when a trap is triggered - placeholder that will call the appropriate trigger system\n     * @param {object} triggeredToken - The token that triggered the trap\n     * @param {object} trapToken - The trap token\n     * @param {object} intersectionPoint - The intersection point\n     */\n    handleTrapTrigger(triggeredToken, trapToken, intersectionPoint) {\n        // For now, just log and use basic handling\n        TrapUtils.log(`Trap ${trapToken.id} triggered by token ${triggeredToken.id} at intersection ${JSON.stringify(intersectionPoint)}`, 'info');\n        \n        // Basic trap triggering - just show status for now\n        // In the future this will call the full trigger system\n        triggers.getTrapStatus(trapToken);\n        \n        // Show basic notification to GM\n        const trapName = trapToken.get('name') || 'Unnamed Trap';\n        const tokenName = triggeredToken.get('name') || 'Unknown Token';\n        TrapUtils.chat(`‚ö†Ô∏è ${tokenName} triggered ${trapName}!`);\n    },\n\n    /**\n     * Check if a token is immune to traps\n     * @param {object} token - The token to check\n     * @returns {boolean} - True if token is trap immune\n     */\n    isTrapImmune(token) {\n        if (!token) return false;\n        const hasMarker = token.get(\"statusmarkers\")?.includes(\"blue\") || false;\n        const notes = token.get(\"gmnotes\") || \"\";\n        let decoded = notes;\n        try { decoded = decodeURIComponent(notes); } catch (e) { /* ignore */ }\n        const hasTag = decoded.includes(\"{ignoretraps}\");\n        return (hasMarker && hasTag);\n    },\n\n    /**\n     * Check if a line segment intersects with a trap token\n     * @param {number} startX - Start X coordinate\n     * @param {number} startY - Start Y coordinate  \n     * @param {number} endX - End X coordinate\n     * @param {number} endY - End Y coordinate\n     * @param {object} trapToken - The trap token to check against\n     * @returns {object|null} - Intersection point or null\n     */\n    checkLineIntersection(startX, startY, endX, endY, trapToken) {\n        const coords = TrapUtils.geometry.getTokenGridCoords(trapToken);\n        if (!coords) return null;\n        \n        const dx = endX - startX;\n        const dy = endY - startY;\n        const dist = Math.sqrt(dx * dx + dy * dy);\n        \n        if (dist < coords.gridSize * Config.MIN_MOVEMENT_FACTOR) {\n            return null;\n        }\n\n        const obbCorners = TrapUtils.geometry.getOBBCorners(trapToken);\n        if (!obbCorners) {\n            TrapUtils.log('checkLineIntersection: Could not get OBB corners for trap token.', 'warn');\n            return null;\n        }\n\n        // Use OBB intersection logic\n        const intersectionPoint = this.lineSegmentIntersectsOBB(startX, startY, endX, endY, obbCorners);\n        return intersectionPoint;\n    },\n\n    /**\n     * Check if a line segment intersects with an OBB (Oriented Bounding Box)\n     * @param {number} p1x - Start X coordinate\n     * @param {number} p1y - Start Y coordinate\n     * @param {number} p2x - End X coordinate\n     * @param {number} p2y - End Y coordinate\n     * @param {Array} obbCorners - Array of 4 corner points\n     * @returns {object|null} - Intersection point or null\n     */\n    lineSegmentIntersectsOBB(p1x, p1y, p2x, p2y, obbCorners) {\n        if (!Array.isArray(obbCorners) || obbCorners.length !== 4) return null;\n        \n        const edges = [\n            [obbCorners[0], obbCorners[1]], // Top edge\n            [obbCorners[1], obbCorners[2]], // Right edge\n            [obbCorners[2], obbCorners[3]], // Bottom edge\n            [obbCorners[3], obbCorners[0]]  // Left edge\n        ];\n        \n        for (const [edgeStart, edgeEnd] of edges) {\n            const intersection = TrapUtils.geometry.lineIntersection(\n                p1x, p1y, p2x, p2y,\n                edgeStart.x, edgeStart.y, edgeEnd.x, edgeEnd.y\n            );\n            if (intersection) {\n                return intersection;\n            }\n        }\n        return null;\n    },\n\n    /**\n     * Check if two tokens overlap on the grid\n     * @param {object} t1 - First token\n     * @param {object} t2 - Second token\n     * @returns {boolean} - True if tokens overlap\n     */\n    checkGridOverlap(t1, t2) {\n        const c1 = TrapUtils.geometry.getTokenGridCoords(t1);\n        const c2 = TrapUtils.geometry.getTokenGridCoords(t2);\n        if (!c1 || !c2) return false;\n        \n        return !(c1.x + c1.width <= c2.x || c2.x + c2.width <= c1.x ||\n                 c1.y + c1.height <= c2.y || c2.y + c2.height <= c1.y);\n    },\n\n    /**\n     * Calculate where to position a token when it triggers a trap\n     * @param {object} movedToken - The token that moved\n     * @param {object} trapToken - The trap token\n     * @param {object} intersection - The intersection point\n     * @returns {object} - Object with initial and final positions\n     */\n    calculateTrapPosition(movedToken, trapToken, intersection) {\n        TrapUtils.log(`[CalcTrapPos-ENTRY] trap.id: ${trapToken.id}, raw_intersection_arg: (${intersection.x.toFixed(2)}, ${intersection.y.toFixed(2)})`, 'debug');\n        \n        const trapData = TrapUtils.parseTrapNotes(trapToken.get(\"gmnotes\"), trapToken);\n        TrapUtils.log(`[CalcTrapPos-ENTRY] trap.id: ${trapToken.id}, parsed trapData.position: ${trapData ? trapData.position : 'N/A (no trapData)'}`, 'debug');\n\n        const trapCoords = TrapUtils.geometry.getTokenGridCoords(trapToken);\n        if (!trapCoords) {\n            TrapUtils.log(\"calculateTrapPosition: Trap coordinates not found.\", \"warning\");\n            return { initial: intersection, final: intersection };\n        }\n\n        const currentGridSize = trapCoords.gridSize;\n        const rawIntersectionPoint = { x: intersection.x, y: intersection.y };\n        \n        let initialCalculatedPos;\n        let finalPos;\n\n        const getOccupiedPixelPositions = () => {\n            return Object.entries(Config.state.lockedTokens)\n                .filter(([id, v]) => v.trapToken === trapToken.id && id !== movedToken.id)\n                .map(([id, _]) => {\n                    const t = getObj(\"graphic\", id);\n                    return t ? { x: t.get(\"left\"), y: t.get(\"top\") } : null;\n                })\n                .filter(Boolean);\n        };\n\n        const isPixelPosOccupied = (candidatePixelX, candidatePixelY, occupiedList) => {\n            return occupiedList.some(o => {\n                const dx = o.x - candidatePixelX;\n                const dy = o.y - candidatePixelY;\n                return Math.sqrt(dx * dx + dy * dy) < (currentGridSize * 0.5);\n            });\n        };\n\n        const findUnoccupiedCellNear = (basePixelX, basePixelY, tc, occupiedList, searchTrapBoundsOnly = true) => {\n            TrapUtils.log(`[CalcTrapPos-findUnoccupiedCellNear] basePixel: (${basePixelX.toFixed(2)}, ${basePixelY.toFixed(2)}), tc.x: ${tc.x}, tc.y: ${tc.y}, tc.width: ${tc.width}, tc.height: ${tc.height}, searchTrapBoundsOnly: ${searchTrapBoundsOnly}`, 'debug');\n            \n            let targetCellCol = Math.round(basePixelX / currentGridSize - 0.5);\n            let targetCellRow = Math.round(basePixelY / currentGridSize - 0.5);\n            TrapUtils.log(`[CalcTrapPos-findUnoccupiedCellNear] Initial absolute target cell from basePixel: (${targetCellCol}, ${targetCellRow})`, 'debug');\n\n            if (searchTrapBoundsOnly) {\n                const relTargetCol = targetCellCol - tc.x;\n                const relTargetRow = targetCellRow - tc.y;\n                const clampedRelCol = Math.min(Math.max(0, relTargetCol), tc.width - 1);\n                const clampedRelRow = Math.min(Math.max(0, relTargetRow), tc.height - 1);\n                targetCellCol = tc.x + clampedRelCol;\n                targetCellRow = tc.y + clampedRelRow;\n                TrapUtils.log(`[CalcTrapPos-findUnoccupiedCellNear] Clamped absolute target cell (within trap bounds): (${targetCellCol}, ${targetCellRow})`, 'debug');\n            }\n            \n            let primaryTargetPixelX = targetCellCol * currentGridSize + currentGridSize / 2;\n            let primaryTargetPixelY = targetCellRow * currentGridSize + currentGridSize / 2;\n            TrapUtils.log(`[CalcTrapPos-findUnoccupiedCellNear] Primary target pixel center: (${primaryTargetPixelX.toFixed(2)}, ${primaryTargetPixelY.toFixed(2)})`, 'debug');\n\n            let newPos = { x: primaryTargetPixelX, y: primaryTargetPixelY };\n\n            if (isPixelPosOccupied(primaryTargetPixelX, primaryTargetPixelY, occupiedList)) {\n                TrapUtils.log(`[CalcTrapPos-findUnoccupiedCellNear] Primary target is occupied. Searching adjacent...`, 'debug');\n                const adjacentOffsets = [\n                    { dx: 0, dy: 0 },\n                    { dx: 1, dy: 0 }, { dx: -1, dy: 0 },\n                    { dx: 0, dy: 1 }, { dx: 0, dy: -1 },\n                    { dx: 1, dy: 1 }, { dx: -1, dy: -1 },\n                    { dx: 1, dy: -1 }, { dx: -1, dy: 1 }\n                ];\n\n                for (const offset of adjacentOffsets) {\n                    const checkCellCol = targetCellCol + offset.dx;\n                    const checkCellRow = targetCellRow + offset.dy;\n\n                    if (searchTrapBoundsOnly) {\n                        const checkRelCellX = checkCellCol - tc.x;\n                        const checkRelCellY = checkCellRow - tc.y;\n                        if (checkRelCellX < 0 || checkRelCellX >= tc.width ||\n                            checkRelCellY < 0 || checkRelCellY >= tc.height) {\n                            TrapUtils.log(`[CalcTrapPos-findUnoccupiedCellNear] Skipping adjacent cell (${checkCellCol},${checkCellRow}) as it's outside trap bounds.`, 'debug');\n                            continue;\n                        }\n                    }\n                        \n                    const candidatePixelX = checkCellCol * currentGridSize + currentGridSize / 2;\n                    const candidatePixelY = checkCellRow * currentGridSize + currentGridSize / 2;\n\n                    if (!isPixelPosOccupied(candidatePixelX, candidatePixelY, occupiedList)) {\n                        newPos = { x: candidatePixelX, y: candidatePixelY };\n                        TrapUtils.log(`[CalcTrapPos-findUnoccupiedCellNear] Found unoccupied adjacent cell: (${newPos.x.toFixed(2)}, ${newPos.y.toFixed(2)}) at grid (${checkCellCol},${checkCellRow})`, 'debug');\n                        break;\n                    }\n                }\n            } else {\n                TrapUtils.log(`[CalcTrapPos-findUnoccupiedCellNear] Primary target is NOT occupied. Using it.`, 'debug');\n            }\n            return newPos;\n        };\n\n        const effectiveTrapPositionType = (trapData && trapData.position) ? trapData.position : 'intersection';\n        const occupiedPixelPosList = getOccupiedPixelPositions();\n\n        if (effectiveTrapPositionType === 'center') {\n            TrapUtils.log(`[CalcTrapPos-MAIN] Position type: 'center'. Trap: ${trapToken.id}`, 'debug');\n            const trapTokenCenterX = trapToken.get(\"left\");\n            const trapTokenCenterY = trapToken.get(\"top\");\n            initialCalculatedPos = findUnoccupiedCellNear(trapTokenCenterX, trapTokenCenterY, trapCoords, occupiedPixelPosList, true);\n            finalPos = { ...initialCalculatedPos };\n        \n        } else if (typeof effectiveTrapPositionType === 'object' && \n                   effectiveTrapPositionType.x !== undefined && \n                   effectiveTrapPositionType.y !== undefined) {\n            TrapUtils.log(`[CalcTrapPos-MAIN] Position type: 'specific coords' ${JSON.stringify(effectiveTrapPositionType)}. Trap: ${trapToken.id}`, 'debug');\n            const targetRelCellX = Math.min(Math.max(0, effectiveTrapPositionType.x), trapCoords.width - 1);\n            const targetRelCellY = Math.min(Math.max(0, effectiveTrapPositionType.y), trapCoords.height - 1);\n            \n            const specificTargetPixelX = (trapCoords.x + targetRelCellX) * currentGridSize + currentGridSize / 2;\n            const specificTargetPixelY = (trapCoords.y + targetRelCellY) * currentGridSize + currentGridSize / 2;\n            \n            initialCalculatedPos = findUnoccupiedCellNear(specificTargetPixelX, specificTargetPixelY, trapCoords, occupiedPixelPosList, true);\n            finalPos = { ...initialCalculatedPos };\n\n        } else { // Includes 'intersection' and any other unrecognized, defaulting to intersection behavior\n            if (effectiveTrapPositionType !== 'intersection') {\n                TrapUtils.log(`[CalcTrapPos-MAIN] Position type: '${effectiveTrapPositionType}' (unrecognized, defaulting to OBB-sensitive intersection). Trap: ${trapToken.id}`, 'warn');\n            } else {\n                TrapUtils.log(`[CalcTrapPos-MAIN] Position type: 'intersection' (OBB-sensitive). Trap: ${trapToken.id}`, 'debug');\n            }\n            \n            TrapUtils.log(`[CalcTrapPos-OBBIntersection] Raw geometric intersection point: (${rawIntersectionPoint.x.toFixed(2)}, ${rawIntersectionPoint.y.toFixed(2)})`, 'debug');\n            const obbCorners = TrapUtils.geometry.getOBBCorners(trapToken);\n\n            if (!obbCorners) {\n                TrapUtils.log('[CalcTrapPos-OBBIntersection] Could not get OBB corners for trap. Defaulting to basic grid snap of raw intersection.', 'error');\n                const snappedCellCol_abs = Math.round(rawIntersectionPoint.x / currentGridSize - 0.5);\n                const snappedCellRow_abs = Math.round(rawIntersectionPoint.y / currentGridSize - 0.5);\n                initialCalculatedPos = {\n                    x: snappedCellCol_abs * currentGridSize + currentGridSize / 2,\n                    y: snappedCellRow_abs * currentGridSize + currentGridSize / 2\n                };\n            } else {\n                let bestCellCenter = null;\n                let minDistanceSqToIntersection = Infinity;\n                const searchRadiusCells = 1; // Search 1 cell around (3x3 area), including the center cell.\n\n                const centerCellCol = Math.round(rawIntersectionPoint.x / currentGridSize - 0.5);\n                const centerCellRow = Math.round(rawIntersectionPoint.y / currentGridSize - 0.5);\n\n                for (let dRow = -searchRadiusCells; dRow <= searchRadiusCells; dRow++) {\n                    for (let dCol = -searchRadiusCells; dCol <= searchRadiusCells; dCol++) {\n                        const currentCellCol = centerCellCol + dCol;\n                        const currentCellRow = centerCellRow + dRow;\n                        const candidateCellCenter = {\n                            x: currentCellCol * currentGridSize + currentGridSize / 2,\n                            y: currentCellRow * currentGridSize + currentGridSize / 2\n                        };\n\n                        if (TrapUtils.geometry.isPointInOBB(candidateCellCenter, obbCorners)) {\n                            const dx = candidateCellCenter.x - rawIntersectionPoint.x;\n                            const dy = candidateCellCenter.y - rawIntersectionPoint.y;\n                            const distSq = dx * dx + dy * dy;\n\n                            if (distSq < minDistanceSqToIntersection) {\n                                minDistanceSqToIntersection = distSq;\n                                bestCellCenter = candidateCellCenter;\n                            }\n                            TrapUtils.log(`[CalcTrapPos-OBBIntersection] Candidate cell (${currentCellCol},${currentCellRow}), center (${candidateCellCenter.x.toFixed(2)},${candidateCellCenter.y.toFixed(2)}) IS IN OBB. DistSq: ${distSq.toFixed(2)}`, 'debug');\n                        } else {\n                            TrapUtils.log(`[CalcTrapPos-OBBIntersection] Candidate cell (${currentCellCol},${currentCellRow}), center (${candidateCellCenter.x.toFixed(2)},${candidateCellCenter.y.toFixed(2)}) is NOT in OBB.`, 'debug');\n                        }\n                    }\n                }\n\n                if (bestCellCenter) {\n                    initialCalculatedPos = bestCellCenter;\n                    TrapUtils.log(`[CalcTrapPos-OBBIntersection] Best cell center found in OBB: (${bestCellCenter.x.toFixed(2)}, ${bestCellCenter.y.toFixed(2)})`, 'debug');\n                } else {\n                    TrapUtils.log('[CalcTrapPos-OBBIntersection] No cell center within search radius found inside OBB. Defaulting to basic grid snap of raw intersection.', 'warn');\n                    const snappedCellCol_abs = Math.round(rawIntersectionPoint.x / currentGridSize - 0.5);\n                    const snappedCellRow_abs = Math.round(rawIntersectionPoint.y / currentGridSize - 0.5);\n                    initialCalculatedPos = {\n                        x: snappedCellCol_abs * currentGridSize + currentGridSize / 2,\n                        y: snappedCellRow_abs * currentGridSize + currentGridSize / 2\n                    };\n                }\n            }\n            \n            TrapUtils.log(`[CalcTrapPos-OBBIntersection] Snapped initialCalculatedPos: (${initialCalculatedPos.x.toFixed(2)}, ${initialCalculatedPos.y.toFixed(2)})`, 'debug');\n\n            if (!isPixelPosOccupied(initialCalculatedPos.x, initialCalculatedPos.y, occupiedPixelPosList)) {\n                finalPos = { ...initialCalculatedPos };\n                TrapUtils.log(`[CalcTrapPos-OBBIntersection] Snapped initial position is NOT occupied. Using it as finalPos.`, 'debug');\n            } else {\n                TrapUtils.log(`[CalcTrapPos-OBBIntersection] Snapped initial position IS OCCUPIED. Calling findUnoccupiedCellNear (searchTrapBoundsOnly=false for adjacency search).`, 'debug');\n                finalPos = findUnoccupiedCellNear(initialCalculatedPos.x, initialCalculatedPos.y, trapCoords, occupiedPixelPosList, false);\n            }\n        }\n\n        TrapUtils.log(`[CalcTrapPos-EXIT] trap.id: ${trapToken.id}, final initialCalculatedPos: (${initialCalculatedPos.x.toFixed(2)},${initialCalculatedPos.y.toFixed(2)}), final finalPos: (${finalPos.x.toFixed(2)},${finalPos.y.toFixed(2)})`, 'debug');\n        return { initial: initialCalculatedPos, final: finalPos };\n    }\n};\n\nexport default MovementDetector;","// src/trap-detection.js\n// Passive detection system for automatic trap discovery via perception checks\n\nimport TrapUtils from './trap-utils.js';\nimport { Config } from './trap-core.js';\n\nexport const PassiveDetection = {\n    /**\n     * Handle when a character notices a trap passively\n     * @param {object} triggeringToken - The token that noticed the trap\n     * @param {object} noticedTrap - The trap token that was noticed\n     * @param {object} perceptionData - Object with finalPP, basePP, luckBonus\n     * @param {object} trapConfig - The trap configuration\n     * @param {number} distanceToTrap - Distance to the trap in map units\n     */\n    handlePassiveNotice(triggeringToken, noticedTrap, perceptionData, trapConfig, distanceToTrap) {\n        const charId = triggeringToken.get('represents');\n        const observerId = charId || triggeringToken.id;\n\n        // Ensure passivelyNoticedTraps is initialized\n        if (typeof Config.state.passivelyNoticedTraps !== 'object' || Config.state.passivelyNoticedTraps === null) {\n            Config.state.passivelyNoticedTraps = {};\n        }\n\n        // Update state that this character has noticed this trap\n        if (!Config.state.passivelyNoticedTraps[noticedTrap.id]) {\n            Config.state.passivelyNoticedTraps[noticedTrap.id] = {};\n        }\n        Config.state.passivelyNoticedTraps[noticedTrap.id][observerId] = true;\n\n        // Persistently mark the trap as detected in its notes\n        let notes = noticedTrap.get(\"gmnotes\");\n        let decodedNotes = \"\";\n        try { \n            decodedNotes = decodeURIComponent(notes); \n        } catch (e) { \n            decodedNotes = notes; \n        }\n\n        // Update detection block to mark as detected\n        const detectionBlockRegex = /\\{!trapdetection\\s+((?:(?!\\{!}).)*)\\}/;\n        const match = decodedNotes.match(detectionBlockRegex);\n\n        if (match && match[1] && !/detected:\\s*\\[on\\]/.test(match[1])) {\n            const originalFullBlock = match[0];\n            const originalBlockContent = match[1];\n            \n            // Add the detected flag to the content\n            const newBlockContent = originalBlockContent.trim() + ' detected:[on]';\n            const newFullBlock = `{!trapdetection ${newBlockContent}}`;\n            \n            // Replace the old block with the new one in the notes\n            const updatedNotes = decodedNotes.replace(originalFullBlock, newFullBlock);\n            \n            noticedTrap.set(\"gmnotes\", encodeURIComponent(updatedNotes));\n            // Re-parse the notes to get the most up-to-date config\n            trapConfig = TrapUtils.parseTrapNotes(updatedNotes, noticedTrap, false);\n        }\n\n        // Update the trap's aura2 color to show it's been detected\n        noticedTrap.set({\n            aura2_color: Config.AURA_COLORS.DETECTED\n        });\n\n        const character = charId ? getObj('character', charId) : null;\n        const observerName = character ? character.get('name') : triggeringToken.get('name') || \"Unnamed Token\";\n        const trapName = noticedTrap.get('name') || 'Unnamed Trap';\n\n        // Build placeholder replacements\n        const placeholders = {\n            '{charName}': observerName,\n            '{trapName}': trapName,\n            '{charPP}': String(perceptionData.finalPP),\n            '{trapDC}': String(trapConfig.passiveSpotDC),\n            '{distanceToTrap}': distanceToTrap.toFixed(1),\n            '{luckBonus}': String(perceptionData.luckBonus),\n            '{basePP}': String(perceptionData.basePP)\n        };\n\n        // Replace all placeholders in the message\n        const replacePlaceholders = (str) => {\n            if (!str) return '';\n            let result = str;\n            for (const [key, value] of Object.entries(placeholders)) {\n                const escapedKey = key.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n                result = result.replace(new RegExp(escapedKey, 'g'), value);\n            }\n            return result;\n        };\n\n        // Define message templates\n        const PLAYER_MSG_TEMPLATE_NAME = \"‚ö†Ô∏è Alert!\";\n        const PLAYER_MSG_PREFIX = `&{template:default} {{name=${PLAYER_MSG_TEMPLATE_NAME}}} {{message=`;\n        \n        // Get player's token image for GM message header\n        const playerTokenImgUrl = TrapUtils.getTokenImageURL(triggeringToken, 'thumb');\n        const playerTokenImage = playerTokenImgUrl === 'üë§' ? '' : `<img src='${playerTokenImgUrl}' width='30' height='30' style='vertical-align: middle; margin-left: 5px;'>`;\n        const GM_MSG_TEMPLATE_NAME = `üéØ Passive Spot ${playerTokenImage}`;\n\n        const GM_MSG_PREFIX = `&{template:default} {{name=${GM_MSG_TEMPLATE_NAME}}} {{message=`;\n        const MSG_SUFFIX = \"}}\";\n\n        const defaultPlayerMsgContent = Config.messages.defaults.playerNotice;\n        const defaultGmMsgContent = Config.messages.defaults.gmNotice;\n\n        // Build player message\n        let playerMsgContent = trapConfig.passiveNoticePlayer || defaultPlayerMsgContent;\n        let finalPlayerMsg = PLAYER_MSG_PREFIX + replacePlaceholders(playerMsgContent) + MSG_SUFFIX;\n        \n        // Get controlling players\n        let controllingPlayerIds = [];\n        if (character) {\n            controllingPlayerIds = (character.get('controlledby') || \"\").split(',')\n                .map(pid => pid.trim())\n                .filter(pid => pid && !TrapUtils.playerIsGM(pid));\n        } else {\n            controllingPlayerIds = (triggeringToken.get('controlledby') || \"\").split(',')\n                .map(pid => pid.trim())\n                .filter(pid => pid && !TrapUtils.playerIsGM(pid));\n        }\n\n        // Debounce player messages\n        const currentTime = Date.now();\n        const debounceTime = Config.messages.passiveNoticeDebounceTime || 100000; // Default 100s\n\n        if (!Config.state.recentlyNoticedPlayerMessages[charId]) {\n            Config.state.recentlyNoticedPlayerMessages[charId] = [];\n        }\n\n        // Filter out old messages\n        Config.state.recentlyNoticedPlayerMessages[charId] = Config.state.recentlyNoticedPlayerMessages[charId].filter(\n            entry => (currentTime - entry.timestamp) < debounceTime\n        );\n\n        const alreadySentRecently = Config.state.recentlyNoticedPlayerMessages[charId].some(\n            entry => entry.messageContent === finalPlayerMsg\n        );\n\n        if (alreadySentRecently) {\n            TrapUtils.log(`Passive Notice SUPPRESSED for player(s) of ${observerName} (charId: ${charId}) - identical message sent recently`, 'debug');\n        } else if (controllingPlayerIds.length > 0) {\n            controllingPlayerIds.forEach(pid => {\n                const player = getObj(\"player\", pid);\n                if (player) {\n                    sendChat(\"TrapSystem\", `/w \"${player.get(\"displayname\") || pid}\" ${finalPlayerMsg}`);\n                } else {\n                    TrapUtils.log(`Passive Notice: Could not find player object for ID ${pid}`, 'warn');\n                }\n            });\n            // Record this message as sent\n            Config.state.recentlyNoticedPlayerMessages[charId].push({ \n                messageContent: finalPlayerMsg, \n                timestamp: currentTime \n            });\n        } else {\n            TrapUtils.chat(`‚ö†Ô∏è No players control '${observerName}', which would have spotted '${trapName}'.`);\n            TrapUtils.log(`Passive Notice: No non-GM players control observer ${observerName} to send notice.`, 'info');\n        }\n\n        // Send GM message\n        let gmMsgContent = trapConfig.passiveNoticeGM || defaultGmMsgContent;\n        let finalGmMsg = GM_MSG_PREFIX + replacePlaceholders(gmMsgContent) + MSG_SUFFIX;\n        TrapUtils.chat(finalGmMsg);\n\n        TrapUtils.log(`Passive Notice: ${observerName} (BasePP ${perceptionData.basePP}, Luck ${perceptionData.luckBonus}, FinalPP ${perceptionData.finalPP}) spotted ${trapName} (DC ${trapConfig.passiveSpotDC}) at ${distanceToTrap.toFixed(1)}ft.`, 'info');\n    },\n\n    /**\n     * Get a character's passive perception with luck bonuses\n     * @param {object} token - The token to check\n     * @param {object} trapConfig - The trap configuration for luck roll settings\n     * @returns {object} Object with finalPP, basePP, luckBonus\n     */\n    async getCharacterPassivePerception(token, trapConfig) {\n        if (Config.DEBUG) {\n            TrapUtils.log(`[getCharacterPassivePerception] Received trapConfig: ${JSON.stringify(trapConfig)}`, 'debug');\n        }\n        \n        const charId = token.get('represents');\n        let basePP = null;\n        let luckBonus = 0;\n\n        // 1. Try Beacon API (getSheetItem) first\n        if (typeof getSheetItem === 'function') {\n            try {\n                const item = await getSheetItem(charId, \"passive_wisdom\");\n                const ppRaw = (item && typeof item.value !== 'undefined') ? item.value : item;\n                if (ppRaw !== undefined && ppRaw !== null && ppRaw !== \"\") {\n                    const parsedPP = parseInt(ppRaw, 10);\n                    if (!isNaN(parsedPP)) {\n                        TrapUtils.log(`Got PP ${parsedPP} from 'passive_wisdom' (getSheetItem) for char ${charId}.`, 'debug');\n                        basePP = parsedPP;\n                    }\n                }\n                if (basePP === null) {\n                    TrapUtils.log(`'passive_wisdom' (getSheetItem) for char ${charId} was empty or not a number: '${ppRaw}'.`, 'debug');\n                }\n            } catch (err) {\n                TrapUtils.log(`Error with getSheetItem for 'passive_wisdom' on char ${charId}: ${err}. Falling back.`, 'warn');\n            }\n        }\n\n        // 2. Try to get 'passive_wisdom' attribute directly using getAttrByName\n        if (basePP === null && typeof getAttrByName === 'function') {\n            const passiveWisdomRaw = getAttrByName(charId, \"passive_wisdom\");\n            if (passiveWisdomRaw !== undefined && passiveWisdomRaw !== null && passiveWisdomRaw !== \"\") {\n                const parsedPP = parseInt(passiveWisdomRaw, 10);\n                if (!isNaN(parsedPP)) {\n                    TrapUtils.log(`Got PP ${parsedPP} from 'passive_wisdom' (getAttrByName) for char ${charId}.`, 'debug');\n                    basePP = parsedPP;\n                } else {\n                    TrapUtils.log(`'passive_wisdom' (getAttrByName) for char ${charId} ('${passiveWisdomRaw}') is not a valid number.`, 'warn');\n                }\n            } else {\n                TrapUtils.log(`'passive_wisdom' (getAttrByName) not found or empty for char ${charId}.`, 'debug');\n            }\n        }\n        \n        // 3. Try Token Bar Fallback\n        if (basePP === null && trapConfig && trapConfig.ppTokenBarFallback && trapConfig.ppTokenBarFallback !== \"none\") {\n            const barKey = trapConfig.ppTokenBarFallback.endsWith('_value') \n                ? trapConfig.ppTokenBarFallback \n                : `${trapConfig.ppTokenBarFallback}_value`;\n            const barValue = token.get(barKey);\n            if (barValue !== undefined && barValue !== null && barValue !== \"\") {\n                const parsedBarPP = parseInt(barValue, 10);\n                if (!isNaN(parsedBarPP)) {\n                    TrapUtils.log(`Got PP ${parsedBarPP} from token bar '${barKey}' for char ${charId} (fallback).`, 'debug');\n                    basePP = parsedBarPP;\n                } else {\n                    TrapUtils.log(`Value from token bar '${barKey}' for char ${charId} is not a number: '${barValue}'`, 'warn');\n                }\n            } else {\n                TrapUtils.log(`Token bar '${barKey}' not found or empty for char ${charId} (fallback).`, 'debug');\n            }\n        }\n\n        if (basePP === null) {\n            TrapUtils.log(`Could not determine Passive Perception for char ${charId} after all methods.`, 'warn');\n            return { finalPP: null, basePP: null, luckBonus: 0 };\n        }\n\n        // Check for luck roll properties\n        if (trapConfig && trapConfig.enableLuckRoll) {\n            const dieString = trapConfig.luckRollDie || '1d6';\n            luckBonus = this.parseAndRollLuckDie(dieString);\n        }\n        \n        const finalPP = basePP + luckBonus;\n        TrapUtils.log(`PP Calcs: BasePP=${basePP}, LuckBonus=${luckBonus}, FinalPP=${finalPP} for char ${charId}`, 'debug');\n        return { finalPP, basePP, luckBonus };\n    },\n\n    /**\n     * Parse and roll a luck die string (e.g., \"1d6\")\n     * @param {string} dieString - The die string to parse and roll\n     * @returns {number} The rolled result\n     */\n    parseAndRollLuckDie(dieString) {\n        if (!dieString || typeof dieString !== 'string') return 0;\n        \n        const match = dieString.match(/(\\d+)d(\\d+)([+-]\\d+)?/i);\n        if (!match) return 0;\n        \n        const numDice = parseInt(match[1], 10);\n        const dieSize = parseInt(match[2], 10);\n        const modifier = match[3] ? parseInt(match[3], 10) : 0;\n        \n        let total = 0;\n        for (let i = 0; i < numDice; i++) {\n            total += Math.floor(Math.random() * dieSize) + 1;\n        }\n        total += modifier;\n        \n        TrapUtils.log(`Luck roll: ${dieString} = ${total}`, 'debug');\n        return total;\n    },\n\n    /**\n     * Update the detection aura for a trap token\n     * @param {object} trapToken - The trap token to update\n     */\n    updateAuraForDetectionRange(trapToken) {\n        if (!trapToken || !TrapUtils.isTrap(trapToken)) return;\n\n        // Check for global hide\n        if (Config.state.detectionAurasTemporarilyHidden) {\n            trapToken.set({ aura2_radius: '' });\n            return;\n        }\n\n        const trapData = TrapUtils.parseTrapNotes(trapToken.get(\"gmnotes\"), trapToken, false);\n        if (!trapData) {\n            // If it's not a valid trap, ensure the aura is off\n            trapToken.set({ aura2_radius: '', aura2_color: '#000000' });\n            return;\n        }\n\n        // Only show the aura if showDetectionAura is explicitly true\n        if (trapData.showDetectionAura !== true) {\n            trapToken.set({ aura2_radius: '' });\n            TrapUtils.log(`Hiding detection aura for ${trapToken.id} because showDetectionAura is not explicitly true.`, 'debug');\n            return;\n        }\n        \n        // Determine the correct color and radius based on trap state\n        const isArmedAndHasUses = trapData.isArmed && trapData.currentUses > 0;\n        const isDetected = trapData.detected;\n        let aura2Color = '#000000';\n        let aura2Radius = '';\n\n        if (isArmedAndHasUses) {\n            aura2Color = isDetected ? Config.AURA_COLORS.DETECTED : Config.AURA_COLORS.DETECTION;\n            // Calculate radius based on range\n            const pageSettings = TrapUtils.geometry.getPageSettings(trapToken.get('_pageid'));\n            if (pageSettings.valid && trapData.passiveMaxRange > 0) {\n                const pixelsPerFoot = pageSettings.gridSize / pageSettings.scale;\n                const tokenRadiusPixels = Math.max(trapToken.get('width'), trapToken.get('height')) / 2;\n                const tokenRadiusFt = tokenRadiusPixels / pixelsPerFoot;\n                aura2Radius = Math.max(0, trapData.passiveMaxRange - tokenRadiusFt);\n            }\n        } else { // Disarmed or no uses\n            aura2Radius = 0; // Show a visible dot to indicate state\n            aura2Color = isDetected ? Config.AURA_COLORS.DISARMED_DETECTED : Config.AURA_COLORS.DISARMED_UNDETECTED;\n        }\n        \n        // Override color if passive detection is manually disabled for the trap\n        if (trapData.passiveEnabled === false) {\n            aura2Color = Config.AURA_COLORS.PASSIVE_DISABLED;\n        }\n\n        trapToken.set({\n            aura2_color: aura2Color,\n            aura2_radius: aura2Radius\n        });\n\n        TrapUtils.log(`Detection Aura Recalculated for ${trapToken.id}: Range ${trapData.passiveMaxRange || 0}ft, Radius ${aura2Radius}, Color ${aura2Color}`, 'debug');\n    },\n\n    /**\n     * Run a single passive check between an observer and a trap\n     * @param {object} observerToken - The token making the check\n     * @param {object} trapToken - The trap token being checked against\n     */\n    async runSinglePassiveCheck(observerToken, trapToken) {\n        if (!observerToken || !trapToken) return;\n\n        // Ensure the trap token is actually a trap\n        if (!TrapUtils.isTrap(trapToken)) return;\n\n        const trapData = TrapUtils.parseTrapNotes(trapToken.get(\"gmnotes\"), trapToken, false);\n\n        // Check if trap has passive detection enabled\n        if (!trapData || !trapData.isPassive || trapData.passiveEnabled === false) {\n            return; // No passive detection configured\n        }\n\n        // Use character ID if available, otherwise use token ID\n        const observerId = observerToken.get('represents') || observerToken.id;\n\n        // Check if observer has already noticed this trap\n        const alreadyNoticed = Config.state.passivelyNoticedTraps[trapToken.id] && \n                              Config.state.passivelyNoticedTraps[trapToken.id][observerId];\n        if (alreadyNoticed) {\n            if (Config.DEBUG) {\n                TrapUtils.log(`Passive Notice SKIPPED for trap ${trapToken.id}: Observer ${observerId} has already noticed it.`, 'debug');\n            }\n            return;\n        }\n\n        // Check for Line of Sight\n        const hasLOS = this.hasLineOfSight(observerToken, trapToken);\n        if (!hasLOS) {\n            if (Config.DEBUG) {\n                TrapUtils.log(`Passive detection of trap ${trapToken.id} by ${observerToken.id} failed: No Line of Sight.`, 'debug');\n            }\n            return;\n        }\n        \n        if (Config.DEBUG) {\n            TrapUtils.log(`Passive detection check for trap ${trapToken.id} by ${observerToken.id}: Has Line of Sight.`, 'debug');\n        }\n        \n        // Check distance vs max range\n        const { mapUnitDistance } = TrapUtils.geometry.calculateTokenDistance(observerToken, trapToken);\n        if (trapData.passiveMaxRange && mapUnitDistance > trapData.passiveMaxRange) {\n            if (Config.DEBUG) {\n                TrapUtils.log(`Passive detection of trap ${trapToken.id} by ${observerToken.id} failed: Out of max range (${mapUnitDistance.toFixed(1)}ft > ${trapData.passiveMaxRange}ft).`, 'debug');\n            }\n            return;\n        }\n\n        // Perform perception check\n        const perceptionResult = await this.getCharacterPassivePerception(observerToken, trapData);\n        if (perceptionResult.finalPP !== null && perceptionResult.finalPP >= trapData.passiveSpotDC) {\n            this.handlePassiveNotice(observerToken, trapToken, perceptionResult, trapData, mapUnitDistance);\n        }\n    },\n\n    /**\n     * Basic line of sight check (placeholder - can be enhanced)\n     * @param {object} observerToken - The observing token\n     * @param {object} targetToken - The target token\n     * @returns {boolean} True if line of sight exists\n     */\n    hasLineOfSight(observerToken, targetToken) {\n        // For now, just check if they're on the same page\n        // This can be enhanced with actual line-of-sight calculations\n        return observerToken.get('_pageid') === targetToken.get('_pageid');\n    },\n\n    /**\n     * Run passive checks for a token against all traps on the page\n     * @param {object} observerToken - The token to run checks for\n     */\n    async runPassiveChecksForToken(observerToken) {\n        if (!observerToken) return;\n\n        const pageId = observerToken.get('_pageid');\n        const trapTokens = findObjs({ _type: \"graphic\", _pageid: pageId }).filter(t => TrapUtils.isTrap(t));\n\n        if (trapTokens.length === 0) {\n            return; // No traps on the page\n        }\n        \n        if (Config.DEBUG) {\n            TrapUtils.log(`[DEBUG] Running passive checks for moving token '${observerToken.get('name')}' against ${trapTokens.length} traps.`, 'debug');\n        }\n\n        const checkPromises = trapTokens.map(trap => {\n            return this.runSinglePassiveCheck(observerToken, trap);\n        });\n        await Promise.all(checkPromises);\n    },\n\n    /**\n     * Run page-wide passive checks for all player tokens against all traps\n     * @param {string} pageId - The page ID to run checks on\n     */\n    runPageWidePassiveChecks(pageId) {\n        if (!pageId) return;\n        TrapUtils.log(`Running page-wide passive checks for page ${pageId}.`, 'info');\n\n        // Find all tokens on the page that represent a character\n        const allTokensOnPage = findObjs({ _type: 'graphic', _pageid: pageId, layer: 'objects' });\n        const playerTokens = allTokensOnPage.filter(t => t.get('represents'));\n\n        // Find all traps on the page\n        const trapTokens = allTokensOnPage.filter(t => TrapUtils.isTrap(t));\n\n        if (playerTokens.length > 0 && trapTokens.length > 0) {\n            TrapUtils.log(`Found ${playerTokens.length} player tokens and ${trapTokens.length} traps. Checking LOS for all pairs.`, 'debug');\n            // For each token, check against each trap\n            playerTokens.forEach(pToken => {\n                trapTokens.forEach(tToken => {\n                    // Fire-and-forget the async check for each pair\n                    this.runSinglePassiveCheck(pToken, tToken);\n                });\n            });\n        }\n    },\n\n    /**\n     * Reset detection state for traps\n     * @param {object} selectedToken - Optional specific trap token to reset\n     * @param {string} playerId - Player ID for messaging\n     */\n    handleResetDetection(selectedToken, playerId) {\n        TrapUtils.log('handleResetDetection called.', 'debug');\n        let message = '';\n\n        if (selectedToken && TrapUtils.isTrap(selectedToken)) {\n            const trapId = selectedToken.id;\n            const trapName = selectedToken.get(\"name\") || `Trap ID ${trapId}`;\n            \n            if (Config.state.passivelyNoticedTraps && Config.state.passivelyNoticedTraps[trapId]) {\n                // Remove the persistent 'detected' flag from notes\n                let notes = selectedToken.get(\"gmnotes\");\n                let decodedNotes = \"\";\n                try { \n                    decodedNotes = decodeURIComponent(notes); \n                } catch (e) { \n                    decodedNotes = notes; \n                }\n                \n                if (decodedNotes.includes(\"detected:[on]\")) {\n                    const updatedNotes = decodedNotes.replace(/\\s*detected:\\s*\\[on\\]/, '');\n                    selectedToken.set(\"gmnotes\", encodeURIComponent(updatedNotes));\n                    TrapUtils.parseTrapNotes(updatedNotes, selectedToken);\n                }\n                \n                delete Config.state.passivelyNoticedTraps[trapId];\n                TrapUtils.log(`Passively noticed state for trap ID '${trapId}' has been cleared.`, 'info');\n                message = `‚úÖ Passive detection state for selected trap '${trapName}' has been reset.`;\n            } else {\n                TrapUtils.log(`No passively noticed state found for specific trap ID '${trapId}' to clear.`, 'info');\n                message = `‚ÑπÔ∏è No passive detection state to reset for selected trap '${trapName}'.`;\n            }\n        } else {\n            // Clear the entire passively noticed traps state\n            if (Object.keys(Config.state.passivelyNoticedTraps).length > 0) {\n                // Find all traps and reset their auras if they were previously detected\n                const allTraps = findObjs({ _type: \"graphic\" }).filter(t => TrapUtils.isTrap(t));\n                allTraps.forEach(trapToken => {\n                    // Remove persistent flags from all traps\n                    let notes = trapToken.get(\"gmnotes\");\n                    let decodedNotes = \"\";\n                    try { \n                        decodedNotes = decodeURIComponent(notes); \n                    } catch (e) { \n                        decodedNotes = notes; \n                    }\n                    \n                    if (decodedNotes.includes(\"detected:[on]\")) {\n                        const updatedNotes = decodedNotes.replace(/\\s*detected:\\s*\\[on\\]/, '');\n                        trapToken.set(\"gmnotes\", encodeURIComponent(updatedNotes));\n                        TrapUtils.parseTrapNotes(updatedNotes, trapToken);\n                    }\n                });\n                \n                Config.state.passivelyNoticedTraps = {};\n                TrapUtils.log('All passivelyNoticedTraps have been cleared.', 'info');\n                message = '‚úÖ All passive detection states have been reset. Characters will need to re-detect all traps.';\n            } else {\n                TrapUtils.log('passivelyNoticedTraps was already empty.', 'info');\n                message = '‚ÑπÔ∏è No passive detection states were active to reset.';\n            }\n        }\n\n        // Notify the GM\n        if (playerId) {\n            TrapUtils.whisper(playerId, message);\n        } else {\n            TrapUtils.chat(message);\n        }\n    },\n\n    /**\n     * Hide all detection auras temporarily\n     * @param {number} durationMinutes - Duration to hide auras (0 for indefinite)\n     * @param {string} playerId - Player ID for messaging\n     */\n    hideAllAuras(durationMinutes, playerId) {\n        if (Config.state.hideAurasTimeout) {\n            clearTimeout(Config.state.hideAurasTimeout);\n            Config.state.hideAurasTimeout = null;\n        }\n\n        Config.state.detectionAurasTemporarilyHidden = true;\n\n        const allTraps = findObjs({ _type: \"graphic\" }).filter(t => TrapUtils.isTrap(t));\n        allTraps.forEach(trapToken => {\n            this.updateAuraForDetectionRange(trapToken);\n        });\n\n        let message = \"üëÅÔ∏è All detection auras are now hidden.\";\n        \n        const durationMs = parseFloat(durationMinutes) * 60 * 1000;\n        if (!isNaN(durationMs) && durationMs > 0) {\n            Config.state.hideAurasTimeout = setTimeout(() => {\n                this.showAllAuras(playerId, true);\n            }, durationMs);\n            message += ` They will automatically reappear in ${durationMinutes} minute(s).`;\n        }\n\n        TrapUtils.whisper(playerId, message);\n    },\n\n    /**\n     * Show all detection auras\n     * @param {string} playerId - Player ID for messaging\n     * @param {boolean} isAuto - Whether this was called automatically\n     */\n    showAllAuras(playerId, isAuto = false) {\n        if (Config.state.hideAurasTimeout) {\n            clearTimeout(Config.state.hideAurasTimeout);\n            Config.state.hideAurasTimeout = null;\n        }\n\n        Config.state.detectionAurasTemporarilyHidden = false;\n\n        const allTraps = findObjs({ _type: \"graphic\" }).filter(t => TrapUtils.isTrap(t));\n        allTraps.forEach(trapToken => {\n            this.updateAuraForDetectionRange(trapToken);\n        });\n        \n        const message = isAuto \n            ? \"‚è∞ Timer expired. All detection auras have been restored.\"\n            : \"üëÅÔ∏è All detection auras are now restored.\";\n\n        TrapUtils.whisper(playerId, message);\n    },\n\n    /**\n     * Show the passive detection setup menu\n     * @param {object} trapToken - The trap token to configure\n     * @param {string} playerId - Player ID for messaging\n     * @param {object} providedTrapData - Optional pre-parsed trap data\n     */\n    showPassiveSetupMenu(trapToken, playerId, providedTrapData = null) {\n        if (!trapToken) {\n            TrapUtils.chat(\"‚ùå No trap token selected for passive setup.\", playerId);\n            return;\n        }\n\n        const trapConfig = providedTrapData || TrapUtils.parseTrapNotes(trapToken.get(\"gmnotes\")) || {};\n\n        const currentDC = trapConfig.passiveSpotDC || 10;\n        const currentRange = trapConfig.passiveMaxRange || 0;\n        const currentTokenBar = trapConfig.ppTokenBarFallback || \"none\";\n        const currentLuckRoll = trapConfig.enableLuckRoll || false;\n        const currentLuckDie = trapConfig.luckRollDie || \"1d6\";\n        const currentShowAura = trapConfig.showDetectionAura || false;\n        const isPassiveEnabled = trapConfig.passiveEnabled === false ? false : true;\n\n        const PLAYER_MSG_TEMPLATE_NAME = Config.messages.templates.PLAYER_ALERT;\n        const PLAYER_MSG_PREFIX = `&{template:default} {{name=${PLAYER_MSG_TEMPLATE_NAME}}} {{message=`;\n        const GM_MSG_TEMPLATE_NAME = Config.messages.templates.GM_SPOT;\n        const GM_MSG_PREFIX = `&{template:default} {{name=${GM_MSG_TEMPLATE_NAME}}} {{message=`;\n        const MSG_SUFFIX = \"}}\";\n\n        const defaultPlayerMsgContent = Config.messages.defaults.playerNotice;\n        const defaultGmMsgContent = Config.messages.defaults.gmNotice;\n\n        // Helper to clean internal backslashes like {placeholder\\\\} to {placeholder}\n        const cleanInternalPlaceholderEscapes = (text) => {\n            if (typeof text !== 'string') return text;\n            return text.replace(/\\\\{(\\w+)\\\\\\\\\\\\/g, '{$1}');\n        };\n\n        const extractMessageContent = (fullStoredMsg, prefix, suffix, defaultContent) => {\n            let extractedContent = defaultContent; \n\n            if (typeof fullStoredMsg === 'string') {\n                if (fullStoredMsg.startsWith(prefix) && fullStoredMsg.endsWith(suffix)) {\n                    extractedContent = fullStoredMsg.substring(prefix.length, fullStoredMsg.length - suffix.length);\n                } else { \n                    extractedContent = fullStoredMsg; \n                }\n\n                const pipeIndex = extractedContent.indexOf('|');\n                if (pipeIndex !== -1) {\n                    let part1 = extractedContent.substring(0, pipeIndex);\n                    let part2 = extractedContent.substring(pipeIndex + 1);\n                    \n                    let cleanedPart1 = cleanInternalPlaceholderEscapes(part1);\n                    let cleanedPart2 = cleanInternalPlaceholderEscapes(part2);\n\n                    if (cleanedPart1 === cleanedPart2) { \n                        TrapUtils.log(`[DEBUG] extractMessageContent: Duplicated content (after cleaning internal \\\\): \"${cleanedPart1}\". Using cleaned first part.`, 'debug');\n                        extractedContent = cleanedPart1; \n                    } else {\n                         TrapUtils.log(`[DEBUG] extractMessageContent: Pipe found, but parts differ after cleaning. P1_cleaned: \"${cleanedPart1}\", P2_cleaned: \"${cleanedPart2}\". Keeping original and cleaning it: \"${extractedContent}\"`, 'debug');\n                         extractedContent = cleanInternalPlaceholderEscapes(extractedContent);\n                    }\n                } else {\n                    extractedContent = cleanInternalPlaceholderEscapes(extractedContent);\n                }\n            }\n            return extractedContent;\n        };\n        \n        let currentPlayerMsgContent = extractMessageContent(trapConfig.passiveNoticePlayer, PLAYER_MSG_PREFIX, MSG_SUFFIX, defaultPlayerMsgContent);\n        let currentGmMsgContent = extractMessageContent(trapConfig.passiveNoticeGM, GM_MSG_PREFIX, MSG_SUFFIX, defaultGmMsgContent);\n        \n        const getSafeQueryDefault = (content) => {\n            return content.replace(/\\|/g, '##PIPE##') \n                          .replace(/\\}/g, '##RBRACE##') \n                          .replace(/\\{/g, '##LBRACE##')\n                          .replace(/\\?/g, '##QMARK##') \n                          .replace(/\"/g, '##DQUOTE##')  \n                          .replace(/\\)/g, '##RPAREN##') \n                          .replace(/\\(/g, '##LPAREN##'); \n        };\n\n        const playerMsgQueryDefault = getSafeQueryDefault(currentPlayerMsgContent);\n        const gmMsgQueryDefault = getSafeQueryDefault(currentGmMsgContent);\n\n        const sanitizeForMenuPreview = (str, maxLength = 35) => {\n            if (!str) return \"(Not Set)\";\n            let preview = str.replace(/&{template:[^}]+}/g, \"\").replace(/{{[^}]+}}/g, \" [...] \");\n            preview = preview.replace(/<[^>]+>/g, \"\"); \n            preview = preview.replace(/\\[([^\\]]*)\\]\\(([^)]*)\\)/g, \"$1\"); \n            preview = preview.trim();\n            if (preview.length > maxLength) preview = preview.substring(0, maxLength - 3) + \"...\";\n            return preview.replace(/&/g, '&amp;').replace(/{/g, '&#123;').replace(/}/g, '&#125;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n        };\n\n        const playerMsgPreview = sanitizeForMenuPreview(currentPlayerMsgContent);\n        const gmMsgPreview = sanitizeForMenuPreview(currentGmMsgContent);\n\n        // Build placeholder help text\n        const placeholderHelp = Object.entries(Config.messages.placeholders)\n            .map(([key, desc]) => `- {${key}}: ${desc}`)\n            .join(\"\\n\");\n\n        const debounceTimeSeconds = (Config.messages.passiveNoticeDebounceTime || 100000) / 1000;\n\n        const menu = [\n            \"&{template:default}\",\n            `{{name=üõ†Ô∏è Passive Setup: ${trapToken.get('name') || 'Unnamed Trap'}}}`,\n            `{{Current DC=${currentDC}}}`,\n            `{{Current Range from center=${currentRange}ft (0 for none)}}`,\n            `{{Detection Aura=${currentShowAura ? 'Enabled' : 'Disabled'}}}`,\n            `{{PC Msg Content=${playerMsgPreview}}}`,\n            `{{GM Msg Content=${gmMsgPreview}}}`,\n            `{{Token Fallback=${currentTokenBar}}}`,\n            `{{Luck Roll=${currentLuckRoll ? 'Enabled' : 'Disabled'}}}`,\n            `{{Luck Die=${currentLuckDie}}}`,\n            \"{{Actions=\",\n            `[Set Trap DC](!trapsystem setpassive dc ${trapToken.id} ?{DC|${currentDC}})`,\n            `[Set Range](!trapsystem setpassive range ${trapToken.id} ?{Range ft from Center - 0 for none|${currentRange}})`,\n            `[Set PC Msg](!trapsystem setpassive playermsg ${trapToken.id} ?{Player Message with {placeholders}|${playerMsgQueryDefault}})`,\n            `[Set GM Msg](!trapsystem setpassive gmmsg ${trapToken.id} ?{GM Message with {placeholders}|${gmMsgQueryDefault}})`,\n            `[Toggle Luck](!trapsystem setpassive luckroll ${trapToken.id} ${!currentLuckRoll})`,\n            `[Set Luck üé≤](!trapsystem setpassive luckdie ${trapToken.id} ?{Luck Die - e.g., 1d6|${currentLuckDie}})`,\n            `[Toggle Detection Range Aura](!trapsystem setpassive showaura ${trapToken.id} ${!currentShowAura})`,\n            `[Toggle Passive](!trapsystem setpassive toggle ${trapToken.id})`,\n            `[Set TokenBar](!trapsystem setpassive tokenbar ${trapToken.id} ?{Token Bar Fallback - e.g., bar1|bar1 üü¢|bar2 üîµ|bar3 üî¥|none})`,\n            \"}}\",\n            \"{{‚ö†Ô∏è Notes=\",\n            \"- For custom messages, please avoid using emojis. Your message will be wrapped in a standard alert template which may not display emojis correctly.\\n\",\n            `- Player alerts for identical messages are debounced. If the same alert is triggered for the same character within ${debounceTimeSeconds} seconds, it will be suppressed for that player (GM alerts are not debounced), note distance placeholders will not be treated as identical messages.`,\n            \"}}\",\n            `{{‚ö†Ô∏è Help=Available placeholders: \\n ${placeholderHelp}}}`\n        ];\n        TrapUtils.chat(menu.join(\" \"), playerId);\n    },\n\n    /**\n     * Handle setting passive detection properties\n     * @param {Array} commandParams - Command parameters [property, trapId, ...values]\n     * @param {string} playerId - Player ID for messaging\n     */\n    handleSetPassiveProperty(commandParams, playerId) {\n        TrapUtils.log(`[DEBUG] handleSetPassiveProperty received commandParams: ${JSON.stringify(commandParams)}`, 'debug');\n\n        const tempUnescape = (s) => {\n            if (typeof s !== 'string') return s;\n            let temp = s;\n            temp = temp.replace(/##PIPE##/g, \"|\")\n                       .replace(/##RBRACE##/g, \"}\")\n                       .replace(/##LBRACE##/g, \"{\")\n                       .replace(/##QMARK##/g, \"?\")\n                       .replace(/##DQUOTE##/g, '\"')\n                       .replace(/##RPAREN##/g, \")\")\n                       .replace(/##LPAREN##/g, \"(\");\n            return temp;\n        };\n\n        if (commandParams.length < 2) {\n            TrapUtils.chat(\"‚ùå Insufficient arguments for setpassive. Expected: property trapId [value]\", playerId);\n            return;\n        }\n\n        const property = commandParams[0].toLowerCase();\n        const trapId = commandParams[1];\n        let rawValueFromArgs = commandParams.length > 2 ? commandParams.slice(2).join(\" \") : \"\";\n        let finalValueToStore = rawValueFromArgs;\n\n        const trapToken = getObj(\"graphic\", trapId);\n        if (!trapToken) {\n            TrapUtils.chat(`‚ùå Trap token with ID ${trapId} not found.`, playerId);\n            return;\n        }\n\n        let trapData = TrapUtils.parseTrapNotes(trapToken.get(\"gmnotes\"));\n        \n        if (trapData) {\n            TrapUtils.log(`[DEBUG] HPSP: trapData directly from parseTrapNotes: passiveNoticeGM='${trapData.passiveNoticeGM}', passiveNoticePlayer='${trapData.passiveNoticePlayer}', passiveSpotDC='${trapData.passiveSpotDC}'`, 'debug');\n        } else {\n            TrapUtils.log(`[DEBUG] HPSP: parseTrapNotes returned null. Will initialize new trapData.`, 'debug');\n        }\n\n        if (!trapData) {\n            TrapUtils.log(`No valid trap data found for ${trapId} or notes empty/malformed. Initializing new trapData for passive setup.`, 'warn');\n            trapData = {\n                type: \"standard\", currentUses: 0, maxUses: 0, isArmed: true,\n                primaryMacro: null, options: [], successMacro: null, failureMacro: null,\n                checks: [], movementTrigger: true, autoTrigger: false, position: \"intersection\",\n                passiveSpotDC: null, passiveMaxRange: null, passiveNoticePlayer: null,\n                passiveNoticeGM: null, ppTokenBarFallback: null, showDetectionAura: false,\n                enableLuckRoll: false, luckRollDie: \"1d6\",\n                rawTriggerBlock: null, rawDetectionBlock: null\n            };\n        }\n        \n        if (property === \"playermsg\" || property === \"gmmsg\") {\n            let unescapedFullRawInput = tempUnescape(rawValueFromArgs);\n            TrapUtils.log(`[DEBUG] HPSP: Unescaped input for ${property}: \"${unescapedFullRawInput}\"`, 'debug');\n            finalValueToStore = unescapedFullRawInput;\n\n            const pipeIndex = finalValueToStore.indexOf('|');\n            if (pipeIndex !== -1) {\n                finalValueToStore = finalValueToStore.substring(0, pipeIndex);\n                TrapUtils.log(`[DEBUG] HPSP: Truncated message at pipe. Storing: \"${finalValueToStore}\"`, 'debug');\n            }\n        }\n\n        const propToStoreOnTrapData = property === 'dc' ? 'passiveSpotDC' :\n                                      property === 'range' ? 'passiveMaxRange' :\n                                      property === 'playermsg' ? 'passiveNoticePlayer' :\n                                      property === 'gmmsg' ? 'passiveNoticeGM' :\n                                      property === 'tokenbar' ? 'ppTokenBarFallback' :\n                                      property === 'luckroll' ? 'enableLuckRoll' :\n                                      property === 'luckdie' ? 'luckRollDie' :\n                                      property === 'showaura' ? 'showDetectionAura' :\n                                      property === 'passiveenabled' ? 'passiveEnabled' : null;\n\n        let updateMade = false;\n\n        if (property === \"toggle\") {\n            const currentState = trapData.passiveEnabled === false ? false : true;\n            trapData.passiveEnabled = !currentState;\n            updateMade = true;\n            TrapUtils.log(`Toggled passive detection for trap ${trapId} to ${trapData.passiveEnabled ? 'on' : 'off'}.`, 'info');\n        } else if (propToStoreOnTrapData) {\n            let valueToSet = finalValueToStore;\n            if (property === \"dc\") {\n                const dcVal = parseInt(valueToSet, 10);\n                if (isNaN(dcVal) || dcVal < 0) { \n                    TrapUtils.chat(\"‚ùå Invalid DC value. Must be a non-negative number.\", playerId); \n                    return; \n                }\n                valueToSet = dcVal;\n                // Update token bar when DC is set\n                if (trapToken) {\n                    trapToken.set({\n                        bar2_value: dcVal,\n                        bar2_max: dcVal,\n                        showplayers_bar2: false\n                    });\n                }\n            } else if (property === \"range\") {\n                const rangeVal = parseFloat(valueToSet);\n                if (isNaN(rangeVal) || rangeVal < 0) { \n                    TrapUtils.chat(\"‚ùå Invalid Range value. Must be a non-negative number.\", playerId); \n                    return; \n                }\n                valueToSet = rangeVal;\n            } else if (property === \"tokenbar\") {\n                const parsedValue = String(valueToSet).split(' ')[0].trim();\n                valueToSet = (parsedValue.toLowerCase() === \"none\" || parsedValue === \"\") ? null : parsedValue;\n            } else if (property === \"luckroll\") {\n                valueToSet = String(valueToSet).toLowerCase() === \"true\";\n            } else if (property === \"luckdie\") {\n                if (!/^\\d+d\\d+$/i.test(valueToSet)) {\n                    TrapUtils.chat(\"‚ùå Invalid die format. Please use format like '1d6'.\", playerId);\n                    return;\n                }\n                valueToSet = String(valueToSet).trim();\n            } else if (property === \"showaura\") {\n                valueToSet = String(valueToSet).toLowerCase() === \"true\";\n            }\n            \n            trapData[propToStoreOnTrapData] = valueToSet;\n            updateMade = true;\n            TrapUtils.log(`Set trapData.${propToStoreOnTrapData} = ${JSON.stringify(valueToSet)} for trap ${trapId}.`, 'debug');\n        } else {\n            TrapUtils.chat(`‚ùå Unknown passive property: ${property}. Use dc, range, playermsg, gmmsg, tokenbar, luckroll, luckdie, showaura, or toggle.`, playerId);\n            this.showPassiveSetupMenu(trapToken, playerId);\n            return;\n        }\n\n        if (updateMade) {\n            const newGmNotesString = this.constructGmNotesFromTrapData(trapData);\n            \n            try {\n                const encodedNewGmNotes = encodeURIComponent(newGmNotesString);\n                trapToken.set(\"gmnotes\", encodedNewGmNotes);\n                TrapUtils.log(`Successfully updated GM notes for trap ${trapId}. New notes (raw): '${newGmNotesString}'`, 'info');\n                \n                // Re-parse to update visuals and get canonical data for menu refresh\n                const newlyParsedData = TrapUtils.parseTrapNotes(encodedNewGmNotes, trapToken);\n                this.updateAuraForDetectionRange(trapToken);\n                this.showPassiveSetupMenu(trapToken, playerId, newlyParsedData);\n\n            } catch (e) {\n                TrapUtils.log(`Error encoding or setting GM notes for trap ${trapId}: ${e.message}`, 'error');\n                TrapUtils.chat(\"‚ùå Error saving updated trap settings.\", playerId);\n            }\n        } else {\n            this.showPassiveSetupMenu(trapToken, playerId, trapData);\n        }  \n    },\n\n    /**\n     * Construct GM notes from trap data\n     * @param {object} trapData - The trap data object\n     * @returns {string} - The formatted GM notes string\n     */\n    constructGmNotesFromTrapData(trapData) {\n        if (!trapData) return \"\";\n        TrapUtils.log(`[constructGmNotesFromTrapData] Input trapData: ${JSON.stringify(trapData).substring(0,200)}...`, 'debug');\n\n        // Helper to wrap values containing special characters in quotes\n        const formatValue = (value) => {\n            if (typeof value !== 'string') return value;\n            if (value.includes('[') || value.includes(']')) {\n                const escapedValue = value.replace(/\"/g, '\\\\\"');\n                return `\"${escapedValue}\"`;\n            }\n            return value;\n        };\n\n        let triggerSettings = [];\n        if (trapData.type) triggerSettings.push(`type:[${trapData.type}]`);\n        \n        if (trapData.maxUses !== undefined || trapData.currentUses !== undefined) {\n             triggerSettings.push(`uses:[${trapData.currentUses || 0}/${trapData.maxUses || 0}]`);\n        }\n    \n        triggerSettings.push(`armed:[${trapData.isArmed ? 'on' : 'off'}]`); \n    \n        if (trapData.primaryMacro && trapData.primaryMacro.macro) triggerSettings.push(`primaryMacro:[${formatValue(trapData.primaryMacro.macro)}]`);\n        else if (trapData.primaryMacro && typeof trapData.primaryMacro === 'string') triggerSettings.push(`primaryMacro:[${formatValue(trapData.primaryMacro)}]`);\n\n        if (trapData.failureMacro) triggerSettings.push(`failureMacro:[${formatValue(trapData.failureMacro)}]`);\n        if (trapData.successMacro) triggerSettings.push(`successMacro:[${formatValue(trapData.successMacro)}]`);\n        \n        if (trapData.options && trapData.options.length > 0) {\n            const formattedOptions = trapData.options.map(opt => opt.macro || opt.name).join(';');\n            triggerSettings.push(`options:[${formattedOptions}]`);\n        }\n        \n        if (trapData.checks && trapData.checks.length > 0) {\n            const formattedChecks = trapData.checks.map(check => `${check.type}:${check.dc}`).join(';');\n            triggerSettings.push(`checks:[${formattedChecks}]`);\n        }\n        \n        if (trapData.position !== undefined) {\n            if (typeof trapData.position === 'object' && trapData.position.x !== undefined && trapData.position.y !== undefined) {\n                triggerSettings.push(`position:[${trapData.position.x},${trapData.position.y}]`);\n            } else {\n                triggerSettings.push(`position:[${trapData.position}]`);\n            }\n        }\n        \n        if (trapData.movementTrigger !== undefined) triggerSettings.push(`movementTrigger:[${trapData.movementTrigger ? 'on' : 'off'}]`);\n        if (trapData.autoTrigger !== undefined) triggerSettings.push(`autoTrigger:[${trapData.autoTrigger ? 'on' : 'off'}]`);\n\n        let detectionSettings = [];\n        if (trapData.passiveSpotDC !== undefined && trapData.passiveSpotDC !== null) detectionSettings.push(`passiveSpotDC:[${trapData.passiveSpotDC}]`);\n        if (trapData.passiveMaxRange !== undefined && trapData.passiveMaxRange !== null) detectionSettings.push(`passiveMaxRange:[${trapData.passiveMaxRange}]`);\n        if (trapData.passiveNoticePlayer) detectionSettings.push(`passiveNoticePlayer:[${formatValue(trapData.passiveNoticePlayer)}]`);\n        if (trapData.passiveNoticeGM) detectionSettings.push(`passiveNoticeGM:[${formatValue(trapData.passiveNoticeGM)}]`);\n        if (trapData.ppTokenBarFallback) detectionSettings.push(`ppTokenBarFallback:[${trapData.ppTokenBarFallback}]`);\n        if (trapData.enableLuckRoll !== undefined) detectionSettings.push(`enableLuckRoll:[${trapData.enableLuckRoll}]`);\n        if (trapData.luckRollDie) detectionSettings.push(`luckRollDie:[${trapData.luckRollDie}]`);\n        if (trapData.showDetectionAura !== undefined) detectionSettings.push(`showDetectionAura:[${trapData.showDetectionAura}]`);\n        if (trapData.passiveEnabled !== undefined) detectionSettings.push(`passiveEnabled:[${trapData.passiveEnabled ? 'on' : 'off'}]`);\n        if (trapData.detected !== undefined) detectionSettings.push(`detected:[${trapData.detected ? 'on' : 'off'}]`);\n\n        let result = '';\n        if (triggerSettings.length > 0) {\n            result += `{!traptrigger ${triggerSettings.join(' ')}}`;\n        }\n        if (detectionSettings.length > 0) {\n            if (result) result += ' ';\n            result += `{!trapdetection ${detectionSettings.join(' ')}}`;\n        }\n\n        TrapUtils.log(`[constructGmNotesFromTrapData] Generated notes: ${result}`, 'debug');\n        return result;\n    }\n};\n\nexport default PassiveDetection;","// src/trap-commands.js\n// Command parsing and API routing system for TrapSystem v2\n\nimport TrapUtils from './trap-utils.js';\nimport { Config } from './trap-core.js';\nimport { triggers } from './trap-triggers.js';\nimport { PassiveDetection } from './trap-detection.js';\n\nexport const Commands = {\n    /**\n     * Main command parser and router\n     * @param {object} msg - The Roll20 chat message object\n     */\n    handleChatMessage(msg) {\n        // Handle different message types\n        if (msg.type === \"advancedroll\") {\n            return this.handleAdvancedRoll(msg);\n        }\n        if (msg.type === \"rollresult\") {\n            return this.handleRollResult(msg);\n        }\n        if (msg.type !== \"api\") {\n            return; // Not an API command\n        }\n\n        // Parse command arguments with proper quote handling\n        const args = this.parseCommandArgs(msg.content);\n        const command = args[0];\n\n        if (command === \"!trapsystem\") {\n            this.handleTrapSystemCommand(msg, args);\n        }\n    },\n\n    /**\n     * Parse command arguments with proper quote handling\n     * @param {string} content - The raw command content\n     * @returns {Array} - Array of parsed arguments\n     */\n    parseCommandArgs(content) {\n        return (content.match(/[^\\s\"]+|\"([^\"]*)\"/g) || []).map(arg => \n            (arg.startsWith('\"') && arg.endsWith('\"')) ? arg.slice(1, -1) : arg\n        );\n    },\n\n    /**\n     * Handle the main !trapsystem command\n     * @param {object} msg - The Roll20 chat message object\n     * @param {Array} args - Parsed command arguments\n     */\n    handleTrapSystemCommand(msg, args) {\n        TrapUtils.log(`[API Handler] Received !trapsystem command. Action: ${args[1] || 'help'}. Full args: ${JSON.stringify(args)}`, 'debug');\n        \n        if (!args[1]) {\n            this.showHelpMenu(\"API\");\n            return;\n        }\n\n        const action = args[1];\n        const selectedToken = msg.selected ? getObj(\"graphic\", msg.selected[0]._id) : null;\n\n        // Commands that don't require a selected token\n        const noTokenCommands = [\n            \"enable\", \"disable\", \"toggle\", \"status\", \"help\", \"allowall\", \n            \"exportmacros\", \"resetstates\", \"resetmacros\", \"fullreset\", \n            \"allowmovement\", \"resetdetection\", \"interact\", \"hidedetection\", \n            \"showdetection\", \"passivemenu\", \"setpassive\"\n        ];\n\n        if (!selectedToken && !noTokenCommands.includes(action.toLowerCase())) {\n            TrapUtils.chat('‚ùå Error: No token selected for this action!');\n            TrapUtils.log(`[API Handler] Action '${action}' requires a selected token, but none was found.`, 'warn');\n            return;\n        }\n\n        // Route to appropriate handler\n        switch (action.toLowerCase()) {\n            // Trap Setup Commands\n            case \"setup\":\n                this.handleSetupTrap(selectedToken, args);\n                break;\n            case \"setupinteraction\":\n                this.handleSetupInteractionTrap(selectedToken, args);\n                break;\n\n            // Trap Control Commands\n            case \"toggle\":\n                this.handleToggleTrap(selectedToken, args);\n                break;\n            case \"status\":\n                this.handleTrapStatus(selectedToken, args);\n                break;\n            case \"trigger\":\n                this.handleManualTrigger(selectedToken);\n                break;\n            case \"showmenu\":\n                this.handleShowMenu(selectedToken);\n                break;\n\n            // Movement Commands\n            case \"allowmovement\":\n                this.handleAllowMovement(args, msg);\n                break;\n            case \"allowall\":\n                this.handleAllowAll();\n                break;\n\n            // System Control Commands\n            case \"enable\":\n                this.handleEnableTriggers();\n                break;\n            case \"disable\":\n                this.handleDisableTriggers();\n                break;\n\n            // Interaction Commands\n            case \"interact\":\n                this.handleInteract(args, msg);\n                break;\n            case \"allow\":\n                this.handleAllowAction(args);\n                break;\n            case \"fail\":\n                this.handleFailAction(args);\n                break;\n            case \"selectcharacter\":\n                this.handleSelectCharacter(args);\n                break;\n            case \"check\":\n                this.handleSkillCheck(args, msg);\n                break;\n            case \"customcheck\":\n                this.handleCustomCheck(args);\n                break;\n            case \"rollcheck\":\n                this.handleRollCheck(args, msg);\n                break;\n            case \"setdc\":\n                this.handleSetDC(args);\n                break;\n            case \"displaydc\":\n                this.handleDisplayDC(args);\n                break;\n\n            // Passive Detection Commands\n            case \"passivemenu\":\n                this.handlePassiveMenu(msg);\n                break;\n            case \"setpassive\":\n                this.handleSetPassive(args, msg);\n                break;\n            case \"resetdetection\":\n                this.handleResetDetection(selectedToken, msg);\n                break;\n            case \"hidedetection\":\n                this.handleHideDetection(args, msg);\n                break;\n            case \"showdetection\":\n                this.handleShowDetection(msg);\n                break;\n\n            // Advanced Commands\n            case \"marktriggered\":\n                this.handleMarkTriggered(msg);\n                break;\n            case \"manualtrigger\":\n                this.handleManualMacroTrigger(msg);\n                break;\n            case \"ignoretraps\":\n                this.handleIgnoreTraps(selectedToken);\n                break;\n            case \"rearm\":\n                this.handleRearmTrap(args);\n                break;\n            case \"resolvemismatch\":\n                this.handleResolveMismatch(args);\n                break;\n\n            // Export/Reset Commands\n            case \"exportmacros\":\n                this.handleExportMacros();\n                break;\n            case \"resetstates\":\n                this.handleResetStates();\n                break;\n            case \"resetmacros\":\n                this.handleResetMacros();\n                break;\n            case \"fullreset\":\n                this.handleFullReset();\n                break;\n\n            // Help Command\n            case \"help\":\n                this.showHelpMenu(\"TrapSystem\");\n                break;\n\n            default:\n                TrapUtils.chat(`‚ùå Unknown command: ${action}\\nUse !trapsystem help for command list`);\n        }\n    },\n\n    // =====================================================================\n    // COMMAND HANDLERS\n    // =====================================================================\n\n    /**\n     * Handle setup trap command\n     */\n    handleSetupTrap(selectedToken, args) {\n        TrapUtils.log(`[API Handler] Attempting to call setupTrap. Token ID: ${selectedToken ? selectedToken.id : 'null'}. Args for func: ${args.slice(2).join(', ')}`, 'debug');\n        try {\n            triggers.setupTrap(\n                selectedToken,\n                args[2], // uses\n                args[3], // mainMacro\n                args[4], // optional2\n                args[5], // optional3\n                args[6], // movement\n                args[7]  // autoTrigger\n            );\n        } catch (e) {\n            TrapUtils.log(`[API Handler] ERROR calling setupTrap: ${e.message} ${e.stack}`, 'error');\n            TrapUtils.chat('‚ùå An internal error occurred while trying to setup the standard trap.');\n        }\n    },\n\n    /**\n     * Handle setup interaction trap command\n     */\n    handleSetupInteractionTrap(selectedToken, args) {\n        TrapUtils.log(`[API Handler] Attempting to call setupInteractionTrap. Token ID: ${selectedToken ? selectedToken.id : 'null'}. Raw args for parsing: ${args.slice(2).join(', ')}`, 'debug');\n        try {\n            if (args.length < 8) {\n                TrapUtils.chat('‚ùå Error: Missing parameters for interaction trap setup.');\n                return;\n            }\n\n            const uses = args[2];\n            const primaryMacro = args[3];\n            const successMacro = args[4];\n            const failureMacro = args[5];\n\n            const autoTriggerEnabled = args[args.length - 1];\n            const movement = args[args.length - 2];\n            const movementTriggerEnabled = args[args.length - 3];\n            \n            // Parse skill checks from middle arguments\n            const checkArgs = args.slice(6, args.length - 3);\n            const checks = this.parseSkillChecks(checkArgs);\n\n            const check1Type = checks[0] ? checks[0].type : \"None\";\n            const check1DC = checks[0] ? checks[0].dc : \"10\";\n            const check2Type = checks[1] ? checks[1].type : \"None\";\n            const check2DC = checks[1] ? checks[1].dc : \"10\";\n\n            TrapUtils.log(`[API Handler] Parsed for setupInteractionTrap - Uses: ${uses}, PrimaryM: ${primaryMacro}, SuccessM: ${successMacro}, FailM: ${failureMacro}, C1Type: '${check1Type}', C1DC: ${check1DC}, C2Type: '${check2Type}', C2DC: ${check2DC}, MoveEnabled: ${movementTriggerEnabled}, AutoTrigger: ${autoTriggerEnabled}`, 'debug');\n\n            triggers.setupInteractionTrap(\n                selectedToken, uses,\n                primaryMacro, successMacro, failureMacro,\n                check1Type, check1DC,\n                check2Type, check2DC,\n                movementTriggerEnabled,\n                movement, autoTriggerEnabled\n            );\n        } catch (e) {\n            TrapUtils.log(`[API Handler] ERROR in setupInteractionTrap case: ${e.message} ${e.stack}`, 'error');\n            TrapUtils.chat('‚ùå An internal error occurred while trying to setup the interaction trap.');\n        }\n    },\n\n    /**\n     * Parse skill checks from command arguments\n     */\n    parseSkillChecks(checkArgs) {\n        const checks = [];\n        let currentSkillParts = [];\n        \n        for (const arg of checkArgs) {\n            if (!isNaN(parseInt(arg))) {\n                // It's a DC number\n                if (currentSkillParts.length > 0) {\n                    const skillName = currentSkillParts.join(' ');\n                    if (skillName.toLowerCase() !== 'none') {\n                        checks.push({ type: skillName, dc: arg });\n                    }\n                    currentSkillParts = [];\n                }\n            } else {\n                // It's part of skill name\n                currentSkillParts.push(arg);\n            }\n        }\n        return checks;\n    },\n\n    /**\n     * Handle toggle trap command\n     */\n    handleToggleTrap(selectedToken, args) {\n        const tid = args[2] || (selectedToken && selectedToken.id);\n        if (!tid) {\n            TrapUtils.chat('‚ùå No token selected or provided to toggle');\n            return;\n        }\n        const tk = getObj(\"graphic\", tid);\n        triggers.toggleTrap(tk);\n    },\n\n    /**\n     * Handle trap status command\n     */\n    handleTrapStatus(selectedToken, args) {\n        const tid = args[2] || (selectedToken && selectedToken.id);\n        if (!tid) {\n            TrapUtils.chat('‚ùå No token selected or provided for status');\n            return;\n        }\n        const tk = getObj(\"graphic\", tid);\n        triggers.getTrapStatus(tk);\n    },\n\n    /**\n     * Handle manual trigger command\n     */\n    handleManualTrigger(selectedToken) {\n        if (!selectedToken) {\n            TrapUtils.chat('‚ùå No token selected for trigger');\n            return;\n        }\n        triggers.manualTrigger(selectedToken);\n    },\n\n    /**\n     * Handle show menu command\n     */\n    handleShowMenu(selectedToken) {\n        if (!selectedToken) {\n            TrapUtils.chat('‚ùå No token selected for showmenu');\n            return;\n        }\n        // Get the interaction system from global TrapSystem\n        const interactionSystem = globalThis.TrapSystem?.menu;\n        if (interactionSystem && typeof interactionSystem.showInteractionMenu === 'function') {\n            interactionSystem.showInteractionMenu(selectedToken);\n        } else {\n            TrapUtils.chat('‚ùå Interaction system not available');\n        }\n    },\n\n    /**\n     * Handle allow movement command\n     */\n    handleAllowMovement(args, msg) {\n        const movementTokenId = args[2] && args[2].trim();\n        if (movementTokenId === 'selected') {\n            if (!msg.selected || !msg.selected[0]) {\n                TrapUtils.chat(\"‚ùå Error: No token selected!\");\n                return;\n            }\n            triggers.allowMovement(msg.selected[0]._id);\n        } else if (movementTokenId) {\n            triggers.allowMovement(movementTokenId);\n        } else {\n            TrapUtils.chat(\"‚ùå Error: No token specified!\");\n        }\n    },\n\n    /**\n     * Handle allow all movement command\n     */\n    handleAllowAll() {\n        triggers.allowAllMovement();\n    },\n\n    /**\n     * Handle enable triggers command\n     */\n    handleEnableTriggers() {\n        triggers.enableTriggers();\n    },\n\n    /**\n     * Handle disable triggers command\n     */\n    handleDisableTriggers() {\n        triggers.disableTriggers();\n    },\n\n    /**\n     * Handle interact command\n     */\n    handleInteract(args, msg) {\n        if (args.length < 4) {\n            TrapUtils.chat(\"‚ùå Missing parameters for interact\");\n            return;\n        }\n        const intToken = getObj(\"graphic\", args[2]);\n        if (!intToken) {\n            TrapUtils.chat(\"‚ùå Invalid trap token ID!\");\n            return;\n        }\n        // Get the interaction system from global TrapSystem\n        const interactionSystem = globalThis.TrapSystem?.menu;\n        if (interactionSystem && typeof interactionSystem.handleInteraction === 'function') {\n            interactionSystem.handleInteraction(intToken, args[3], msg.playerid, args[4]);\n        } else {\n            TrapUtils.chat('‚ùå Interaction system not available');\n        }\n    },\n\n    /**\n     * Handle allow action command\n     */\n    handleAllowAction(args) {\n        if (args.length < 4) {\n            TrapUtils.chat(\"‚ùå Missing parameters for allow command!\");\n            return;\n        }\n        const allowToken = getObj(\"graphic\", args[2]);\n        if (!allowToken) {\n            TrapUtils.chat(\"‚ùå Invalid trap token ID!\");\n            return;\n        }\n        // Get the interaction system from global TrapSystem\n        const interactionSystem = globalThis.TrapSystem?.menu;\n        if (interactionSystem && typeof interactionSystem.handleAllowAction === 'function') {\n            interactionSystem.handleAllowAction(allowToken, args[3], args[4]);\n        } else {\n            TrapUtils.chat('‚ùå Interaction system not available');\n        }\n    },\n\n    /**\n     * Handle fail action command\n     */\n    handleFailAction(args) {\n        if (args.length < 4) {\n            TrapUtils.chat(\"‚ùå Error: Missing parameters for fail command!\");\n            return;\n        }\n        const failToken = getObj(\"graphic\", args[2]);\n        if (!failToken) {\n            TrapUtils.chat(\"‚ùå Error: Invalid trap token ID!\");\n            return;\n        }\n        // Get the interaction system from global TrapSystem\n        const interactionSystem = globalThis.TrapSystem?.menu;\n        if (interactionSystem && typeof interactionSystem.handleFailAction === 'function') {\n            interactionSystem.handleFailAction(failToken, args[3], args[4]);\n        } else {\n            TrapUtils.chat('‚ùå Interaction system not available');\n        }\n    },\n\n    /**\n     * Handle passive menu command\n     */\n    handlePassiveMenu(msg) {\n        if (!msg.selected || msg.selected.length === 0) {\n            TrapUtils.chat(\"‚ùå Please select a trap token to configure its passive settings.\", msg.playerid);\n            return;\n        }\n        const trapForPassiveMenu = getObj(\"graphic\", msg.selected[0]._id);\n        PassiveDetection.showPassiveSetupMenu(trapForPassiveMenu, msg.playerid);\n    },\n\n    /**\n     * Handle set passive property command\n     */\n    handleSetPassive(args, msg) {\n        if (args.length < 4) {\n            TrapUtils.chat(\"‚ùå Insufficient arguments for setpassive. Expected: property trapId value(s)\", msg.playerid);\n            return;\n        }\n        PassiveDetection.handleSetPassiveProperty(args.slice(2), msg.playerid);\n    },\n\n    /**\n     * Handle reset detection command\n     */\n    handleResetDetection(selectedToken, msg) {\n        PassiveDetection.handleResetDetection(selectedToken, msg.playerid);\n    },\n\n    /**\n     * Handle hide detection command\n     */\n    handleHideDetection(args, msg) {\n        const duration = args[2] || 0;\n        PassiveDetection.hideAllAuras(duration, msg.playerid);\n    },\n\n    /**\n     * Handle show detection command\n     */\n    handleShowDetection(msg) {\n        PassiveDetection.showAllAuras(msg.playerid);\n    },\n\n    /**\n     * Handle mark triggered command\n     */\n    handleMarkTriggered(msg) {\n        const parts = msg.content.split(' ');\n        if (parts.length < 5) {\n            TrapUtils.chat('‚ùå marktriggered: Missing tokenId, trapId, or identifier!');\n            return;\n        }\n        const tokenId = parts[2];\n        const trapId = parts[3];\n        const macroIdentifier = parts.slice(4).join(' ');\n        triggers.markTriggered(tokenId, trapId, macroIdentifier);\n    },\n\n    /**\n     * Handle manual macro trigger command\n     */\n    handleManualMacroTrigger(msg) {\n        const parts = msg.content.split(' ');\n        if (parts.length < 4) {\n            TrapUtils.chat(\"‚ùå Missing parameters for manualtrigger!\");\n            return;\n        }\n        const trapId = parts[2];\n        const macroIdentifier = parts.slice(3).join(' ');\n        triggers.manualMacroTrigger(trapId, macroIdentifier);\n    },\n\n    /**\n     * Handle ignore traps command\n     */\n    handleIgnoreTraps(selectedToken) {\n        if (!selectedToken) {\n            TrapUtils.chat('‚ùå No token selected for ignoretraps');\n            return;\n        }\n        TrapUtils.toggleIgnoreTraps(selectedToken);\n    },\n\n    /**\n     * Handle rearm trap command\n     */\n    handleRearmTrap(args) {\n        const tid = args[2];\n        if (!tid) {\n            TrapUtils.chat('‚ùå No trap ID provided to rearm.');\n            return;\n        }\n        const tk = getObj(\"graphic\", tid);\n        if (!tk || !TrapUtils.isTrap(tk)) {\n            TrapUtils.chat('‚ùå Could not find a valid trap with that ID to rearm.');\n            return;\n        }\n        triggers.toggleTrap(tk);\n    },\n\n    /**\n     * Handle resolve mismatch command (for roll conflicts)\n     */\n    handleResolveMismatch(args) {\n        const entityId = args[2];\n        const trapTokenId = args[3];\n        const action = args[4];\n        const rollValue = args[5] ? parseInt(args[5], 10) : null;\n        const rollType = args[6] || 'normal';\n        const isAdvantageRoll = args[7] === '1';\n        \n        let pendingCheck = Config.state.pendingChecksByChar[entityId] || Config.state.pendingChecks[entityId];\n        const trapToken = getObj(\"graphic\", trapTokenId);\n        \n        if (!pendingCheck || !trapToken) {\n            TrapUtils.chat('‚ùå Could not resolve mismatch: missing pending check or trap token.');\n            return;\n        }\n\n        if (action === 'accept') {\n            const rollData = {\n                total: rollValue,\n                firstRoll: rollValue,\n                secondRoll: null,\n                isAdvantageRoll: isAdvantageRoll,\n                rollType: rollType,\n                characterid: pendingCheck.characterId,\n                playerid: pendingCheck.playerid,\n                rolledSkillName: pendingCheck.config.checks[0].type\n            };\n            TrapUtils.chat('‚úÖ GM accepted the roll. Processing result...');\n            \n            // Get the interaction system from global TrapSystem\n            const interactionSystem = globalThis.TrapSystem?.menu;\n            if (interactionSystem && typeof interactionSystem.handleRollResult === 'function') {\n                interactionSystem.handleRollResult(rollData, pendingCheck.playerid);\n            }\n        } else if (action === 'reject') {\n            let playerid = pendingCheck.playerid;\n            let checkIndex = pendingCheck.checkIndex || 0;\n            let advantageType = pendingCheck.advantage || 'normal';\n\n            // Get the interaction system from global TrapSystem\n            const interactionSystem = globalThis.TrapSystem?.menu;\n            if (interactionSystem && typeof interactionSystem.handleRollCheck === 'function') {\n                interactionSystem.handleRollCheck(trapToken, checkIndex, advantageType, playerid);\n            }\n        }\n    },\n\n    /**\n     * Handle export macros command\n     */\n    handleExportMacros() {\n        // Get the macro exporter from global TrapSystem\n        const macroExporter = globalThis.TrapSystem?.macroExporter;\n        if (macroExporter && typeof macroExporter.exportMacros === 'function') {\n            macroExporter.exportMacros();\n        } else {\n            TrapUtils.chat('‚ùå Macro export system not available');\n        }\n    },\n\n    /**\n     * Handle reset states command\n     */\n    handleResetStates() {\n        // Get the macro exporter from global TrapSystem\n        const macroExporter = globalThis.TrapSystem?.macroExporter;\n        if (macroExporter && typeof macroExporter.resetTokenStates === 'function') {\n            if (macroExporter.resetTokenStates()) {\n                sendChat(\"TrapSystem\", \"/w gm ‚úÖ States reset to exported versions.\");\n            } else {\n                sendChat(\"TrapSystem\", \"/w gm ‚ÑπÔ∏è No states needed resetting or were available to reset.\");\n            }\n            Config.state.macroExportRecordOrdering = false;\n        } else {\n            TrapUtils.chat('‚ùå Macro export system not available');\n        }\n    },\n\n    /**\n     * Handle reset macros command\n     */\n    handleResetMacros() {\n        // Get the macro exporter from global TrapSystem\n        const macroExporter = globalThis.TrapSystem?.macroExporter;\n        if (macroExporter && typeof macroExporter.resetMacros === 'function') {\n            if (macroExporter.resetMacros()) {\n                sendChat(\"TrapSystem\", \"/w gm ‚úÖ Macros reset to exported actions.\");\n            } else {\n                sendChat(\"TrapSystem\", \"/w gm ‚ÑπÔ∏è No macros needed resetting or were available to reset.\");\n            }\n        } else {\n            TrapUtils.chat('‚ùå Macro export system not available');\n        }\n    },\n\n    /**\n     * Handle full reset command\n     */\n    handleFullReset() {\n        // Get the macro exporter from global TrapSystem\n        const macroExporter = globalThis.TrapSystem?.macroExporter;\n        if (macroExporter && typeof macroExporter.fullReset === 'function') {\n            macroExporter.fullReset();\n        } else {\n            TrapUtils.chat('‚ùå Macro export system not available');\n        }\n    },\n\n    /**\n     * Handle advanced roll results from character sheets\n     */\n    handleAdvancedRoll(msg) {\n        try {\n            TrapUtils.log(`Received advancedroll message: ${JSON.stringify(msg)}`, 'debug');\n            let rollType = null;\n            if (msg.content.includes(\"dnd-2024__header--Advantage\")) rollType = \"advantage\";\n            if (msg.content.includes(\"dnd-2024__header--Disadvantage\")) rollType = \"disadvantage\";\n            if (msg.content.includes(\"dnd-2024__header--Normal\")) rollType = \"normal\";\n\n            const re = /die__total[^>]*(?:data-result=\"(\\d+)\")?[^>]*>\\s*(\\d+)\\s*</g;\n            let dieMatches = msg.content.match(re);\n            let dieResults = [];\n            \n            if (dieMatches) {\n                dieMatches.forEach(m => {\n                    let dr = m.match(/data-result=\"(\\d+)\"/);\n                    let tr = m.match(/>\\s*(\\d+)\\s*</);\n                    if (dr) dieResults.push(parseInt(dr[1], 10));\n                    else if (tr) dieResults.push(parseInt(tr[1], 10));\n                });\n            }\n\n            if (dieResults.length > 0) {\n                let pending = null;\n                if (msg.characterId) {\n                    pending = Config.state.pendingChecksByChar[msg.characterId];\n                    if (pending) {\n                        TrapUtils.log(`Found pending check by character ID: ${msg.characterId}`, 'debug');\n                    }\n                }\n                \n                if (!pending) {\n                    pending = Config.state.pendingChecks[msg.playerid];\n                    if (pending) {\n                        TrapUtils.log(`Found pending check by player ID: ${msg.playerid}`, 'debug');\n                    }\n                }\n\n                if (!pending) {\n                    TrapUtils.log(`No pending check found for player:${msg.playerid} or character:${msg.characterId} from advancedroll`, 'debug');\n                    return;\n                }\n\n                let total;\n                const pref = msg.content.match(/die__total--preferred[^>]*data-result=\"(\\d+)\"/);\n                if (pref) {\n                    total = parseInt(pref[1], 10);\n                } else if (dieResults.length >= 2 && rollType) {\n                    if (rollType === \"advantage\") total = Math.max(...dieResults);\n                    else if (rollType === \"disadvantage\") total = Math.min(...dieResults);\n                    else total = dieResults[0];\n                } else {\n                    total = dieResults[0];\n                }\n\n                let rolledSkillName = null;\n                const titleMatch = msg.content.match(/<div class=\\\"header__title\\\">([^<]+)(?: Check| Save)?<\\/div>/);\n                if (titleMatch && titleMatch[1]) {\n                    rolledSkillName = titleMatch[1].trim();\n                    TrapUtils.log(`Extracted rolled skill/ability from advancedroll: ${rolledSkillName}`, 'debug');\n                }\n\n                const rollData = {\n                    total,\n                    firstRoll: dieResults[0],\n                    secondRoll: dieResults[1],\n                    isAdvantageRoll: (dieResults.length >= 2),\n                    rollType,\n                    characterid: msg.characterId,\n                    playerid: msg.playerid,\n                    rolledSkillName\n                };\n                \n                TrapUtils.log(`Processed advancedroll data: ${JSON.stringify(rollData)}`, 'debug');\n                \n                // Get the interaction system from global TrapSystem\n                const interactionSystem = globalThis.TrapSystem?.menu;\n                if (interactionSystem && typeof interactionSystem.handleRollResult === 'function') {\n                    interactionSystem.handleRollResult(rollData, msg.playerid);\n                }\n            }\n        } catch (e) {\n            TrapUtils.log(`Error in advancedroll parse: ${e.message}`, 'error');\n        }\n    },\n\n    /**\n     * Handle simple roll results\n     */\n    handleRollResult(msg) {\n        try {\n            TrapUtils.log(`Received rollresult message: ${JSON.stringify(msg)}`, 'debug');\n            const r = JSON.parse(msg.content);\n            let rollTotal = null;\n\n            if (r && typeof r.total !== 'undefined') {\n                rollTotal = r.total;\n            } else if (r && r.rolls && r.rolls.length > 0 && r.rolls[0].results && r.rolls[0].results.length > 0 && typeof r.rolls[0].results[0].v !== 'undefined') {\n                rollTotal = r.rolls[0].results[0].v;\n            }\n\n            if (rollTotal !== null) {\n                const rollData = {\n                    total: rollTotal,\n                    playerid: msg.playerid\n                };\n\n                let charIdFromRoll = r.characterid || (r.rolls && r.rolls[0] && r.rolls[0].characterid);\n\n                if (!charIdFromRoll && !TrapUtils.playerIsGM(msg.playerid)) {\n                    const allCharacters = findObjs({ _type: \"character\" });\n                    const controlledPlayerCharacters = allCharacters.filter(char => {\n                        const controlledByArray = (char.get(\"controlledby\") || \"\").split(\",\");\n                        return controlledByArray.includes(msg.playerid) && controlledByArray.some(pId => pId && pId.trim() !== \"\" && !TrapUtils.playerIsGM(pId));\n                    });\n\n                    if (controlledPlayerCharacters.length === 1) {\n                        const uniqueChar = controlledPlayerCharacters[0];\n                        rollData.characterid = uniqueChar.id;\n                        TrapUtils.log(`Flat roll by player ${msg.playerid} auto-associated with single controlled character ${uniqueChar.get('name')} (ID: ${uniqueChar.id}) for rollData.`, 'debug');\n                    }\n                } else if (charIdFromRoll) {\n                    rollData.characterid = charIdFromRoll;\n                }\n\n                TrapUtils.log(`Processed rollresult. Sending to handleRollResult: ${JSON.stringify(rollData)}`, 'debug');\n                \n                // Get the interaction system from global TrapSystem\n                const interactionSystem = globalThis.TrapSystem?.menu;\n                if (interactionSystem && typeof interactionSystem.handleRollResult === 'function') {\n                    interactionSystem.handleRollResult(rollData, msg.playerid);\n                }\n            } else {\n                TrapUtils.log(`Could not parse total from rollresult: ${msg.content}`, 'warning');\n            }\n        } catch (e) {\n            TrapUtils.log(`Error in rollresult parse: ${e.message}`, 'error');\n        }\n    },\n\n    /**\n     * Show the help menu\n     */\n    showHelpMenu(target = 'API') {\n        const skillListForQuery = Object.keys(Config.SKILL_TYPES).join('|');\n        const helpMenu = [\n            '&{template:default}',\n            '{{name=üéØ Trap System Help}}',\n            '{{About=The Trap System allows you to create and manage traps, skill checks, and interactions. Traps can be triggered by movement or manually.}}',\n            '{{Setup Traps=',\n            '[üéØ Setup Standard Trap](!trapsystem setup ?{Uses|1} ?{Main Macro - #MacroName, &quot;!cmd&quot;, &quot;Chat Text&quot;, &quot;^ÔΩõtemplateÔΩù&quot; - Note: remember to use quotes} ?{Optional Macro 2 - #MacroName, &quot;!cmd&quot;, &quot;Chat Text&quot;, &quot;^ÔΩõtemplateÔΩù&quot; - Note: remember to use quotes|None} ?{Optional Macro 3 - #MacroName, &quot;!Command&quot;, &quot;Chat Text&quot; - Note: remember to use quotes|None} ?{Movement - Note: If you select --Grid-- please adjust via the GM Notes|Intersection|Center|Grid} ?{Auto Trigger|false|true})',\n            `[üîç Setup Interaction Trap](!trapsystem setupinteraction ?{Uses|1} ?{Primary Macro - #MacroName, &quot;!cmd&quot;, &quot;Chat Text&quot;, &quot;^ÔΩõtemplateÔΩù&quot; - Note: remember to use quotes|None} ?{Success Macro - #MacroName, &quot;!cmd&quot;, &quot;Chat Text&quot;, &quot;^ÔΩõtemplateÔΩù&quot; - Note: remember to use quotes|None} ?{Failure Macro - #MacroName, &quot;!cmd&quot;, &quot;Chat Text&quot;, &quot;^ÔΩõtemplateÔΩù&quot; - Note: remember to use quotes|None} ?{First Check Type|${skillListForQuery}} ?{First Check DC|10} ?{Second Check Type|None|${skillListForQuery}} ?{Second Check DC|10} ?{Movement Trigger Enabled|true|false} ?{Movement - Note: If you select --Grid-- please adjust via the GM Notes|Intersection|Center|Grid} ?{Auto Trigger|false|true})`,\n            '[üõ†Ô∏è Setup Detection](!trapsystem passivemenu)}}',\n            '{{Trap Control=',\n            '[üîÑ Toggle](!trapsystem toggle) - Toggle selected trap on/off\\n',\n            '[‚ö° Trigger](!trapsystem trigger) - Manually trigger selected trap\\n',\n            '[üéØ Show Menu](!trapsystem showmenu) - Show the interaction menu\\n',\n            '[üö∂‚Äç‚ôÇÔ∏è Allow Movement](!trapsystem allowmovement selected) - Allow single token movement\\n',\n            '[üìä Status](!trapsystem status) - Show trap status}}',\n            '{{System Control=',\n            '[‚úÖ Enable](!trapsystem enable) - Enable triggers (does not unlock tokens)\\n',\n            '[‚ùå Disable](!trapsystem disable) - Disable triggers (does not unlock tokens)\\n',\n            '[üë• Allow All](!trapsystem allowall) - Allow movement for all locked tokens\\n',\n            '[üßπ Reset Detection](!trapsystem resetdetection) - Clears all passively noticed traps for all\\n',\n            '[üôà Hide Detections](!trapsystem hidedetection ?{Minutes - 0 for indefinitely|0}) - Hide all detection auras (0 = indefinitely)\\n',\n            '[üëÅÔ∏è Show Detections](!trapsystem showdetection) - Show all detection auras\\n',\n            '[üõ°Ô∏è Toggle Immunity](!trapsystem ignoretraps) - Toggle token to ignore traps}}',\n            '{{Tips=',\n            '‚Ä¢ <b style=\"color:#f04747;\">Macro Types:</b> Actions can be a Roll20 Macro <span style=\"color:#ffcb05\">#MacroName</span>, an API command <span style=\"color:#ffcb05\">\"!command\"</span>, or plain chat <span style=\"color:#ffcb05\">\"text message\"</span>.<br>',\n            '‚Ä¢ <b style=\"color:#f04747;\">Workarounds:</b> To use API commands or templates in setup, you MUST disguise them. Use <span style=\"color:#ffcb05\">$</span> for commands e.g., <span style=\"color:#ffcb05\">\"$deal-damage\"</span> and <span style=\"color:#ffcb05\">^</span> for templates e.g., <span style=\"color:#ffcb05\">\"^ÔΩõtemplate:defaultÔΩù...\"</span>.<br>',\n            '‚Ä¢ <b style=\"color:#f04747;\">Use Quotes!:</b> When using setup commands, any Text, Template or Command with spaces MUST be wrapped in <span style=\"color:#ffcb05\">\"double quotes\"</span>.<br>',\n            '‚Ä¢ <b style=\"color:#f04747;\">Placeholders:</b> Use <span style=\"color:#ffcb05\">&lt;&trap&gt;</span> for the trap token and <span style=\"color:#ffcb05\">&lt;&trapped&gt;</span> for the token that triggered it.<br>',\n            '‚Ä¢ <b style=\"color:#f04747;\">Token Selection:</b> Most commands require a trap token to be selected first.<br>',\n            '‚Ä¢ <b style=\"color:#f04747;\">Interaction Traps:</b> You can disable movement triggers on interaction traps to make them manually activated only.<br>',\n            '‚Ä¢ <b style=\"color:#f04747;\">Skill Checks:</b> Interaction traps accept advantage/disadvantage.}}'\n        ].join(' ');\n        sendChat(target, `/w GM ${helpMenu}`);\n    },\n\n    /**\n     * Handle select character command\n     */\n    handleSelectCharacter(args) {\n        if (args.length < 5) {\n            TrapUtils.chat(\"‚ùå Missing parameters for selectcharacter!\");\n            return;\n        }\n        \n        const trapToken = getObj(\"graphic\", args[2]);\n        const character = getObj(\"character\", args[3]);\n        const playerid = args[4];\n        const triggeredTokenId = args[5] || null;\n\n        if (!trapToken || !character) {\n            TrapUtils.chat(\"‚ùå Invalid token or character ID!\");\n            return;\n        }\n        \n        if (!Config.state.pendingChecks[playerid]) {\n            Config.state.pendingChecks[playerid] = {};\n        }\n        \n        Config.state.pendingChecks[playerid].characterId = character.id;\n        Config.state.pendingChecks[playerid].characterName = character.get(\"name\");\n        Config.state.pendingChecks[playerid].triggeredTokenId = triggeredTokenId;\n        \n        if (Config.state.pendingChecksByChar && character.id) {\n            Config.state.pendingChecksByChar[character.id] = {\n                ...Config.state.pendingChecks[playerid],\n                token: trapToken\n            };\n        }\n\n        TrapUtils.log(`Stored character info - ID:${character.id}, Name:${character.get(\"name\")}, Victim:${triggeredTokenId}`, 'debug');\n        \n        // Get the interaction system from global TrapSystem\n        const interactionSystem = globalThis.TrapSystem?.menu;\n        if (interactionSystem && typeof interactionSystem.showGMResponseMenu === 'function') {\n            interactionSystem.showGMResponseMenu(trapToken, playerid, triggeredTokenId);\n        } else {\n            TrapUtils.chat('‚ùå Interaction system not available');\n        }\n    },\n\n    /**\n     * Handle skill check command\n     */\n    handleSkillCheck(args, msg) {\n        if (args.length < 5) {\n            TrapUtils.chat(\"‚ùå Missing parameters for check command!\");\n            return;\n        }\n        \n        const cToken = getObj(\"graphic\", args[2]);\n        if (!cToken) {\n            TrapUtils.chat(\"‚ùå Invalid trap token ID!\");\n            return;\n        }\n        \n        let playerid = args[4];\n        if (playerid === 'null' || !playerid) {\n            playerid = msg.playerid;\n            TrapUtils.log(`[FIX] 'check' command playerid was invalid, using msg.playerid: ${playerid}`, 'debug');\n        }\n        \n        const triggeredTokenId = args.length > 5 ? args[5] : null;\n        \n        // Get the interaction system from global TrapSystem\n        const interactionSystem = globalThis.TrapSystem?.menu;\n        if (interactionSystem && typeof interactionSystem.handleSkillCheck === 'function') {\n            interactionSystem.handleSkillCheck(cToken, parseInt(args[3], 10), playerid, false, false, 'gm', triggeredTokenId);\n        } else {\n            TrapUtils.chat('‚ùå Interaction system not available');\n        }\n    },\n\n    /**\n     * Handle custom check command\n     */\n    handleCustomCheck(args) {\n        if (args.length < 7) {\n            TrapUtils.chat(\"‚ùå Missing parameters for customcheck command! Requires at least skill and DC.\");\n            return;\n        }\n        \n        const cToken = getObj(\"graphic\", args[2]);\n        if (!cToken) {\n            TrapUtils.chat(\"‚ùå Invalid trap token ID for customcheck!\");\n            return;\n        }\n        \n        const playerid = args[3];\n        const triggeredTokenId = args[4] !== 'null' ? args[4] : null;\n        const dc = args[args.length - 1];\n        const skillType = args.slice(5, args.length - 1).join(' ');\n\n        // Get the interaction system from global TrapSystem\n        const interactionSystem = globalThis.TrapSystem?.menu;\n        if (interactionSystem && typeof interactionSystem.handleCustomCheck === 'function') {\n            interactionSystem.handleCustomCheck(cToken, playerid, triggeredTokenId, skillType, dc);\n        } else {\n            TrapUtils.chat('‚ùå Interaction system not available');\n        }\n    },\n\n    /**\n     * Handle roll check command\n     */\n    handleRollCheck(args, msg) {\n        if (args.length < 6) {\n            TrapUtils.chat(\"‚ùå Missing parameters for rollcheck!\");\n            return;\n        }\n        \n        const rToken = getObj(\"graphic\", args[2]);\n        if (!rToken) {\n            TrapUtils.chat(\"‚ùå Invalid trap token ID!\");\n            return;\n        }\n        \n        const checkIndex = args[3];\n        const advantage = args[4];\n        let playerid = args[5];\n        const triggeredTokenId = args.length > 6 ? args[6] : null;\n\n        if (playerid === 'null' || !playerid) {\n            playerid = msg.playerid;\n            TrapUtils.log(`[FIX] rollcheck playerid was invalid, using msg.playerid: ${playerid}`, 'debug');\n        }\n        \n        // Get the interaction system from global TrapSystem\n        const interactionSystem = globalThis.TrapSystem?.menu;\n        if (interactionSystem && typeof interactionSystem.handleRollCheck === 'function') {\n            interactionSystem.handleRollCheck(rToken, checkIndex, advantage, playerid, 0, triggeredTokenId);\n        } else {\n            TrapUtils.chat('‚ùå Interaction system not available');\n        }\n    },\n\n    /**\n     * Handle set DC command\n     */\n    handleSetDC(args) {\n        if (args.length < 5) {\n            TrapUtils.chat(\"‚ùå Missing parameters for setdc command!\");\n            return;\n        }\n        \n        const dToken = getObj(\"graphic\", args[2]);\n        if (!dToken) {\n            TrapUtils.chat(\"‚ùå Invalid trap token ID!\");\n            return;\n        }\n        \n        // Get the interaction system from global TrapSystem\n        const interactionSystem = globalThis.TrapSystem?.menu;\n        if (interactionSystem && typeof interactionSystem.handleSetDC === 'function') {\n            interactionSystem.handleSetDC(dToken, args[3], args[4], args[5], args[6] || null);\n        } else {\n            TrapUtils.chat('‚ùå Interaction system not available');\n        }\n    },\n\n    /**\n     * Handle display DC command\n     */\n    handleDisplayDC(args) {\n        if (args.length < 5) {\n            TrapUtils.chat(\"‚ùå Missing parameters for displaydc!\");\n            return;\n        }\n        \n        const dToken = getObj(\"graphic\", args[2]);\n        if (!dToken) {\n            TrapUtils.chat(\"‚ùå Invalid trap token ID for displaydc!\");\n            return;\n        }\n        \n        // Get the interaction system from global TrapSystem\n        const interactionSystem = globalThis.TrapSystem?.menu;\n        if (interactionSystem && typeof interactionSystem.handleDisplayDC === 'function') {\n            interactionSystem.handleDisplayDC(dToken, args[3], args[4]);\n        } else {\n            TrapUtils.chat('‚ùå Interaction system not available');\n        }\n    },\n};\n\nexport default Commands;","// src/trap-interaction.js\n// Interaction logic (menus, skill checks) for trap system\n\nimport TrapUtils from './trap-utils.js';\nimport { Config, State } from './trap-core.js';\n\n// Perform a skill check against a trap\nfunction performSkillCheck(characterToken, trapToken, skillType, rollResult = null) {\n  if (!characterToken || !trapToken) {\n    TrapUtils.log('Invalid tokens for skill check', 'error');\n    return { success: false, message: 'Invalid parameters' };\n  }\n  \n  const legacyUtils = globalThis.TrapSystem && globalThis.TrapSystem.utils;\n  if (!legacyUtils || typeof legacyUtils.parseTrapNotes !== 'function') {\n    return { success: false, message: 'Legacy utilities not available' };\n  }\n  \n  const trapData = legacyUtils.parseTrapNotes(trapToken.get('gmnotes'), trapToken);\n  if (!trapData) {\n    return { success: false, message: 'Invalid trap configuration' };\n  }\n  \n  // Get the appropriate DC for this skill type\n  let dc = 15; // default\n  switch (skillType.toLowerCase()) {\n    case 'perception':\n      dc = trapData.passivePerception || trapData.dc || 15;\n      break;\n    case 'investigation':\n      dc = trapData.investigationDC || trapData.dc || 15;\n      break;\n    case 'sleight of hand':\n    case 'thieves tools':\n      dc = trapData.disarmDC || trapData.dc || 15;\n      break;\n    default:\n      dc = trapData.dc || 15;\n  }\n  \n  // If no roll result provided, we're just setting up the check\n  if (rollResult === null) {\n    return {\n      success: true,\n      dc: dc,\n      skillType: skillType,\n      message: `${skillType} check required (DC ${dc})`\n    };\n  }\n  \n  const success = rollResult >= dc;\n  const margin = rollResult - dc;\n  \n  return {\n    success: success,\n    rollResult: rollResult,\n    dc: dc,\n    margin: margin,\n    skillType: skillType,\n    message: success \n      ? `${skillType} check succeeded! (${rollResult} vs DC ${dc}, margin: +${margin})`\n      : `${skillType} check failed. (${rollResult} vs DC ${dc}, margin: ${margin})`\n  };\n}\n\n// Handle trap detection attempt\nfunction handleDetectionAttempt(characterToken, trapToken, rollResult = null) {\n  const result = performSkillCheck(characterToken, trapToken, 'Perception', rollResult);\n  \n  if (result.success && rollResult !== null) {\n    // Character successfully detected the trap\n    const legacyUtils = globalThis.TrapSystem && globalThis.TrapSystem.utils;\n    if (legacyUtils && typeof legacyUtils.updateTrapAura === 'function') {\n      legacyUtils.updateTrapAura(trapToken, { isDetected: true });\n    }\n    \n    TrapUtils.log(`${characterToken.get('name')} detected a trap!`, 'success');\n    return { ...result, detected: true };\n  }\n  \n  return { ...result, detected: false };\n}\n\n// Handle trap disarm attempt\nfunction handleDisarmAttempt(characterToken, trapToken, rollResult = null) {\n  const result = performSkillCheck(characterToken, trapToken, 'Sleight of Hand', rollResult);\n  \n  if (result.success && rollResult !== null) {\n    // Character successfully disarmed the trap\n    const legacyUtils = globalThis.TrapSystem && globalThis.TrapSystem.utils;\n    if (legacyUtils && typeof legacyUtils.toggleTrap === 'function') {\n      legacyUtils.toggleTrap(trapToken); // Disarm the trap\n    }\n    \n    TrapUtils.log(`${characterToken.get('name')} disarmed the trap!`, 'success');\n    return { ...result, disarmed: true };\n  } else if (rollResult !== null && result.margin < -5) {\n    // Critical failure - trigger the trap\n    TrapUtils.log(`${characterToken.get('name')} triggered the trap while trying to disarm it!`, 'warning');\n    \n    const legacyUtils = globalThis.TrapSystem && globalThis.TrapSystem.utils;\n    if (legacyUtils && typeof legacyUtils.triggerTrap === 'function') {\n      legacyUtils.triggerTrap(trapToken, characterToken);\n    }\n    \n    return { ...result, triggered: true };\n  }\n  \n  return { ...result, disarmed: false, triggered: false };\n}\n\n// Get nearby characters for interaction\nfunction getNearbyCharacters(trapToken, maxDistance = 30) {\n  if (!trapToken) return [];\n  \n  const pageId = trapToken.get('_pageid');\n  const allTokens = findObjs({ _type: 'graphic', _pageid: pageId });\n  \n  return allTokens.filter(token => {\n    // Filter for character tokens (have represents field)\n    if (!token.get('represents')) return false;\n    \n    // Check distance\n    const distance = TrapUtils.geometry.calculateTokenDistance(trapToken, token);\n    return distance.mapUnitDistance <= maxDistance;\n  });\n}\n\n// Build and send interaction menu\nfunction showInteractionMenu(trapToken, triggeredTokenId = null) {\n  if (!trapToken) return;\n  \n  try {\n    const tokenImgUrl = TrapUtils.getTokenImageURL(trapToken);\n    const tokenImage = tokenImgUrl === 'üë§' \n      ? 'üë§' \n      : `<img src=\"${tokenImgUrl}\" width=\"100\" height=\"100\" style=\"display: block; margin: 5px auto;\">`;\n    const tokenName = trapToken.get('name') || 'Unknown Object';\n    const trapData = TrapUtils.parseTrapNotes(trapToken.get('gmnotes'));\n\n    if (!trapData) {\n      TrapUtils.log('Invalid trap configuration', 'error');\n      return;\n    }\n\n    const menu = [\n      '&{template:default}',\n      `{{name=${tokenName}}}`,\n      `{{Description=${tokenImage}}}`,\n      `{{State=üéØ ${trapData.isArmed ? 'ARMED' : 'DISARMED'} (${trapData.currentUses}/${trapData.maxUses} uses)}}`\n    ];\n\n    // Action buttons section\n    if (trapData.isArmed) {\n      const triggerCmd = `!trapsystem interact ${trapToken.id} trigger ${triggeredTokenId || ''}`.trim();\n      const explainCmd = `!trapsystem interact ${trapToken.id} explain ${triggeredTokenId || ''}`.trim();\n      \n      let actionButtons = [\n        `[üéØ Trigger Action](${triggerCmd})`,\n        `[üí≠ Explain Action](${explainCmd})`\n      ];\n\n      // Add \"Allow Movement\" button if token is locked by this trap\n      if (triggeredTokenId) {\n        // Check if token is locked (this will need to reference global state when available)\n        const lockRecord = globalThis.TrapSystem?.state?.lockedTokens?.[triggeredTokenId];\n        if (lockRecord && lockRecord.trapToken === trapToken.id && lockRecord.locked) {\n          actionButtons.push(`[‚è≠Ô∏è Allow Move](!trapsystem allowmovement ${triggeredTokenId})`);\n        }\n      }\n      menu.push(`{{Actions=${actionButtons.join(' | ')}}}`);\n    }\n\n    // Show trap info if checks exist\n    if (trapData.checks && trapData.checks.length > 0) {\n      const checkInfo = trapData.checks.map(check => \n        `${Config.SKILL_TYPES[check.type] || 'üé≤'} ${check.type} (DC ${check.dc})`\n      ).join('<br>');\n      menu.push(`{{Trap Info=Skill Check:<br>${checkInfo}}}`);\n    }\n\n    menu.push(`{{Management=[üìä Status](!trapsystem status ${trapToken.id}) | [üîÑ Toggle](!trapsystem toggle ${trapToken.id})}}`);\n    sendChat('TrapSystem', `/w gm ${menu.join(' ')}`);\n  } catch (err) {\n    TrapUtils.log(`Error showing interaction menu: ${err.message}`, 'error');\n  }\n}\n\n// Process interaction command\nfunction processInteractionCommand(command, args = []) {\n  if (!TrapUtils.validateCommandArgs(args, 1, command)) return;\n  \n  const tokenId = args[0];\n  const token = getObj('graphic', tokenId);\n  \n  if (!token) {\n    TrapUtils.log(`Token ${tokenId} not found`, 'error');\n    return;\n  }\n  \n  switch (command.toLowerCase()) {\n    case 'perception-check':\n    case 'detect':\n      if (args.length >= 2) {\n        const trapId = args[1];\n        const trapToken = getObj('graphic', trapId);\n        if (trapToken) {\n          const result = handleDetectionAttempt(token, trapToken);\n          TrapUtils.log(result.message, result.success ? 'success' : 'info');\n        }\n      }\n      break;\n      \n    case 'disable-check':\n    case 'disarm':\n      if (args.length >= 2) {\n        const trapId = args[1];\n        const trapToken = getObj('graphic', trapId);\n        if (trapToken) {\n          const result = handleDisarmAttempt(token, trapToken);\n          TrapUtils.log(result.message, result.success ? 'success' : 'warning');\n        }\n      }\n      break;\n      \n    case 'interact':\n      if (TrapUtils.isTrap(token)) {\n        showInteractionMenu(token);\n      } else {\n        TrapUtils.log('Selected token is not a trap', 'error');\n      }\n      break;\n      \n    default:\n      TrapUtils.log(`Unknown interaction command: ${command}`, 'error');\n  }\n}\n\n// Handle main interaction commands (trigger, explain, fail)\nfunction handleInteraction(token, action, playerid, triggeredTokenId = null) {\n  TrapUtils.log(`handleInteraction: ${token.id}, action:${action}, playerid:${playerid}, victim:${triggeredTokenId}`, 'debug');\n  const config = TrapUtils.parseTrapNotes(token.get('gmnotes'), token);\n  if (!config || config.type !== 'interaction') {\n    TrapUtils.log('Invalid config or not interaction type', 'debug');\n    return;\n  }\n\n  const trappedToken = getObj('graphic', triggeredTokenId);\n  const tagToIdMap = TrapUtils.buildTagToIdMap(token, trappedToken, null);\n\n  switch (action) {\n    case 'trigger':\n      if (config.primaryMacro && config.primaryMacro.macro) {\n        if (trappedToken) {\n          // Mark triggered for later use depletion\n          markTriggered(trappedToken.id, token.id, 'primary');\n        } else {\n          // Manual trigger - just execute macro\n          TrapUtils.executeMacro(config.primaryMacro.macro, tagToIdMap);\n        }\n      } else {\n        TrapUtils.chat('‚ö†Ô∏è No Primary Macro defined. Proceeding to skill check menu.');\n      }\n      \n      // Check if this is a simple fire-and-forget trap\n      if (config.primaryMacro && !config.successMacro && !config.failureMacro) {\n        TrapUtils.log(`Primary-only interaction trap triggered. Resolving immediately.`, 'info');\n        if (trappedToken) {\n          allowMovement(triggeredTokenId, true);\n          TrapUtils.chat(`‚úÖ Trap '${token.get('name')}' triggered and resolved.`);\n        } else {\n          // Manual trigger - deplete use directly\n          const newUses = Math.max(0, config.currentUses - 1);\n          TrapUtils.updateTrapUses(token, newUses, config.maxUses, newUses > 0);\n          if (newUses <= 0) {\n            TrapUtils.chat('üí• Trap depleted.');\n          }\n        }\n        return;\n      }\n      \n      if (trappedToken) {\n        showGMResponseMenu(token, playerid, triggeredTokenId);\n      } else {\n        showCharacterSelectionMenu(token, playerid, triggeredTokenId);\n      }\n      break;\n\n    case 'fail':\n      TrapUtils.log(`Executing failure macro: ${config.failureMacro}`, 'debug');\n      if (config.failureMacro) {\n        TrapUtils.executeMacro(config.failureMacro, tagToIdMap);\n      }\n      break;\n\n    case 'explain':\n      // Smart path - try to auto-detect character\n      if (trappedToken) {\n        const charId = trappedToken.get('represents');\n        if (charId) {\n          const success = prepareSkillCheckState(token, playerid, triggeredTokenId, charId);\n          if (success) {\n            showGMResponseMenu(token, playerid, triggeredTokenId);\n            return;\n          }\n        }\n      }\n      // Fallback to manual character selection\n      showCharacterSelectionMenu(token, playerid, triggeredTokenId);\n      break;\n  }\n}\n\n// Prepare skill check state for a character\nfunction prepareSkillCheckState(trapToken, gmPlayerId, triggeredTokenId, characterId) {\n  if (!trapToken || !gmPlayerId || !triggeredTokenId || !characterId) {\n    TrapUtils.log('prepareSkillCheckState: missing arguments', 'error');\n    return false;\n  }\n\n  const char = getObj('character', characterId);\n  if (!char) {\n    TrapUtils.log(`Character ${characterId} not found`, 'error');\n    return false;\n  }\n\n  if (!State.pendingChecks[gmPlayerId]) {\n    State.pendingChecks[gmPlayerId] = {};\n  }\n  \n  State.pendingChecks[gmPlayerId].token = trapToken;\n  State.pendingChecks[gmPlayerId].playerid = gmPlayerId;\n  State.pendingChecks[gmPlayerId].characterId = characterId;\n  State.pendingChecks[gmPlayerId].characterName = char.get('name');\n  State.pendingChecks[gmPlayerId].triggeredTokenId = triggeredTokenId;\n  \n  if (State.pendingChecksByChar) {\n    State.pendingChecksByChar[characterId] = { ...State.pendingChecks[gmPlayerId] };\n  }\n\n  TrapUtils.log(`Skill check state prepared for ${char.get('name')}`, 'debug');\n  return true;\n}\n\n// Show character selection menu\nfunction showCharacterSelectionMenu(token, playerid, triggeredTokenId = null) {\n  const characters = findObjs({ _type: 'character' });\n  const tokenName = token.get('name') || 'Unknown Token';\n  const iconUrl = TrapUtils.getTokenImageURL(token);\n  const tokenIcon = iconUrl === 'üë§' ? 'üë§' : `<img src=\"${iconUrl}\" width=\"20\" height=\"20\">`;\n\n  let menu = `&{template:default} {{name=Select Character for Skill Check}}`;\n  menu += `{{Token=${tokenIcon} **${tokenName}**}}`;\n  menu += `{{Characters=`;\n\n  // Filter to player-controlled characters only\n  const filtered = characters.filter(char => {\n    const controlledBy = (char.get('controlledby') || '').split(',');\n    return controlledBy.some(pid => pid && !TrapUtils.playerIsGM(pid));\n  });\n\n  filtered.forEach(char => {\n    const charName = char.get('name');\n    const charId = char.id;\n    menu += `[${charName}](!trapsystem selectcharacter ${token.id} ${charId} ${playerid} ${triggeredTokenId || ''}) `;\n  });\n\n  menu += `}}`;\n  TrapUtils.chat(menu);\n}\n\n// Handle skill check setup and display\nfunction handleSkillCheck(token, checkIndex, playerid, hideDisplayDCButton = false, hideSetDCButton = false, whisperTo = 'gm', triggeredTokenId = null) {\n  TrapUtils.log(`handleSkillCheck: ${token.id}, checkIndex:${checkIndex}, playerid:${playerid}`, 'debug');\n  const config = TrapUtils.parseTrapNotes(token.get('gmnotes'), token);\n  if (!config || !config.checks || (checkIndex !== 'custom' && checkIndex >= config.checks.length)) {\n    TrapUtils.log('Invalid config or checkIndex', 'debug');\n    return;\n  }\n\n  const check = (checkIndex === 'custom' && State.pendingChecks[playerid]?.config?.checks[0])\n    ? State.pendingChecks[playerid].config.checks[0]\n    : config.checks[checkIndex];\n\n  if (!check) {\n    TrapUtils.log('Check object not found', 'debug');\n    return;\n  }\n\n  const tokenName = token.get('name') || 'Unknown Token';\n  const iconUrl = TrapUtils.getTokenImageURL(token);\n  const tokenIcon = iconUrl === 'üë§' ? 'üë§' : `<img src=\"${iconUrl}\" width=\"20\" height=\"20\">`;\n  const emoji = Config.SKILL_TYPES[check.type] || 'üé≤';\n  const skillType = check.type.replace(/_/g, ' ');\n\n  const existingCheck = State.pendingChecks[playerid] || {};\n\n  // Get character details from triggered token\n  let charId = existingCheck.characterId || null;\n  let charName = existingCheck.characterName || null;\n  if (triggeredTokenId && !charId) {\n    const victimToken = getObj('graphic', triggeredTokenId);\n    if (victimToken) {\n      const victimCharId = victimToken.get('represents');\n      if (victimCharId) {\n        const victimChar = getObj('character', victimCharId);\n        if (victimChar) {\n          charId = victimChar.id;\n          charName = victimChar.get('name');\n        }\n      }\n    }\n  }\n\n  const pendingCheck = {\n    token: token,\n    checkIndex: checkIndex,\n    config: { ...config, checks: [check] },\n    advantage: null,\n    firstRoll: null,\n    playerid: playerid,\n    characterId: charId,\n    characterName: charName,\n    triggeredTokenId: triggeredTokenId || existingCheck.triggeredTokenId\n  };\n  \n  State.pendingChecks[playerid] = pendingCheck;\n  if (pendingCheck.characterId) {\n    State.pendingChecksByChar[pendingCheck.characterId] = pendingCheck;\n  }\n\n  const triggeredTokenParam = pendingCheck.triggeredTokenId ? ` ${pendingCheck.triggeredTokenId}` : '';\n\n  let menu = `&{template:default} {{name=${emoji} ${skillType} Check (DC ${check.dc})}}`;\n  menu += `{{Token=${tokenIcon} **${tokenName}**}}`;\n  menu += `{{Roll=`;\n  menu += `[Advantage](!trapsystem rollcheck ${token.id} ${checkIndex} advantage ${playerid}${triggeredTokenParam}) | `;\n  menu += `[Normal](!trapsystem rollcheck ${token.id} ${checkIndex} normal ${playerid}${triggeredTokenParam}) | `;\n  menu += `[Disadvantage](!trapsystem rollcheck ${token.id} ${checkIndex} disadvantage ${playerid}${triggeredTokenParam})`;\n\n  if (!hideSetDCButton && checkIndex !== 'custom') {\n    menu += ` | [Set DC](!trapsystem setdc ${token.id} ?{New DC|${check.dc}} ${playerid} ${check.type.replace(/ /g, '_')}${triggeredTokenParam})`;\n  }\n  if (!hideDisplayDCButton && !State.displayDCForCheck[playerid]) {\n    menu += ` | [Display DC](!trapsystem displaydc ${token.id} ${checkIndex} ${playerid})`;\n  }\n  menu += `}}`;\n  \n  if (whisperTo === 'gm') {\n    TrapUtils.chat(menu);\n  } else {\n    sendChat('TrapSystem', menu);\n  }\n}\n\n// Handle roll check (advantage/normal/disadvantage)\nfunction handleRollCheck(token, checkIndex, advantage, playerid, modifier = 0, triggeredTokenId = null) {\n  TrapUtils.log(`handleRollCheck: ${token.id}, advantage:${advantage}, playerid:${playerid}`, 'debug');\n  const config = TrapUtils.parseTrapNotes(token.get('gmnotes'), token);\n  if (!config) return;\n\n  const check = checkIndex === 'custom'\n    ? State.pendingChecks[playerid]?.config.checks[0]\n    : config.checks[checkIndex];\n  if (!check) return;\n\n  const tokenName = token.get('name') || 'Unknown Token';\n  const iconUrl = TrapUtils.getTokenImageURL(token);\n  const tokenIcon = iconUrl === 'üë§' ? 'üë§' : `<img src=\"${iconUrl}\" width=\"20\" height=\"20\">`;\n  const emoji = Config.SKILL_TYPES[check.type] || 'üé≤';\n  const skillType = check.type.replace(/_/g, ' ');\n\n  const existingCheck = State.pendingChecks[playerid] || {};\n\n  const pendingCheck = {\n    token: token,\n    checkIndex: checkIndex,\n    config: { ...config, checks: [check] },\n    advantage: advantage,\n    firstRoll: null,\n    playerid: playerid,\n    characterId: existingCheck.characterId,\n    characterName: existingCheck.characterName,\n    triggeredTokenId: triggeredTokenId\n  };\n\n  State.pendingChecks[playerid] = pendingCheck;\n  if (pendingCheck.characterId) {\n    State.pendingChecksByChar[pendingCheck.characterId] = pendingCheck;\n  }\n\n  let rollInstructions = '';\n  let rollNote = '';\n  if (advantage === 'advantage') {\n    rollInstructions = 'Roll with advantage';\n    rollNote = 'Using the higher of two rolls';\n  } else if (advantage === 'disadvantage') {\n    rollInstructions = 'Roll with disadvantage';\n    rollNote = 'Using the lower of two rolls';\n  } else {\n    rollInstructions = 'Roll normally';\n  }\n\n  const showDC = State.displayDCForCheck[playerid] === true;\n  let menu = `&{template:default} {{name=${emoji} Skill Check Required}}`;\n  menu += `{{Token=${tokenIcon} **${tokenName}**}}`;\n  menu += `{{Skill=${skillType}}}`;\n  if (showDC) menu += `{{DC=${check.dc}}}`;\n  menu += `{{Roll Type=${advantage.charAt(0).toUpperCase() + advantage.slice(1)}}}`;\n  if (advantage !== 'normal') {\n    menu += `{{Instructions=${rollInstructions}}}`;\n    menu += `{{Note=${rollNote}}}`;\n  } else {\n    menu += `{{Instructions=Roll 1d20 using your character sheet or /roll 1d20}}`;\n  }\n  sendChat('TrapSystem', menu);\n}\n\n// Show GM response menu after action\nfunction showGMResponseMenu(token, playerid, triggeredTokenId = null) {\n  const config = TrapUtils.parseTrapNotes(token.get('gmnotes'), token);\n  const tokenName = token.get('name') || 'Unknown Token';\n  const iconUrl = TrapUtils.getTokenImageURL(token);\n  const tokenIcon = iconUrl === 'üë§' ? 'üë§' : `<img src=\"${iconUrl}\" width=\"20\" height=\"20\">`;\n  \n  let menu = `&{template:default} {{name=GM Response}}`;\n  menu += `{{Token=${tokenIcon} **${tokenName}**}}`;\n  menu += `{{Action=üí≠ Explained Action}}`;\n\n  let quickActions = [\n    `[‚úÖ Allow Action](!trapsystem allow ${token.id} ${playerid} ${triggeredTokenId || ''})`\n  ];\n\n  if (config.failureMacro) {\n    quickActions.push(`[‚ùå Fail Action](!trapsystem fail ${token.id} ${playerid} ${triggeredTokenId || ''})`);\n  }\n\n  if (config.checks && config.checks.length > 0) {\n    config.checks.forEach((check, index) => {\n      const emoji = Config.SKILL_TYPES[check.type] || 'üé≤';\n      quickActions.push(`[${emoji} ${check.type}](!trapsystem check ${token.id} ${index} ${playerid} ${triggeredTokenId || ''})`);\n    });\n  }\n\n  menu += `{{Quick Actions=${quickActions.join(' | ')}}}`;\n  TrapUtils.chat(menu);\n}\n\n// Handle allow action (success)\nfunction handleAllowAction(token, playerid, triggeredTokenId = null) {\n  const config = TrapUtils.parseTrapNotes(token.get('gmnotes'), token);\n  if (config && config.successMacro) {\n    const trappedToken = getObj('graphic', triggeredTokenId);\n    const tagToIdMap = TrapUtils.buildTagToIdMap(token, trappedToken);\n    TrapUtils.executeMacro(config.successMacro, tagToIdMap);\n    \n    const macroString = config.successMacro.trim();\n    if (macroString.startsWith('!') || macroString.startsWith('$') || macroString.startsWith('#')) {\n      TrapUtils.whisper(playerid, `‚úÖ Success macro executed.`);\n    }\n  } else {\n    TrapUtils.whisper(playerid, '‚ö†Ô∏è No success macro defined.');\n  }\n\n  // Resolve trap state\n  if (triggeredTokenId && State.lockedTokens[triggeredTokenId]) {\n    State.lockedTokens[triggeredTokenId].macroTriggered = true;\n    allowMovement(triggeredTokenId);\n  } else {\n    // Manual interaction - deplete use\n    const trapData = TrapUtils.parseTrapNotes(token.get('gmnotes'), token);\n    if (trapData && trapData.currentUses > 0) {\n      const newUses = trapData.currentUses - 1;\n      TrapUtils.updateTrapUses(token, newUses, trapData.maxUses, newUses > 0);\n      if (newUses <= 0) {\n        TrapUtils.chat('üí• Trap depleted.');\n      }\n    }\n  }\n}\n\n// Handle fail action\nfunction handleFailAction(token, playerid, triggeredTokenId = null) {\n  const config = TrapUtils.parseTrapNotes(token.get('gmnotes'), token);\n  if (config && config.failureMacro) {\n    const trappedToken = getObj('graphic', triggeredTokenId);\n    const tagToIdMap = TrapUtils.buildTagToIdMap(token, trappedToken);\n    TrapUtils.executeMacro(config.failureMacro, tagToIdMap);\n    \n    const macroString = config.failureMacro.trim();\n    if (macroString.startsWith('!') || macroString.startsWith('$') || macroString.startsWith('#')) {\n      TrapUtils.whisper(playerid, `‚ùå Failure macro executed.`);\n    }\n  } else {\n    TrapUtils.whisper(playerid, '‚ö†Ô∏è No failure macro defined.');\n  }\n\n  // Resolve trap state\n  if (triggeredTokenId && State.lockedTokens[triggeredTokenId]) {\n    State.lockedTokens[triggeredTokenId].macroTriggered = true;\n    allowMovement(triggeredTokenId);\n  } else {\n    // Manual interaction - deplete use\n    const trapData = TrapUtils.parseTrapNotes(token.get('gmnotes'), token);\n    if (trapData && trapData.currentUses > 0) {\n      const newUses = trapData.currentUses - 1;\n      TrapUtils.updateTrapUses(token, newUses, trapData.maxUses, newUses > 0);\n      if (newUses <= 0) {\n        TrapUtils.chat('üí• Trap depleted.');\n      }\n    }\n  }\n}\n\n// Stub functions for movement/lock management (will be migrated later)\nfunction markTriggered(tokenId, trapId, macroIdentifier) {\n  TrapUtils.log(`markTriggered: ${tokenId}, ${trapId}, ${macroIdentifier}`, 'debug');\n  // This will be fully implemented when we migrate the movement system\n}\n\nfunction allowMovement(tokenId, suppressMessage = false) {\n  TrapUtils.log(`allowMovement: ${tokenId}`, 'debug');\n  // This will be fully implemented when we migrate the movement system\n}\n\nexport const interaction = {\n  performSkillCheck,\n  handleDetectionAttempt,\n  handleDisarmAttempt,\n  getNearbyCharacters,\n  showInteractionMenu,\n  processInteractionCommand,\n  handleInteraction,\n  prepareSkillCheckState,\n  showCharacterSelectionMenu,\n  handleSkillCheck,\n  handleRollCheck,\n  showGMResponseMenu,\n  handleAllowAction,\n  handleFailAction\n};\n\nexport default interaction;","// src/trap-macros.js\n// Macro execution & export logic\n\nimport TrapUtils from './trap-utils.js';\nimport { Config } from './trap-core.js';\n\n// Build a tag-to-ID mapping for macro placeholder replacement\nfunction buildTagToIdMap(tokens = []) {\n  const tagMap = {};\n  tokens.forEach(token => {\n    if (!token) return;\n    const name = token.get('name') || '';\n    if (name.trim()) {\n      const tag = name.toLowerCase().replace(/[^a-z0-9]/g, '');\n      if (tag) tagMap[tag] = token.id;\n    }\n  });\n  return tagMap;\n}\n\n// Replace macro placeholders with actual token IDs\nfunction replaceMacroPlaceholdersWithTags(macroString, tagMap = {}) {\n  if (!macroString || typeof macroString !== 'string') return macroString;\n  \n  let processed = macroString;\n  \n  // Replace @{target|...} patterns\n  processed = processed.replace(/@\\{target\\|([^}]+)\\}/g, (match, property) => {\n    return `@{target|${property}}`;\n  });\n  \n  // Replace @{selected|...} patterns  \n  processed = processed.replace(/@\\{selected\\|([^}]+)\\}/g, (match, property) => {\n    return `@{selected|${property}}`;\n  });\n  \n  // Replace custom tags like @{goblin|token_id}\n  Object.keys(tagMap).forEach(tag => {\n    const regex = new RegExp(`@\\\\{${tag}\\\\|([^}]+)\\\\}`, 'gi');\n    processed = processed.replace(regex, (match, property) => {\n      if (property === 'token_id') {\n        return tagMap[tag];\n      }\n      return `@{${tagMap[tag]}|${property}}`;\n    });\n  });\n  \n  return processed;\n}\n\n// Execute a macro string (delegates to Roll20's sendChat)\nfunction executeMacro(macroString, characterName = 'TrapSystem') {\n  if (!macroString || typeof macroString !== 'string') {\n    TrapUtils.log('Cannot execute empty macro', 'error');\n    return false;\n  }\n  \n  try {\n    // Handle different macro types\n    if (macroString.startsWith('#')) {\n      // Roll20 macro - remove # and execute\n      const macroName = macroString.slice(1);\n      sendChat(characterName, `#${macroName}`);\n    } else if (macroString.startsWith('!')) {\n      // API command\n      sendChat(characterName, macroString);\n    } else if (macroString.startsWith('&{')) {\n      // Roll template\n      sendChat(characterName, macroString);\n    } else {\n      // Regular chat message\n      sendChat(characterName, macroString);\n    }\n    \n    TrapUtils.log(`Executed macro: ${TrapUtils.getSafeMacroDisplayName(macroString)}`, 'success');\n    return true;\n  } catch (error) {\n    TrapUtils.log(`Macro execution failed: ${error.message}`, 'error');\n    return false;\n  }\n}\n\n// Process and execute trap macros with token context\nfunction executeTrapMacros(trapToken, macroList = [], targetTokens = []) {\n  if (!trapToken || !Array.isArray(macroList)) return;\n  \n  const tagMap = buildTagToIdMap([trapToken, ...targetTokens]);\n  \n  macroList.forEach((macro, index) => {\n    if (!macro) return;\n    \n    const processedMacro = replaceMacroPlaceholdersWithTags(macro, tagMap);\n    \n    // Add a small delay between macros to prevent spam\n    setTimeout(() => {\n      executeMacro(processedMacro, trapToken.get('name') || 'Trap');\n    }, index * 100);\n  });\n}\n\n// Export trap configuration as a macro\nfunction exportTrapAsMacro(trapToken) {\n  if (!TrapUtils.validateTrapToken(trapToken, 'exportTrapAsMacro')) return null;\n  \n  const legacyUtils = globalThis.TrapSystem && globalThis.TrapSystem.utils;\n  if (!legacyUtils || typeof legacyUtils.parseTrapNotes !== 'function') {\n    TrapUtils.log('Legacy utilities not available for export', 'error');\n    return null;\n  }\n  \n  const trapData = legacyUtils.parseTrapNotes(trapToken.get('gmnotes'), trapToken);\n  if (!trapData) {\n    TrapUtils.log('Invalid trap configuration for export', 'error');\n    return null;\n  }\n  \n  // Generate macro command to recreate this trap\n  const macroCommand = `!trapsystem create-trap --name \"${trapData.name || 'Exported Trap'}\" --trigger \"${trapData.triggerType || 'movement'}\" --dc ${trapData.dc || 15}`;\n  \n  return {\n    name: `Create: ${trapData.name || 'Trap'}`,\n    command: macroCommand,\n    description: `Creates a trap: ${trapData.name || 'Unnamed'}`\n  };\n}\n\n// Batch export multiple traps\nfunction exportMultipleTraps(trapTokens = []) {\n  const exports = [];\n  \n  trapTokens.forEach(token => {\n    const exported = exportTrapAsMacro(token);\n    if (exported) exports.push(exported);\n  });\n  \n  return exports;\n}\n\nexport const macros = {\n  buildTagToIdMap,\n  replaceMacroPlaceholdersWithTags,\n  executeMacro,\n  executeTrapMacros,\n  exportTrapAsMacro,\n  exportMultipleTraps\n};\n\nexport default macros;","// Entry point that stitches the modular files together.\n// For now we export an empty scaffold TrapSystem with utilities.\n\nimport { Config } from './trap-core.js';\nimport TrapUtils from './trap-utils.js';\nimport { triggers } from './trap-triggers.js';\nimport { MovementDetector } from './trap-detector.js';\nimport { PassiveDetection } from './trap-detection.js';\nimport { Commands } from './trap-commands.js';\n\n// Placeholder imports ‚Äì these modules will gradually be filled out.\nimport './trap-core.js';\nimport './trap-utils.js';\nimport detector from './trap-detector.js';\nimport interactionSystem from './trap-interaction.js';\nimport macroSystem from './trap-macros.js';\nimport uiSystem from './trap-ui.js';\n\nconst TrapSystem = {\n  utils: TrapUtils,\n  config: Config,\n  state: Config.state,\n  // Namespaces to be wired up in later phases\n  core: { Config, state: Config.state },\n  detection: {\n    movement: detector,\n    passive: PassiveDetection\n  },\n  macros: macroSystem,\n  ui: uiSystem\n};\n\n// Global state for the TrapSystem v2\nglobalThis.TrapSystemV2 = {\n    Config,\n    TrapUtils,\n    triggers,\n    PassiveDetection,\n    interactionSystem,\n    MovementDetector,\n    Commands\n};\n\n// Expose main API for Roll20\nglobalThis.TrapSystem = {\n    state: Config.state,\n    config: Config,\n    utils: TrapUtils,\n    triggers: triggers,\n    menu: interactionSystem,\n    detector: MovementDetector,\n    passive: PassiveDetection,\n    commands: Commands\n};\n\n// =====================================================================\n// EVENT HANDLERS\n// =====================================================================\n\n// Main chat message handler\nif (typeof on !== 'undefined') {\n    on(\"chat:message\", (msg) => {\n        try {\n            Commands.handleChatMessage(msg);\n        } catch (error) {\n            TrapUtils.log(`Error in chat message handler: ${error.message}`, 'error');\n        }\n    });\n\n    // Token movement and change handler\n    on(\"change:graphic\", async (obj, prev) => {\n        if (!obj || !prev) return;\n        try {\n            // Token Locking Logic - prevent locked tokens from moving\n            if (Config.state.lockedTokens[obj.id] && (obj.get(\"left\") !== prev.left || obj.get(\"top\") !== prev.top)) {\n                obj.set({ left: prev.left, top: prev.top });\n                return;\n            }\n\n            // Movement Trigger Logic - check for trap triggers and passive detection\n            if ((obj.get(\"left\") !== prev.left || obj.get(\"top\") !== prev.top) && !TrapUtils.isTrap(obj)) {\n                // Run passive detection checks\n                await PassiveDetection.runPassiveChecksForToken(obj);\n                // Check for trap triggers\n                await MovementDetector.checkTrapTrigger(obj, prev.left, prev.top);\n            }\n\n            // Ignore Traps Status Change - handle blue marker removal\n            if (obj.get(\"statusmarkers\") !== prev.statusmarkers) {\n                const curMarkers = obj.get(\"statusmarkers\") || \"\";\n                const prevMarkers = prev.statusmarkers || \"\";\n                if (prevMarkers.includes(\"blue\") && !curMarkers.includes(\"blue\")) {\n                    let notes = obj.get(\"gmnotes\") || \"\";\n                    if (notes.includes(\"{ignoretraps}\")) {\n                        obj.set(\"gmnotes\", notes.replace(/\\{ignoretraps\\}/g, ''));\n                        TrapUtils.chat(`Removed ignoretraps tag from ${obj.get(\"name\")||\"token\"} (blue marker removed)`);\n                    }\n                }\n            }\n\n            // Trap Token Changes - handle GM notes changes, movement, resizing\n            const currentNotesRaw = obj.get(\"gmnotes\") || \"\";\n            const prevNotesRaw = prev.gmnotes || \"\";\n\n            // Decode both notes to normalize them before comparison\n            let currentNotes, prevNotes;\n            try { currentNotes = decodeURIComponent(currentNotesRaw); } catch(e) { currentNotes = currentNotesRaw; }\n            try { prevNotes = decodeURIComponent(prevNotesRaw); } catch(e) { prevNotes = prevNotesRaw; }\n\n            const notesHaveChanged = prev.hasOwnProperty('gmnotes') && currentNotes !== prevNotes;\n            const isCurrentlyTrap = currentNotes.includes(\"!traptrigger\");\n            const wasPreviouslyTrap = prevNotes ? prevNotes.includes(\"!traptrigger\") : false;\n\n            // GM Notes were changed\n            if (notesHaveChanged) {\n                if (wasPreviouslyTrap && !isCurrentlyTrap) {\n                    // Trap config removed - clean up visuals\n                    TrapUtils.log(`Trap config removed from ${obj.id}. Clearing visuals.`, 'info');\n                    obj.set({\n                        bar1_value: null, bar1_max: null, showplayers_bar1: false,\n                        aura1_color: \"transparent\", aura1_radius: \"\", showplayers_aura1: false,\n                        bar2_value: null, bar2_max: null, showplayers_bar2: false,\n                        aura2_color: \"transparent\", aura2_radius: \"\", showplayers_aura2: false\n                    });\n                } else if (isCurrentlyTrap) {\n                    // Parse and update trap visuals\n                    TrapUtils.parseTrapNotes(currentNotesRaw, obj);\n                    PassiveDetection.updateAuraForDetectionRange(obj);\n                }\n            }\n            \n            // Trap token movement, resizing, or rotation\n            if (isCurrentlyTrap) {\n                const sizeChanged = obj.get(\"width\") !== prev.width || obj.get(\"height\") !== prev.height;\n                const positionOrRotationChanged = obj.get(\"left\") !== prev.left || obj.get(\"top\") !== prev.top || obj.get(\"rotation\") !== prev.rotation;\n\n                if (sizeChanged) {\n                    // Recalculate auras for resized trap\n                    obj.set({ aura1_radius: TrapUtils.calculateDynamicAuraRadius(obj) });\n                    PassiveDetection.updateAuraForDetectionRange(obj);\n                }\n\n                if ((sizeChanged || positionOrRotationChanged) && Object.values(Config.state.lockedTokens).some(lock => lock.trapToken === obj.id)) {\n                    // Update positions of tokens locked to this trap\n                    for (const lockedTokenId in Config.state.lockedTokens) {\n                        const lockData = Config.state.lockedTokens[lockedTokenId];\n                        if (lockData.trapToken === obj.id) {\n                            const lockedToken = getObj(\"graphic\", lockedTokenId);\n                            if (lockedToken && lockData.relativeOffset) {\n                                const newTrapCenter = { x: obj.get('left'), y: obj.get('top') };\n                                const newTrapRotationRad = (obj.get('rotation') || 0) * (Math.PI / 180);\n                                const cosRad = Math.cos(newTrapRotationRad);\n                                const sinRad = Math.sin(newTrapRotationRad);\n\n                                const rotatedOffsetX = lockData.relativeOffset.x * cosRad - lockData.relativeOffset.y * sinRad;\n                                const rotatedOffsetY = lockData.relativeOffset.x * sinRad + lockData.relativeOffset.y * cosRad;\n\n                                lockedToken.set({\n                                    left: newTrapCenter.x + rotatedOffsetX,\n                                    top: newTrapCenter.y + rotatedOffsetY\n                                });\n                            }\n                        }\n                    }\n                }\n            }\n        } catch (err) {\n            TrapUtils.log(`Error in change:graphic handler: ${err.message}`, 'error');\n        }\n    });\n\n    // Door opening events for passive detection\n    on(\"change:door\", (obj, prev) => {\n        try {\n            const wasJustOpened = obj.get('isOpen') && !prev.isOpen;\n            if (wasJustOpened) {\n                TrapUtils.log(`Modern door ${obj.id} was opened. Running passive checks for all tokens on page.`, 'info');\n                PassiveDetection.runPageWidePassiveChecks(obj.get('_pageid'));\n            }\n        } catch (err) {\n            TrapUtils.log(`Error in change:door handler: ${err.message}`, 'error');\n        }\n    });\n\n    // Legacy door opening events\n    on(\"change:path\", (obj, prev) => {\n        try {\n            const isLegacyDoor = obj.get('layer') === 'walls' && typeof obj.get('door_open') !== 'undefined';\n            if (isLegacyDoor) {\n                const wasLegacyDoorOpened = obj.get('door_open') && !prev.door_open;\n                if (wasLegacyDoorOpened) {\n                    TrapUtils.log(`Legacy door ${obj.id} was opened. Running passive checks for all tokens on page.`, 'info');\n                    PassiveDetection.runPageWidePassiveChecks(obj.get('_pageid'));\n                }\n            }\n        } catch (err) {\n            TrapUtils.log(`Error in change:path handler: ${err.message}`, 'error');\n        }\n    });\n\n    // System ready handler\n    on(\"ready\", () => {\n        TrapUtils.log(\"TrapSystem v2.0 Ready!\", 'success');\n        \n        // Register with CommandMenu if available\n        if (typeof CommandMenu !== 'undefined' && CommandMenu.utils && CommandMenu.utils.addInitStatus) {\n            CommandMenu.utils.addInitStatus('TrapSystem', 'success', null, 'success');\n        }\n    });\n}\n\nconsole.log('üì¶ TrapSystem v2 scaffold loaded');\nconsole.log('üîß Config loaded:', Config.AURA_COLORS ? 'Complete' : 'Incomplete');\nconsole.log('TrapSystem v2.0 loaded successfully!');\n\nexport { TrapSystem };"],"names":["buildTagToIdMap","executeMacro","detector","macroSystem","uiSystem","interactionSystem"],"mappings":"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"}